{
    "took": 7,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 382,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2p.nix",
                    "option_name": "services.i2p.enable",
                    "option_description": "<rendered-html><p>Whether to enable I2P router.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.address",
                    "option_description": "<rendered-html><p>Your external IP or hostname.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.addressbook.defaulturl",
                    "option_description": "<rendered-html><p>AddressBook subscription URL for initial setup</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"http://joajgazyztfssty4w2on5oaqksz6tqoxbduy553y34mf4byv6gpq.b32.i2p/export/alive-hosts.txt\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.addressbook.subscriptions",
                    "option_description": "<rendered-html><p>AddressBook subscription URLs</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"http://inr.i2p/export/alive-hosts.txt\"\n  \"http://i2p-projekt.i2p/hosts.txt\"\n  \"http://stats.i2p/cgi-bin/newhosts.txt\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.bandwidth",
                    "option_description": "<rendered-html><p>Set a router bandwidth limit integer in KBps. If not set, <code\nclass=\"interpreted-text\" role=\"command\">i2pd</code> defaults to\n32KBps.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.dataDir",
                    "option_description": "<rendered-html><p>Alternative path to storage of i2pd data (RI, keys, peer profiles,\n\u2026)</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.enable",
                    "option_description": "<rendered-html><p>Enables I2Pd as a running service upon activation. Please read <a\nhref=\"https://i2pd.readthedocs.io/en/latest/\">https://i2pd.readthedocs.io/en/latest/</a>\nfor further configuration help.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.enableIPv4",
                    "option_description": "<rendered-html><p>Whether to enable IPv4 connectivity.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.enableIPv6",
                    "option_description": "<rendered-html><p>Whether to enable IPv6 connectivity.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.exploratory.inbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for exploratory tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.exploratory.inbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous exploratory tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.exploratory.outbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for exploratory tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.exploratory.outbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous exploratory tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.family",
                    "option_description": "<rendered-html><p>Specify a family the router belongs to.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.floodfill",
                    "option_description": "<rendered-html><p>If the router is declared to be unreachable and needs introduction\nnodes.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.ifname",
                    "option_description": "<rendered-html><p>Network interface to bind to.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.ifname4",
                    "option_description": "<rendered-html><p>IPv4 interface to bind to.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.ifname6",
                    "option_description": "<rendered-html><p>IPv6 interface to bind to.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels",
                    "option_description": "<rendered-html><p>Serve something on I2P network at port and delegate requests to\naddress inPort.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.accessList",
                    "option_description": "<rendered-html><p>I2P nodes that are allowed to connect to this service.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.address",
                    "option_description": "<rendered-html><p>Bind address for \u2039name\u203a endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.crypto.tagsToSend",
                    "option_description": "<rendered-html><p>Number of ElGamal/AES tags to send.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "40",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.destination",
                    "option_description": "<rendered-html><p>Remote endpoint, I2P hostname or b32.i2p address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable \u2039name\u203a.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.inPort",
                    "option_description": "<rendered-html><p>Service port. Default to the tunnel\u2019s listen port.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.inbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for \u2039name\u203a tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.inbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous \u2039name\u203a tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.keys",
                    "option_description": "<rendered-html><p>Keyset used for tunnel identity.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a-keys.dat\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.outbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for \u2039name\u203a tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.outbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous \u2039name\u203a tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.inTunnels.<name>.port",
                    "option_description": "<rendered-html><p>Bind port for \u2039name\u203a endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.limits.coreSize",
                    "option_description": "<rendered-html><p>Maximum size of corefile in Kb (0 - use system limit).</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.limits.ntcpHard",
                    "option_description": "<rendered-html><p>Maximum number of active transit sessions.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.limits.ntcpSoft",
                    "option_description": "<rendered-html><p>Threshold to start probabalistic backoff with ntcp sessions (default:\nuse system limit).</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.limits.ntcpThreads",
                    "option_description": "<rendered-html><p>Maximum number of threads used by NTCP DH worker.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.limits.openFiles",
                    "option_description": "<rendered-html><p>Maximum number of open files (0 - use system default).</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.limits.transittunnels",
                    "option_description": "<rendered-html><p>Maximum number of active transit sessions.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "2500",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.logCLFTime",
                    "option_description": "<rendered-html><p>Whether to enable full CLF-formatted date and time to log.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.logLevel",
                    "option_description": "<rendered-html><p>The log level. <code class=\"interpreted-text\"\nrole=\"command\">i2pd</code> defaults to \u201cinfo\u201d but that generates copious\namounts of log messages.</p>\n<p>We default to \u201cerror\u201d which is similar to the default log level of\n<code class=\"interpreted-text\" role=\"command\">tor</code>.</p>\n</rendered-html>",
                    "option_type": "one of \"debug\", \"info\", \"warn\", \"error\"",
                    "option_default": "\"error\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.nat",
                    "option_description": "<rendered-html><p>Whether to enable NAT bypass.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.netid",
                    "option_description": "<rendered-html><p>I2P overlay netid.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "2",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.notransit",
                    "option_description": "<rendered-html><p>Tells the router to not accept transit tunnels during startup.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.ntcp",
                    "option_description": "<rendered-html><p>Whether to enable ntcp.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.ntcp2.enable",
                    "option_description": "<rendered-html><p>Whether to enable NTCP2.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.ntcp2.port",
                    "option_description": "<rendered-html><p>Port to listen for incoming NTCP2 connections (0=auto).</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.ntcp2.published",
                    "option_description": "<rendered-html><p>Whether to enable NTCP2 publication.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.ntcpProxy",
                    "option_description": "<rendered-html><p>Proxy URL for NTCP transport.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels",
                    "option_description": "<rendered-html><p>Connect to someone as a client and establish a local accept\nendpoint</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.address",
                    "option_description": "<rendered-html><p>Bind address for \u2039name\u203a endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.crypto.tagsToSend",
                    "option_description": "<rendered-html><p>Number of ElGamal/AES tags to send.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "40",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.destination",
                    "option_description": "<rendered-html><p>Remote endpoint, I2P hostname or b32.i2p address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.destinationPort",
                    "option_description": "<rendered-html><p>Connect to particular port at destination.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable \u2039name\u203a.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.inbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for \u2039name\u203a tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.inbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous \u2039name\u203a tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.keys",
                    "option_description": "<rendered-html><p>Keyset used for tunnel identity.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a-keys.dat\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.outbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for \u2039name\u203a tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.outbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous \u2039name\u203a tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.outTunnels.<name>.port",
                    "option_description": "<rendered-html><p>Bind port for \u2039name\u203a endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.package",
                    "option_description": "<rendered-html><p>The i2pd package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.i2pd",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.port",
                    "option_description": "<rendered-html><p>I2P listen port. If no one is given the router will pick between 9111\nand 30777.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.precomputation.elgamal",
                    "option_description": "<rendered-html><p>Whenever to use precomputated tables for ElGamal. <code\nclass=\"interpreted-text\" role=\"command\">i2pd</code> defaults to\n<code>false</code> to save 64M of memory (and looses some\nperformance).</p>\n<p>We default to <code>true</code> as that is what most users want\nanyway.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.bob.address",
                    "option_description": "<rendered-html><p>Bind address for bob endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.bob.enable",
                    "option_description": "<rendered-html><p>Whether to enable bob.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.bob.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bob\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.bob.port",
                    "option_description": "<rendered-html><p>Bind port for bob endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "2827",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.http.address",
                    "option_description": "<rendered-html><p>Bind address for http endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.http.auth",
                    "option_description": "<rendered-html><p>Whether to enable webconsole authentication.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.http.enable",
                    "option_description": "<rendered-html><p>Whether to enable http.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.http.hostname",
                    "option_description": "<rendered-html><p>Expected hostname for WebUI.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.http.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"http\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.http.pass",
                    "option_description": "<rendered-html><p>Password for webconsole access.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"i2pd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.http.port",
                    "option_description": "<rendered-html><p>Bind port for http endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "7070",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.http.strictHeaders",
                    "option_description": "<rendered-html><p>Enable strict host checking on WebUI.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.http.user",
                    "option_description": "<rendered-html><p>Username for webconsole access</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"i2pd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.address",
                    "option_description": "<rendered-html><p>Bind address for httpproxy endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.enable",
                    "option_description": "<rendered-html><p>Whether to enable httpproxy.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.inbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for httpproxy tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.inbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous httpproxy tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.keys",
                    "option_description": "<rendered-html><p>File to persist HTTPPROXY keys.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"httpproxy-keys.dat\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.latency.max",
                    "option_description": "<rendered-html><p>Max latency for tunnels.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.latency.min",
                    "option_description": "<rendered-html><p>Min latency for tunnels.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"httpproxy\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.outbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for httpproxy tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.outbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous httpproxy tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.outproxy",
                    "option_description": "<rendered-html><p>Upstream outproxy bind address.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.httpProxy.port",
                    "option_description": "<rendered-html><p>Bind port for httpproxy endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "4444",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.i2cp.address",
                    "option_description": "<rendered-html><p>Bind address for i2cp endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.i2cp.enable",
                    "option_description": "<rendered-html><p>Whether to enable i2cp.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.i2cp.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"i2cp\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.i2cp.port",
                    "option_description": "<rendered-html><p>Bind port for i2cp endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "7654",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.i2pControl.address",
                    "option_description": "<rendered-html><p>Bind address for i2pcontrol endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.i2pControl.enable",
                    "option_description": "<rendered-html><p>Whether to enable i2pcontrol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.i2pControl.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"i2pcontrol\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.i2pControl.port",
                    "option_description": "<rendered-html><p>Bind port for i2pcontrol endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "7650",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.sam.address",
                    "option_description": "<rendered-html><p>Bind address for sam endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.sam.enable",
                    "option_description": "<rendered-html><p>Whether to enable sam.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.sam.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"sam\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.sam.port",
                    "option_description": "<rendered-html><p>Bind port for sam endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "7656",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.address",
                    "option_description": "<rendered-html><p>Bind address for socksproxy endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.enable",
                    "option_description": "<rendered-html><p>Whether to enable socksproxy.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.inbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for socksproxy tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.inbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous socksproxy tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.keys",
                    "option_description": "<rendered-html><p>File to persist SOCKSPROXY keys.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"socksproxy-keys.dat\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.latency.max",
                    "option_description": "<rendered-html><p>Max latency for tunnels.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.latency.min",
                    "option_description": "<rendered-html><p>Min latency for tunnels.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"socksproxy\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.outbound.length",
                    "option_description": "<rendered-html><p>Guaranteed minimum hops for socksproxy tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.outbound.quantity",
                    "option_description": "<rendered-html><p>Number of simultaneous socksproxy tunnels.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.outproxy",
                    "option_description": "<rendered-html><p>Upstream outproxy bind address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.outproxyEnable",
                    "option_description": "<rendered-html><p>Whether to enable SOCKS outproxy.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.outproxyPort",
                    "option_description": "<rendered-html><p>Upstream outproxy bind port.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "4444",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.proto.socksProxy.port",
                    "option_description": "<rendered-html><p>Bind port for socksproxy endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "4447",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.reseed.file",
                    "option_description": "<rendered-html><p>Full path to SU3 file to reseed from.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.reseed.floodfill",
                    "option_description": "<rendered-html><p>Path to router info of floodfill to reseed from.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHT6i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.reseed.proxy",
                    "option_description": "<rendered-html><p>URL for reseed proxy, supports http/socks.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.reseed.urls",
                    "option_description": "<rendered-html><p>Reseed URLs.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.reseed.verify",
                    "option_description": "<rendered-html><p>Whether to enable SU3 signature verification.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.reseed.zipfile",
                    "option_description": "<rendered-html><p>Path to local .zip file to reseed from.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.share",
                    "option_description": "<rendered-html><p>Limit of transit traffic from max bandwidth in percents.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "100",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.ssu",
                    "option_description": "<rendered-html><p>Whether to enable ssu.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.trust.enable",
                    "option_description": "<rendered-html><p>Whether to enable explicit trust options.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.trust.family",
                    "option_description": "<rendered-html><p>Router Family to trust for first hops.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.trust.hidden",
                    "option_description": "<rendered-html><p>Whether to enable router concealment.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.trust.routers",
                    "option_description": "<rendered-html><p>Only connect to the listed routers.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.upnp.enable",
                    "option_description": "<rendered-html><p>Whether to enable UPnP service discovery.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.upnp.name",
                    "option_description": "<rendered-html><p>Name i2pd appears in UPnP forwardings list.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"I2Pd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.websocket.address",
                    "option_description": "<rendered-html><p>Bind address for websockets endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.websocket.enable",
                    "option_description": "<rendered-html><p>Whether to enable websockets.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.websocket.name",
                    "option_description": "<rendered-html><p>The endpoint name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"websockets\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.websocket.port",
                    "option_description": "<rendered-html><p>Bind port for websockets endpoint.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "7666",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.yggdrasil.address",
                    "option_description": "<rendered-html><p>Your local yggdrasil address. Specify it if you want to bind your\nrouter to a particular address.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/i2pd.nix",
                    "option_name": "services.i2pd.yggdrasil.enable",
                    "option_description": "<rendered-html><p>Whether to enable Yggdrasil.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.admin.password",
                    "option_description": "<rendered-html><p>Password used for all administration functions.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.admin.user",
                    "option_description": "<rendered-html><p>Username used for all administration functions.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"admin\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.enable",
                    "option_description": "<rendered-html><p>Whether to enable Icecast server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.extraConf",
                    "option_description": "<rendered-html><p>icecast.xml content.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.group",
                    "option_description": "<rendered-html><p>Group privileges for the server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nogroup\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.hostname",
                    "option_description": "<rendered-html><p>DNS name or IP address that will be used for the stream directory\nlookups or possibly the playlist generation if a Host header is not\nprovided.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "config.networking.domain",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.listen.address",
                    "option_description": "<rendered-html><p>Address Icecast will listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"::\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.listen.port",
                    "option_description": "<rendered-html><p>TCP port that will be used to accept client connections.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.logDir",
                    "option_description": "<rendered-html><p>Base directory used for logging.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/log/icecast\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/icecast.nix",
                    "option_name": "services.icecast.user",
                    "option_description": "<rendered-html><p>User privileges for the server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nobody\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.cacheLimit",
                    "option_description": "<rendered-html><p>Maximum size in Megabytes of cache used to store compile environments\nof compile clients.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "256",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.enable",
                    "option_description": "<rendered-html><p>Whether to enable Icecream Daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.extraArgs",
                    "option_description": "<rendered-html><p>Additional command line parameters.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-v\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.hostname",
                    "option_description": "<rendered-html><p>Hostname of the daemon in the icecream infrastructure.</p>\n<p>Uses the hostname retrieved via uname if set to null.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.maxProcesses",
                    "option_description": "<rendered-html><p>Maximum number of compile jobs started in parallel for this\ndaemon.</p>\n<p>Uses the number of CPUs if set to null.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.netName",
                    "option_description": "<rendered-html><p>Network name to connect to. A scheduler with the same name needs to\nbe running.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ICECREAM\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.nice",
                    "option_description": "<rendered-html><p>The level of niceness to use.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.noRemote",
                    "option_description": "<rendered-html><p>Prevent jobs from other nodes being scheduled on this daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.openBroadcast",
                    "option_description": "<rendered-html><p>Whether to automatically open the firewall for scheduler\ndiscovery.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.openFirewall",
                    "option_description": "<rendered-html><p>Whether to automatically open receive port in the firewall.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.package",
                    "option_description": "<rendered-html><p>The icecream package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.icecream",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.schedulerHost",
                    "option_description": "<rendered-html><p>Explicit scheduler hostname, useful in firewalled environments.</p>\n<p>Uses scheduler autodiscovery via broadcast if set to null.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/daemon.nix",
                    "option_name": "services.icecream.daemon.user",
                    "option_description": "<rendered-html><p>User to run the icecream daemon as. Set to root to enable receive of\nremote compile environments.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"icecc\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/scheduler.nix",
                    "option_name": "services.icecream.scheduler.enable",
                    "option_description": "<rendered-html><p>Whether to enable Icecream Scheduler.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/scheduler.nix",
                    "option_name": "services.icecream.scheduler.extraArgs",
                    "option_description": "<rendered-html><p>Additional command line parameters</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-v\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/scheduler.nix",
                    "option_name": "services.icecream.scheduler.netName",
                    "option_description": "<rendered-html><p>Network name for the icecream scheduler.</p>\n<p>Uses the default ICECREAM if null.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/scheduler.nix",
                    "option_name": "services.icecream.scheduler.openFirewall",
                    "option_description": "<rendered-html><p>Whether to automatically open the daemon port in the firewall.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/scheduler.nix",
                    "option_name": "services.icecream.scheduler.openTelnet",
                    "option_description": "<rendered-html><p>Whether to open the telnet TCP port on 8766.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/scheduler.nix",
                    "option_name": "services.icecream.scheduler.package",
                    "option_description": "<rendered-html><p>The icecream package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.icecream",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/scheduler.nix",
                    "option_name": "services.icecream.scheduler.persistentClientConnection",
                    "option_description": "<rendered-html><p>Whether to prevent clients from connecting to a better scheduler.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/icecream/scheduler.nix",
                    "option_name": "services.icecream.scheduler.port",
                    "option_description": "<rendered-html><p>Server port to listen for icecream daemon requests.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8765",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.authentications",
                    "option_description": "<rendered-html><p>authentication.ini contents. Will automatically be converted to a\n.ini file.</p>\n<p>If the value is null, no authentication.ini is created and you can\nmodify it manually (e.g. via the web interface).</p>\n</rendered-html>",
                    "option_type": "null or (attribute set)",
                    "option_default": "null",
                    "option_example": "{\n  icingaweb = {\n    backend = \"db\";\n    resource = \"icingaweb_db\";\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.enable",
                    "option_description": "<rendered-html><p>Whether to enable the icingaweb2 web interface.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.generalConfig",
                    "option_description": "<rendered-html><p>config.ini contents. Will automatically be converted to a .ini file.\nIf you don\u2019t set global.module_path, the module will take care of\nit.</p>\n<p>If the value is null, no config.ini is created and you can modify it\nmanually (e.g. via the web interface). Note that you need to update\nmodule_path manually.</p>\n</rendered-html>",
                    "option_type": "null or (attribute set)",
                    "option_default": "null",
                    "option_example": "{\n  general = {\n    config_resource = \"icingaweb_db\";\n    showStacktraces = 1;\n  };\n  logging = {\n    level = \"CRITICAL\";\n    log = \"syslog\";\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.groupBackends",
                    "option_description": "<rendered-html><p>groups.ini contents. Will automatically be converted to a .ini\nfile.</p>\n<p>If the value is null, no groups.ini is created and you can modify it\nmanually (e.g. via the web interface).</p>\n</rendered-html>",
                    "option_type": "null or (attribute set)",
                    "option_default": "null",
                    "option_example": "{\n  icingaweb = {\n    backend = \"db\";\n    resource = \"icingaweb_db\";\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.libraryPaths",
                    "option_description": "<rendered-html><p>Libraries to add to the Icingaweb2 library path. The name of the\nattribute is the name of the library, the value is the package to\nadd.</p>\n</rendered-html>",
                    "option_type": "attribute set of package",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.modulePackages",
                    "option_description": "<rendered-html><p>Name-package attrset of Icingaweb 2 modules packages to enable.</p>\n<p>If you enable modules manually (e.g. via the web ui), they will not\nbe touched.</p>\n</rendered-html>",
                    "option_type": "attribute set of package",
                    "option_default": "{ }",
                    "option_example": "{\n  \"snow\" = icingaweb2Modules.theme-snow;\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.modules.doc.enable",
                    "option_description": "<rendered-html><p>Whether to enable the icingaweb2 doc module.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.modules.migrate.enable",
                    "option_description": "<rendered-html><p>Whether to enable the icingaweb2 migrate module.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.backends",
                    "option_description": "<rendered-html><p>Monitoring backends to define</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{\n  icinga = {\n    resource = \"icinga_ido\";\n  };\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.backends.<name>.disabled",
                    "option_description": "<rendered-html><p>Disable this backend</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.backends.<name>.resource",
                    "option_description": "<rendered-html><p>Name of the IDO resource</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.enable",
                    "option_description": "<rendered-html><p>Whether to enable the icingaweb2 monitoring module.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.generalConfig.mutable",
                    "option_description": "<rendered-html><p>Make config.ini of the monitoring module mutable (e.g. via the web\ninterface).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.generalConfig.protectedVars",
                    "option_description": "<rendered-html><p>List of string patterns for custom variables which should be excluded\nfrom user\u2019s view.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"*pw*\"\n  \"*pass*\"\n  \"community\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.mutableBackends",
                    "option_description": "<rendered-html><p>Make backends.ini of the monitoring module mutable (e.g. via the web\ninterface).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.mutableTransports",
                    "option_description": "<rendered-html><p>Make commandtransports.ini of the monitoring module mutable (e.g. via\nthe web interface).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.transports",
                    "option_description": "<rendered-html><p>Command transports to define</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.transports.<name>.host",
                    "option_description": "<rendered-html><p>Host for the api or remote transport</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.transports.<name>.instance",
                    "option_description": "<rendered-html><p>Assign a icinga instance to this transport</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.transports.<name>.password",
                    "option_description": "<rendered-html><p>Password for the api transport</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.transports.<name>.path",
                    "option_description": "<rendered-html><p>Path to the socket for local or remote transports</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.transports.<name>.port",
                    "option_description": "<rendered-html><p>Port to connect to for the api or remote transport</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.transports.<name>.resource",
                    "option_description": "<rendered-html><p>SSH identity resource for the remote transport</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.transports.<name>.type",
                    "option_description": "<rendered-html><p>Type of this transport</p>\n</rendered-html>",
                    "option_type": "one of \"api\", \"local\", \"remote\"",
                    "option_default": "\"api\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix",
                    "option_name": "services.icingaweb2.modules.monitoring.transports.<name>.username",
                    "option_description": "<rendered-html><p>Username for the api or remote transport</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.modules.setup.enable",
                    "option_description": "<rendered-html><p>Whether to enable the icingaweb2 setup module.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.modules.test.enable",
                    "option_description": "<rendered-html><p>Whether to enable the icingaweb2 test module.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.modules.translation.enable",
                    "option_description": "<rendered-html><p>Whether to enable the icingaweb2 translation module.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.pool",
                    "option_description": "<rendered-html><p>Name of existing PHP-FPM pool that is used to run Icingaweb2. If not\nspecified, a pool will automatically created with default values.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"icingaweb2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.resources",
                    "option_description": "<rendered-html><p>resources.ini contents. Will automatically be converted to a .ini\nfile.</p>\n<p>If the value is null, no resources.ini is created and you can modify\nit manually (e.g. via the web interface). Note that if you set passwords\nhere, they will go into the nix store.</p>\n</rendered-html>",
                    "option_type": "null or (attribute set)",
                    "option_default": "null",
                    "option_example": "{\n  icingaweb_db = {\n    db = \"mysql\";\n    dbname = \"icingaweb2\";\n    host = \"localhost\";\n    password = \"icingaweb2\";\n    type = \"db\";\n    username = \"icingaweb2\";\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.roles",
                    "option_description": "<rendered-html><p>roles.ini contents. Will automatically be converted to a .ini\nfile.</p>\n<p>If the value is null, no roles.ini is created and you can modify it\nmanually (e.g. via the web interface).</p>\n</rendered-html>",
                    "option_type": "null or (attribute set)",
                    "option_default": "null",
                    "option_example": "{\n  Administrators = {\n    permissions = \"*\";\n    users = \"admin\";\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.timezone",
                    "option_description": "<rendered-html><p>PHP-compliant timezone specification</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"UTC\"",
                    "option_example": "\"Europe/Berlin\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix",
                    "option_name": "services.icingaweb2.virtualHost",
                    "option_description": "<rendered-html><p>Name of the nginx virtualhost to use and setup. If null, no\nvirtualhost is set up.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"icingaweb2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/ihaskell.nix",
                    "option_name": "services.ihaskell.enable",
                    "option_description": "<rendered-html><p>Autostart an IHaskell notebook service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/ihaskell.nix",
                    "option_name": "services.ihaskell.extraPackages",
                    "option_description": "<rendered-html><p>Extra packages available to ghc when running ihaskell. The value must\nbe a function which receives the attrset defined in <code\nclass=\"interpreted-text\" role=\"var\">haskellPackages</code> as the sole\nargument.</p>\n</rendered-html>",
                    "option_type": "function that evaluates to a(n) list of package",
                    "option_default": "haskellPackages: []",
                    "option_example": "haskellPackages: [\n  haskellPackages.wreq\n  haskellPackages.lens\n]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/illum.nix",
                    "option_name": "services.illum.enable",
                    "option_description": "<rendered-html><p>Enable illum, a daemon for controlling screen brightness with\nbrightness buttons.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/imaginary.nix",
                    "option_name": "services.imaginary.address",
                    "option_description": "<rendered-html><p>Bind address. Corresponds to the <code>-a</code> flag. Set to\n<code>\"\"</code> to bind to all addresses.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": "\"[::1]\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/imaginary.nix",
                    "option_name": "services.imaginary.enable",
                    "option_description": "<rendered-html><p>Whether to enable imaginary image processing microservice.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/imaginary.nix",
                    "option_name": "services.imaginary.port",
                    "option_description": "<rendered-html><p>Bind port. Corresponds to the <code>-p</code> flag.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8088",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/imaginary.nix",
                    "option_name": "services.imaginary.settings",
                    "option_description": "<rendered-html><p>Command line arguments passed to the imaginary executable, stripped\nof the prefix <code>-</code>. See upstream\u2019s <a\nhref=\"https://github.com/h2non/imaginary#command-line-usage\">README</a>\nfor all options.</p>\n</rendered-html>",
                    "option_type": "attribute set of (boolean or signed integer or non-empty (list of string) or string)",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/imaginary.nix",
                    "option_name": "services.imaginary.settings.return-size",
                    "option_description": "<rendered-html><p>Return the image size in the HTTP headers.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.configFile",
                    "option_description": "<rendered-html><p>Configuration file for inadyn.</p>\n<p>Setting this will override all other configuration options.</p>\n<p>Passed to the inadyn service using LoadCredential.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.enable",
                    "option_description": "<rendered-html><p>Whether to enable synchronise your machine\u2019s IP address with a\ndynamic DNS provider using inadyn .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.group",
                    "option_description": "<rendered-html><p>Group account under which inadyn runs.</p>\n<div class=\"note\">\n<p>If left as the default value this user will automatically be created\non system activation, otherwise you are responsible for ensuring the\nuser exists before the inadyn service starts.</p>\n</div>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"inadyn\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.interval",
                    "option_description": "<rendered-html><p>How often to check the current IP. Uses the format described in <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.time(7)</code></a>\u201c;</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"*-*-* *:*:00\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.logLevel",
                    "option_description": "<rendered-html><p>Set inadyn\u2019s log level.</p>\n</rendered-html>",
                    "option_type": "one of \"none\", \"err\", \"warning\", \"info\", \"notice\", \"debug\"",
                    "option_default": "\"notice\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings",
                    "option_description": "<rendered-html><p>See <code>inadyn.conf (5)</code></p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.allow-ipv6",
                    "option_description": "<rendered-html><p>Whether to get IPv6 addresses from interfaces.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "\"`config.networking.enableIPv6`\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.custom",
                    "option_description": "<rendered-html><p>Settings for custom DNS providers.</p>\n</rendered-html>",
                    "option_type": "attribute set of (attribute set)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.custom.<name>.ddns-path",
                    "option_description": "<rendered-html><p>DDNS server path.</p>\n<p>See <code>inadnyn.conf (5)</code> for a list for format specifiers\nthat can be used.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"/update?user=%u&password=%p&domain=%h&myip=%i\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.custom.<name>.ddns-server",
                    "option_description": "<rendered-html><p>DDNS server name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.custom.<name>.hostname",
                    "option_description": "<rendered-html><p>Hostname alias(es).</p>\n</rendered-html>",
                    "option_type": "string or list of string",
                    "option_default": "\"*\"",
                    "option_example": "\"your.cool-domain.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.custom.<name>.include",
                    "option_description": "<rendered-html><p>File to include additional settings for this provider from.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.custom.<name>.password",
                    "option_description": "<rendered-html><p>Password for this DDNS provider.</p>\n<p>WARNING: This will be world-readable in the nix store. To store\ncredentials securely, use the <code>include</code> or\n<code>configFile</code> options.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.custom.<name>.ssl",
                    "option_description": "<rendered-html><p>Whether to use HTTPS for this DDNS provider.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.custom.<name>.username",
                    "option_description": "<rendered-html><p>Username for this DDNS provider.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.forced-update",
                    "option_description": "<rendered-html><p>Duration (in seconds) after which an update is forced.</p>\n</rendered-html>",
                    "option_type": "positive integer, meaning >0",
                    "option_default": "2592000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.provider",
                    "option_description": "<rendered-html><p>Settings for DDNS providers built-in to inadyn.</p>\n<p>For a list of built-in providers, see\n<code>inadyn.conf (5)</code>.</p>\n</rendered-html>",
                    "option_type": "attribute set of (attribute set)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.provider.<name>.hostname",
                    "option_description": "<rendered-html><p>Hostname alias(es).</p>\n</rendered-html>",
                    "option_type": "string or list of string",
                    "option_default": "\"*\"",
                    "option_example": "\"your.cool-domain.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.provider.<name>.include",
                    "option_description": "<rendered-html><p>File to include additional settings for this provider from.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.provider.<name>.password",
                    "option_description": "<rendered-html><p>Password for this DDNS provider.</p>\n<p>WARNING: This will be world-readable in the nix store. To store\ncredentials securely, use the <code>include</code> or\n<code>configFile</code> options.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.provider.<name>.ssl",
                    "option_description": "<rendered-html><p>Whether to use HTTPS for this DDNS provider.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.settings.provider.<name>.username",
                    "option_description": "<rendered-html><p>Username for this DDNS provider.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inadyn.nix",
                    "option_name": "services.inadyn.user",
                    "option_description": "<rendered-html><p>User account under which inadyn runs.</p>\n<div class=\"note\">\n<p>If left as the default value this user will automatically be created\non system activation, otherwise you are responsible for ensuring the\nuser exists before the inadyn service starts.</p>\n</div>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"inadyn\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/incron.nix",
                    "option_name": "services.incron.allow",
                    "option_description": "<rendered-html><p>Users allowed to use incrontab.</p>\n<p>If empty then no user will be allowed to have their own incrontab. If\n<code>null</code> then will defer to <code class=\"interpreted-text\"\nrole=\"option\">deny</code>. If both <code class=\"interpreted-text\"\nrole=\"option\">allow</code> and <code class=\"interpreted-text\"\nrole=\"option\">deny</code> are null then all users will be allowed to\nhave their own incrontab.</p>\n</rendered-html>",
                    "option_type": "null or (list of string)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/incron.nix",
                    "option_name": "services.incron.deny",
                    "option_description": "<rendered-html><p>Users forbidden from using incrontab.</p>\n</rendered-html>",
                    "option_type": "null or (list of string)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/incron.nix",
                    "option_name": "services.incron.enable",
                    "option_description": "<rendered-html><p>Whether to enable the incron daemon.</p>\n<p>Note that commands run under incrontab only support common Nix\nprofiles for the <code class=\"interpreted-text\" role=\"env\">PATH</code>\nprovided variable.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/incron.nix",
                    "option_name": "services.incron.extraPackages",
                    "option_description": "<rendered-html><p>Extra packages available to the system incrontab.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.rsync ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/incron.nix",
                    "option_name": "services.incron.systab",
                    "option_description": "<rendered-html><p>The system incrontab contents.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  /var/mail IN_CLOSE_WRITE abc $@/$#\n  /tmp IN_ALL_EVENTS efg $@/$# $&\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.certificateChain",
                    "option_description": "<rendered-html><p>Chain of CA-certificates to which our <code>certificateFile</code> is\nrelative. Optional for TLS.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.certificateFile",
                    "option_description": "<rendered-html><p>Server certificate to use for TLS</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.enable",
                    "option_description": "<rendered-html><p>Whether to enable infinoted.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.extraConfig",
                    "option_description": "<rendered-html><p>Additional configuration to append to infinoted.conf</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "''\n  [autosave]\n  interval=10\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.group",
                    "option_description": "<rendered-html><p>What to call the primary group of the dedicated user under which\ninfinoted is run</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"infinoted\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.keyFile",
                    "option_description": "<rendered-html><p>Private key to use for TLS</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.package",
                    "option_description": "<rendered-html><p>The libinfinity package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.libinfinity",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.passwordFile",
                    "option_description": "<rendered-html><p>File to read server-wide password from</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.plugins",
                    "option_description": "<rendered-html><p>Plugins to enable</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"note-text\"\n  \"note-chat\"\n  \"logging\"\n  \"autosave\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.port",
                    "option_description": "<rendered-html><p>Port to listen on</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "6523",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.rootDirectory",
                    "option_description": "<rendered-html><p>Root of the directory structure to serve</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/infinoted/documents/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHT-i",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.securityPolicy",
                    "option_description": "<rendered-html><p>How strictly to enforce clients connection with TLS.</p>\n</rendered-html>",
                    "option_type": "one of \"no-tls\", \"allow-tls\", \"require-tls\"",
                    "option_default": "\"require-tls\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/infinoted.nix",
                    "option_name": "services.infinoted.user",
                    "option_description": "<rendered-html><p>What to call the dedicated user under which infinoted is run</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"infinoted\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb.nix",
                    "option_name": "services.influxdb.dataDir",
                    "option_description": "<rendered-html><p>Data directory for influxd data files.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/db/influxdb\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb.nix",
                    "option_name": "services.influxdb.enable",
                    "option_description": "<rendered-html><p>Whether to enable the influxdb server</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb.nix",
                    "option_name": "services.influxdb.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration options for influxdb</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb.nix",
                    "option_name": "services.influxdb.group",
                    "option_description": "<rendered-html><p>Group under which influxdb runs</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"influxdb\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb.nix",
                    "option_name": "services.influxdb.package",
                    "option_description": "<rendered-html><p>The influxdb package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.influxdb",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb.nix",
                    "option_name": "services.influxdb.user",
                    "option_description": "<rendered-html><p>User account under which influxdb runs</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"influxdb\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.enable",
                    "option_description": "<rendered-html><p>Whether to enable the influxdb2 server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.package",
                    "option_description": "<rendered-html><p>The influxdb2 package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.influxdb2",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.enable",
                    "option_description": "<rendered-html><p>Whether to enable initial database setup and provisioning.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.initialSetup.bucket",
                    "option_description": "<rendered-html><p>Primary bucket name</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"example\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.initialSetup.organization",
                    "option_description": "<rendered-html><p>Primary organization name</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"main\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.initialSetup.passwordFile",
                    "option_description": "<rendered-html><p>Password for primary user. Don\u2019t use a file from the nix store!</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.initialSetup.retention",
                    "option_description": "<rendered-html><p>The duration in seconds for which the bucket will retain data (0 is\ninfinite).</p>\n</rendered-html>",
                    "option_type": "unsigned integer, meaning >=0",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.initialSetup.tokenFile",
                    "option_description": "<rendered-html><p>API Token to set for the admin user. Don\u2019t use a file from the nix\nstore!</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.initialSetup.username",
                    "option_description": "<rendered-html><p>Primary username</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"admin\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations",
                    "option_description": "<rendered-html><p>Organizations to provision.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  myorg = {\n    description = \"My organization\";\n    buckets.mybucket = {\n      description = \"My bucket\";\n      retention = 31536000; # 1 year\n    };\n    auths.mytoken = {\n      readBuckets = [\"mybucket\"];\n      tokenFile = \"/run/secrets/mytoken\";\n    };\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths",
                    "option_description": "<rendered-html><p>API tokens to provision for the user in this organization.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.allAccess",
                    "option_description": "<rendered-html><p>Grants all permissions in the associated organization.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.description",
                    "option_description": "<rendered-html><p>Optional description for the API token. Note that the actual token\nwill always be created with a descriptionregardless of whether this is\ngiven or not. The name is always added plus a unique suffix to later\nidentify the token to track whether it has already been created.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.id",
                    "option_description": "<rendered-html><p>A unique identifier for this authentication token. Since influx\ndoesn\u2019t store names for tokens, this will be hashed and appended to the\ndescription to identify the token.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"<a hash derived from org and name>\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.operator",
                    "option_description": "<rendered-html><p>Grants all permissions in all organizations.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.present",
                    "option_description": "<rendered-html><p>Whether to ensure that this user is present or absent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.readBuckets",
                    "option_description": "<rendered-html><p>The organization\u2019s buckets which should be allowed to be read</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.readPermissions",
                    "option_description": "<rendered-html><p>The read permissions to include for this token. Access is usually\ngranted only for resources in the associated organization.</p>\n<p>Available permissions are <code>authorizations</code>,\n<code>buckets</code>, <code>dashboards</code>, <code>orgs</code>,\n<code>tasks</code>, <code>telegrafs</code>, <code>users</code>,\n<code>variables</code>, <code>secrets</code>, <code>labels</code>,\n<code>views</code>, <code>documents</code>,\n<code>notificationRules</code>, <code>notificationEndpoints</code>,\n<code>checks</code>, <code>dbrp</code>, <code>annotations</code>,\n<code>sources</code>, <code>scrapers</code>, <code>notebooks</code>,\n<code>remotes</code>, <code>replications</code>.</p>\n<p>Refer to <code>influx auth create --help</code> for a full list with\ndescriptions.</p>\n<p><code>buckets</code> grants read access to all associated buckets.\nUse <code>readBuckets</code> to define more granular access\npermissions.</p>\n</rendered-html>",
                    "option_type": "list of (one of \"authorizations\", \"buckets\", \"dashboards\", \"orgs\", \"tasks\", \"telegrafs\", \"users\", \"variables\", \"secrets\", \"labels\", \"views\", \"documents\", \"notificationRules\", \"notificationEndpoints\", \"checks\", \"dbrp\", \"annotations\", \"sources\", \"scrapers\", \"notebooks\", \"remotes\", \"replications\")",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.tokenFile",
                    "option_description": "<rendered-html><p>The token value. If not given, influx will automatically generate\none.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.writeBuckets",
                    "option_description": "<rendered-html><p>The organization\u2019s buckets which should be allowed to be written</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.auths.<name>.writePermissions",
                    "option_description": "<rendered-html><p>The read permissions to include for this token. Access is usually\ngranted only for resources in the associated organization.</p>\n<p>Available permissions are <code>authorizations</code>,\n<code>buckets</code>, <code>dashboards</code>, <code>orgs</code>,\n<code>tasks</code>, <code>telegrafs</code>, <code>users</code>,\n<code>variables</code>, <code>secrets</code>, <code>labels</code>,\n<code>views</code>, <code>documents</code>,\n<code>notificationRules</code>, <code>notificationEndpoints</code>,\n<code>checks</code>, <code>dbrp</code>, <code>annotations</code>,\n<code>sources</code>, <code>scrapers</code>, <code>notebooks</code>,\n<code>remotes</code>, <code>replications</code>.</p>\n<p>Refer to <code>influx auth create --help</code> for a full list with\ndescriptions.</p>\n<p><code>buckets</code> grants write access to all associated buckets.\nUse <code>writeBuckets</code> to define more granular access\npermissions.</p>\n</rendered-html>",
                    "option_type": "list of (one of \"authorizations\", \"buckets\", \"dashboards\", \"orgs\", \"tasks\", \"telegrafs\", \"users\", \"variables\", \"secrets\", \"labels\", \"views\", \"documents\", \"notificationRules\", \"notificationEndpoints\", \"checks\", \"dbrp\", \"annotations\", \"sources\", \"scrapers\", \"notebooks\", \"remotes\", \"replications\")",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.buckets",
                    "option_description": "<rendered-html><p>Buckets to provision in this organization.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.buckets.<name>.description",
                    "option_description": "<rendered-html><p>Optional description for the bucket.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.buckets.<name>.present",
                    "option_description": "<rendered-html><p>Whether to ensure that this bucket is present or absent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.buckets.<name>.retention",
                    "option_description": "<rendered-html><p>The duration in seconds for which the bucket will retain data (0 is\ninfinite).</p>\n</rendered-html>",
                    "option_type": "unsigned integer, meaning >=0",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.description",
                    "option_description": "<rendered-html><p>Optional description for the organization.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.organizations.<name>.present",
                    "option_description": "<rendered-html><p>Whether to ensure that this organization is present or absent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.users",
                    "option_description": "<rendered-html><p>Users to provision.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  # admin = {}; /* The initialSetup.username will automatically be added. */\n  myuser.passwordFile = \"/run/secrets/myuser_password\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.users.<name>.passwordFile",
                    "option_description": "<rendered-html><p>Password for the user. If unset, the user will not be able to log in\nuntil a password is set by an operator! Don\u2019t use a file from the nix\nstore!</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.provision.users.<name>.present",
                    "option_description": "<rendered-html><p>Whether to ensure that this user is present or absent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/influxdb2.nix",
                    "option_name": "services.influxdb2.settings",
                    "option_description": "<rendered-html><p>configuration options for influxdb2, see <a\nhref=\"https://docs.influxdata.com/influxdb/v2.0/reference/config-options\">https://docs.influxdata.com/influxdb/v2.0/reference/config-options</a>\nfor details.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/infnoise.nix",
                    "option_name": "services.infnoise.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Infinite Noise TRNG driver.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/infnoise.nix",
                    "option_name": "services.infnoise.fillDevRandom",
                    "option_description": "<rendered-html><p>Whether to run the infnoise driver as a daemon to refill\n/dev/random.</p>\n<p>If disabled, you can use the <code>infnoise</code> command-line tool\nto manually obtain randomness.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/input-remapper.nix",
                    "option_name": "services.input-remapper.enable",
                    "option_description": "<rendered-html><p>Whether to enable input-remapper, an easy to use tool to change the\nmapping of your input device buttons.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/input-remapper.nix",
                    "option_name": "services.input-remapper.enableUdevRules",
                    "option_description": "<rendered-html><p>Whether to enable udev rules added by input-remapper to handle\nhotplugged devices. Currently disabled by default due to <a\nhref=\"https://github.com/sezanzeb/input-remapper/issues/140\">https://github.com/sezanzeb/input-remapper/issues/140</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/input-remapper.nix",
                    "option_name": "services.input-remapper.package",
                    "option_description": "<rendered-html><p>The input-remapper package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.input-remapper",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/input-remapper.nix",
                    "option_name": "services.input-remapper.serviceWantedBy",
                    "option_description": "<rendered-html><p>Specifies the WantedBy setting for the input-remapper service.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"graphical.target\"\n]",
                    "option_example": "[\n  \"multi-user.target\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inspircd.nix",
                    "option_name": "services.inspircd.config",
                    "option_description": "<rendered-html><p>Verbatim <code>inspircd.conf</code> file. For a list of options,\nconsult the <a\nhref=\"https://docs.inspircd.org/3/configuration/\">InspIRCd\ndocumentation</a>, the <a\nhref=\"https://docs.inspircd.org/3/modules/\">Module documentation</a> and\nthe example configuration files distributed with\n<code>pkgs.inspircd.doc</code></p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inspircd.nix",
                    "option_name": "services.inspircd.enable",
                    "option_description": "<rendered-html><p>Whether to enable InspIRCd.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/inspircd.nix",
                    "option_name": "services.inspircd.package",
                    "option_description": "<rendered-html><p>The InspIRCd package to use. This is mainly useful to specify an\noverridden version of the <code>pkgs.inspircd</code> dervivation, for\nexample if you want to use a more minimal InspIRCd distribution with\nless modules enabled or with modules enabled which can\u2019t be distributed\nin binary form due to licensing issues.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.inspircd",
                    "option_example": "pkgs.inspircdMinimal",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/interception-tools.nix",
                    "option_name": "services.interception-tools.enable",
                    "option_description": "<rendered-html><p>Whether to enable the interception tools service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/interception-tools.nix",
                    "option_name": "services.interception-tools.plugins",
                    "option_description": "<rendered-html><p>A list of interception tools plugins that will be made available to\nuse inside the udevmon configuration.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ pkgs.interception-tools-plugins.caps2esc ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/interception-tools.nix",
                    "option_name": "services.interception-tools.udevmonConfig",
                    "option_description": "<rendered-html><p>String of udevmon YAML configuration, or path to a udevmon YAML\nconfiguration file.</p>\n</rendered-html>",
                    "option_type": "string or path",
                    "option_default": "''\n  - JOB: \"intercept -g $DEVNODE | caps2esc | uinput -d $DEVNODE\"\n    DEVICE:\n      EVENTS:\n        EV_KEY: [KEY_CAPSLOCK, KEY_ESC]\n''",
                    "option_example": "''\n  - JOB: \"intercept -g $DEVNODE | y2z | x2y | uinput -d $DEVNODE\"\n    DEVICE:\n      EVENTS:\n        EV_KEY: [KEY_X, KEY_Y]\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/intune.nix",
                    "option_name": "services.intune.enable",
                    "option_description": "<rendered-html><p>Whether to enable Microsoft Intune.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.address",
                    "option_description": "<rendered-html><p>The IP address Invidious should bind to.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "if config.services.invidious.nginx.enable then \"127.0.0.1\" else \"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.database.createLocally",
                    "option_description": "<rendered-html><p>Whether to create a local database with PostgreSQL.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.database.host",
                    "option_description": "<rendered-html><p>The database host Invidious should use.</p>\n<p>If <code>null</code>, the local unix socket is used. Otherwise TCP is\nused.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.database.passwordFile",
                    "option_description": "<rendered-html><p>Path to file containing the database password.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.database.port",
                    "option_description": "<rendered-html><p>The port of the database Invidious should use.</p>\n<p>Defaults to the the default postgresql port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "config.services.postgresql.settings.port",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.domain",
                    "option_description": "<rendered-html><p>The FQDN Invidious is reachable on.</p>\n<p>This is used to configure nginx and for building absolute URLs.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.enable",
                    "option_description": "<rendered-html><p>Whether to enable Invidious.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.extraSettingsFile",
                    "option_description": "<rendered-html><p>A file including Invidious settings.</p>\n<p>It gets merged with the settings specified in <code\nclass=\"interpreted-text\"\nrole=\"option\">services.invidious.settings</code> and can be used to\nstore secrets like <code>hmac_key</code> outside of the nix store.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.hmacKeyFile",
                    "option_description": "<rendered-html><p>A path to a file containing the <code>hmac_key</code>. If\n<code>null</code>, a key will be generated automatically on first\nstart.</p>\n<p>If non-<code>null</code>, this option overrides any\n<code>hmac_key</code> specified in <code class=\"interpreted-text\"\nrole=\"option\">services.invidious.settings</code> or via <code\nclass=\"interpreted-text\"\nrole=\"option\">services.invidious.extraSettingsFile</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.http3-ytproxy.enable",
                    "option_description": "<rendered-html><p>Whether to enable http3-ytproxy for faster loading of images and\nvideo playback.</p>\n<p>If <code class=\"interpreted-text\"\nrole=\"option\">services.invidious.nginx.enable</code> is used, nginx will\nbe configured automatically. If not, you need to configure a reverse\nproxy yourself according to <a\nhref=\"https://docs.invidious.io/improve-public-instance/#3-speed-up-video-playback-with-http3-ytproxy\">https://docs.invidious.io/improve-public-instance/#3-speed-up-video-playback-with-http3-ytproxy</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.http3-ytproxy.package",
                    "option_description": "<rendered-html><p>The http3-ytproxy package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.http3-ytproxy",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.nginx.enable",
                    "option_description": "<rendered-html><p>Whether to configure nginx as a reverse proxy for Invidious.</p>\n<p>It serves it under the domain specified in <code\nclass=\"interpreted-text\"\nrole=\"option\">services.invidious.settings.domain</code> with enabled TLS\nand ACME. Further configuration can be done through <code\nclass=\"interpreted-text\"\nrole=\"option\">services.nginx.virtualHosts.${config.services.invidious.settings.domain}.*</code>,\nwhich can also be used to disable AMCE and TLS.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.package",
                    "option_description": "<rendered-html><p>The invidious package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.invidious",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.port",
                    "option_description": "<rendered-html><p>The port Invidious should listen on.</p>\n<p>To allow access from outside, you can use either <code\nclass=\"interpreted-text\" role=\"option\">services.invidious.nginx</code>\nor add <code>config.services.invidious.port</code> to <code\nclass=\"interpreted-text\"\nrole=\"option\">networking.firewall.allowedTCPPorts</code>.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.serviceScale",
                    "option_description": "<rendered-html><p>How many invidious instances to run.</p>\n<p>See <a\nhref=\"https://docs.invidious.io/improve-public-instance/#2-multiple-invidious-processes\">https://docs.invidious.io/improve-public-instance/#2-multiple-invidious-processes</a>\nfor more details on how this is intended to work. All instances beyond\nthe first one have the options <code>channel_threads</code> and\n<code>feed_threads</code> set to 0 to avoid conflicts with multiple\ninstances refreshing subscriptions. Instances will be configured to bind\nto consecutive ports starting with <code class=\"interpreted-text\"\nrole=\"option\">services.invidious.port</code> for the first instance.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invidious.nix",
                    "option_name": "services.invidious.settings",
                    "option_description": "<rendered-html><p>The settings Invidious should use.</p>\n<p>See <a\nhref=\"https://github.com/iv-org/invidious/blob/master/config/config.example.yml\">config.example.yml</a>\nfor a list of all possible options.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/invidious-router.nix",
                    "option_name": "services.invidious-router.address",
                    "option_description": "<rendered-html><p>Address on which invidious-router should listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/invidious-router.nix",
                    "option_name": "services.invidious-router.enable",
                    "option_description": "<rendered-html><p>Whether to enable the invidious-router service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/invidious-router.nix",
                    "option_name": "services.invidious-router.nginx.domain",
                    "option_description": "<rendered-html><p>The domain on which invidious-router should be served.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"invidious-router.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/invidious-router.nix",
                    "option_name": "services.invidious-router.nginx.enable",
                    "option_description": "<rendered-html><p>Whether to enable Automatic nginx proxy configuration .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/invidious-router.nix",
                    "option_name": "services.invidious-router.nginx.extraDomains",
                    "option_description": "<rendered-html><p>Additional domains to serve invidious-router on.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/invidious-router.nix",
                    "option_name": "services.invidious-router.package",
                    "option_description": "<rendered-html><p>The invidious-router package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.invidious-router",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/invidious-router.nix",
                    "option_name": "services.invidious-router.port",
                    "option_description": "<rendered-html><p>Port to bind to.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8050",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/invidious-router.nix",
                    "option_name": "services.invidious-router.settings",
                    "option_description": "<rendered-html><p>Configuration for invidious-router. Check <a\nhref=\"https://gitlab.com/gaincoder/invidious-router#configuration\">https://gitlab.com/gaincoder/invidious-router#configuration</a>\nfor configuration options.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{\n  api = {\n    allowed_regions = [\n      \"AT\"\n      \"DE\"\n      \"CH\"\n    ];\n    enabled = true;\n    filter_regions = true;\n    url = \"https://api.invidious.io/instances.json\";\n  };\n  app = {\n    enable_youtube_fallback = false;\n    listen = \"127.0.0.1:8050\";\n    reload_instance_list_interval = \"60s\";\n  };\n  healthcheck = {\n    allowed_status_codes = [\n      200\n    ];\n    filter_by_response_time = {\n      enabled = true;\n      qty_of_top_results = 3;\n    };\n    interval = \"10s\";\n    minimum_ratio = 0.2;\n    path = \"/\";\n    remove_no_ratio = true;\n    text_not_present = \"YouTube is currently trying to block Invidious instances\";\n    timeout = \"1s\";\n  };\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane",
                    "option_description": "<rendered-html><p>InvoicePlane configuration.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites",
                    "option_description": "<rendered-html><p>Specification of one or more WordPress sites to serve</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.cron.enable",
                    "option_description": "<rendered-html><p>Enable cron service which periodically runs Invoiceplane tasks.\nRequires key taken from the administration page. Refer to <a\nhref=\"https://wiki.invoiceplane.com/en/1.0/modules/recurring-invoices\">https://wiki.invoiceplane.com/en/1.0/modules/recurring-invoices</a>\non how to configure it.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.cron.key",
                    "option_description": "<rendered-html><p>Cron key taken from the administration page.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.database.createLocally",
                    "option_description": "<rendered-html><p>Create the database and database user locally.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.database.host",
                    "option_description": "<rendered-html><p>Database host address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.database.name",
                    "option_description": "<rendered-html><p>Database name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"invoiceplane\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.database.passwordFile",
                    "option_description": "<rendered-html><p>A file containing the password corresponding to <code\nclass=\"interpreted-text\" role=\"option\">database.user</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/invoiceplane-dbpassword\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.database.port",
                    "option_description": "<rendered-html><p>Database host port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3306",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.database.user",
                    "option_description": "<rendered-html><p>Database user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"invoiceplane\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable InvoicePlane web application.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.invoiceTemplates",
                    "option_description": "<rendered-html><p>List of path(s) to respective template(s) which are copied from the\n\u2018invoice_templates/pdf\u2019 directory.</p>\n<div class=\"note\">\n<p>These templates need to be packaged before use, see example.</p>\n</div>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "let\n  # Let's package an example template\n  template-vtdirektmarketing = pkgs.stdenv.mkDerivation {\n    name = \"vtdirektmarketing\";\n    # Download the template from a public repository\n    src = pkgs.fetchgit {\n      url = \"https://git.project-insanity.org/onny/invoiceplane-vtdirektmarketing.git\";\n      sha256 = \"1hh0q7wzsh8v8x03i82p6qrgbxr4v5fb05xylyrpp975l8axyg2z\";\n    };\n    sourceRoot = \".\";\n    # Installing simply means copying template php file to the output directory\n    installPhase = \"\"\n      mkdir -p $out\n      cp invoiceplane-vtdirektmarketing/vtdirektmarketing.php $out/\n    \"\";\n  };\n# And then pass this package to the template list like this:\nin [ template-vtdirektmarketing ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.poolConfig",
                    "option_description": "<rendered-html><p>Options for the InvoicePlane PHP pool. See the documentation on\n<code>php-fpm.conf</code> for details on configuration directives.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer or boolean)",
                    "option_default": "{\n  pm = \"dynamic\";\n  \"pm.max_children\" = 32;\n  \"pm.max_requests\" = 500;\n  \"pm.max_spare_servers\" = 4;\n  \"pm.min_spare_servers\" = 2;\n  \"pm.start_servers\" = 2;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.settings",
                    "option_description": "<rendered-html><p>Structural InvoicePlane configuration. Refer to <a\nhref=\"https://github.com/InvoicePlane/InvoicePlane/blob/master/ipconfig.php.example\">https://github.com/InvoicePlane/InvoicePlane/blob/master/ipconfig.php.example</a>\nfor details and supported values.</p>\n</rendered-html>",
                    "option_type": "attribute set of anything",
                    "option_default": "{ }",
                    "option_example": "{\n  SETUP_COMPLETED = true;\n  DISABLE_SETUP = true;\n  IP_URL = \"https://invoice.example.com\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.sites.<name>.stateDir",
                    "option_description": "<rendered-html><p>This directory is used for uploads of attachments and cache. The\ndirectory passed here is automatically created and permissions adjusted\nas required.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/invoiceplane/\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/invoiceplane.nix",
                    "option_name": "services.invoiceplane.webserver",
                    "option_description": "<rendered-html><p>Which webserver to use for virtual host management.</p>\n</rendered-html>",
                    "option_type": "one of \"caddy\", \"nginx\"",
                    "option_default": "\"caddy\"",
                    "option_example": "\"nginx\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.clients",
                    "option_description": "<rendered-html><p>Each attribute of this option defines a systemd service that runs\niodine. Many or none may be defined. The name of each service is\n<code>iodine-\u00abname\u00bb</code> where \u00abname\u00bb is the name of the corresponding\nattribute name.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  foo = {\n    server = \"tunnel.mdomain.com\";\n    relay = \"8.8.8.8\";\n    extraConfig = \"-v\";\n  }\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.clients.<name>.extraConfig",
                    "option_description": "<rendered-html><p>Additional command line parameters</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"-l 192.168.1.10 -p 23\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.clients.<name>.passwordFile",
                    "option_description": "<rendered-html><p>Path to a file containing the password.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.clients.<name>.relay",
                    "option_description": "<rendered-html><p>DNS server to use as an intermediate relay to the iodined server</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"8.8.8.8\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.clients.<name>.server",
                    "option_description": "<rendered-html><p>Hostname of server running iodined</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"tunnel.mydomain.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.server.domain",
                    "option_description": "<rendered-html><p>Domain or subdomain of which nameservers point to us</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"tunnel.mydomain.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.server.enable",
                    "option_description": "<rendered-html><p>enable iodined server</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.server.extraConfig",
                    "option_description": "<rendered-html><p>Additional command line parameters</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"-l 192.168.1.10 -p 23\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.server.ip",
                    "option_description": "<rendered-html><p>The assigned ip address or ip range</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"172.16.10.1/24\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iodine.nix",
                    "option_name": "services.iodine.server.passwordFile",
                    "option_description": "<rendered-html><p>File that contains password</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.affinity",
                    "option_description": "<rendered-html><p>CPU affinity for the process.</p>\n</rendered-html>",
                    "option_type": "null or (unsigned integer, meaning >=0)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.authorizedUsersFile",
                    "option_description": "<rendered-html><p>Path to the configuration file containing authorized users\ncredentials to run iperf tests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.bind",
                    "option_description": "<rendered-html><p>Bind to the specific interface associated with the given address.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.debug",
                    "option_description": "<rendered-html><p>Emit debugging output.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.enable",
                    "option_description": "<rendered-html><p>Whether to enable iperf3 network throughput testing server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.extraFlags",
                    "option_description": "<rendered-html><p>Extra flags to pass to iperf3(1).</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.forceFlush",
                    "option_description": "<rendered-html><p>Force flushing output at every interval.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for iperf3.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.port",
                    "option_description": "<rendered-html><p>Server port to listen on for iperf3 client requests.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5201",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.rsaPrivateKey",
                    "option_description": "<rendered-html><p>Path to the RSA private key (not password-protected) used to decrypt\nauthentication credentials from the client.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/iperf3.nix",
                    "option_name": "services.iperf3.verbose",
                    "option_description": "<rendered-html><p>Give more detailed output.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/printing/ipp-usb.nix",
                    "option_name": "services.ipp-usb.enable",
                    "option_description": "<rendered-html><p>Whether to enable ipp-usb, a daemon to turn an USB printer/scanner\nsupporting IPP everywhere (aka AirPrint, WSD, AirScan) into a locally\naccessible network printer/scanner.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/iptsd.nix",
                    "option_name": "services.iptsd.config",
                    "option_description": "<rendered-html><p>Configuration for IPTSD. See the <a\nhref=\"https://github.com/linux-surface/iptsd/blob/master/etc/iptsd.conf\">reference\nconfiguration</a> for available options and defaults.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/iptsd.nix",
                    "option_name": "services.iptsd.config.Stylus.Disable",
                    "option_description": "<rendered-html><p>Disables the stylus. No stylus data will be processed.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/iptsd.nix",
                    "option_name": "services.iptsd.config.Touch.DisableOnPalm",
                    "option_description": "<rendered-html><p>Ignore all touch inputs if a palm was registered on the display.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/iptsd.nix",
                    "option_name": "services.iptsd.config.Touch.DisableOnStylus",
                    "option_description": "<rendered-html><p>Ignore all touch inputs if a stylus is in proximity.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/iptsd.nix",
                    "option_name": "services.iptsd.enable",
                    "option_description": "<rendered-html><p>Whether to enable the userspace daemon for Intel Precise Touch &amp;\nStylus.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ircd-hybrid/default.nix",
                    "option_name": "services.ircdHybrid.adminEmail",
                    "option_description": "<rendered-html><p>IRCD server administrator e-mail.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"<bit-bucket@example.com>\"",
                    "option_example": "\"<name@domain.tld>\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ircd-hybrid/default.nix",
                    "option_name": "services.ircdHybrid.certificate",
                    "option_description": "<rendered-html><p>IRCD server SSL certificate. There are some limitations - read\nmanual.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "/root/certificates/irc.pem",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ircd-hybrid/default.nix",
                    "option_name": "services.ircdHybrid.description",
                    "option_description": "<rendered-html><p>IRCD server description.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"Hybrid-7 IRC server.\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ircd-hybrid/default.nix",
                    "option_name": "services.ircdHybrid.enable",
                    "option_description": "<rendered-html><p>Whether to enable IRCD.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ircd-hybrid/default.nix",
                    "option_name": "services.ircdHybrid.extraIPs",
                    "option_description": "<rendered-html><p>Extra IP\u2019s to bind.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"127.0.0.1\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ircd-hybrid/default.nix",
                    "option_name": "services.ircdHybrid.extraPort",
                    "option_description": "<rendered-html><p>Extra port to avoid filtering.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"7117\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ircd-hybrid/default.nix",
                    "option_name": "services.ircdHybrid.rsaKey",
                    "option_description": "<rendered-html><p>IRCD server RSA key.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "/root/certificates/irc.key",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ircd-hybrid/default.nix",
                    "option_name": "services.ircdHybrid.serverName",
                    "option_description": "<rendered-html><p>IRCD server name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"hades.arpa\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHT-j",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ircd-hybrid/default.nix",
                    "option_name": "services.ircdHybrid.sid",
                    "option_description": "<rendered-html><p>IRCD server unique ID in a net of servers.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0NL\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHUCj",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/irkerd.nix",
                    "option_name": "services.irkerd.enable",
                    "option_description": "<rendered-html><p>Whether to enable irker, an IRC notification daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHUCj",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/irkerd.nix",
                    "option_name": "services.irkerd.listenAddress",
                    "option_description": "<rendered-html><p>Specifies the bind address on which the irker daemon listens. The\ndefault is localhost.</p>\n<p>Irker authors strongly warn about the risks of running this on a\npublicly accessible interface, so change this with caution.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": "\"0.0.0.0\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHUCj",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/irkerd.nix",
                    "option_name": "services.irkerd.nick",
                    "option_description": "<rendered-html><p>Nick to use for irker</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"irker\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHUCj",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/irkerd.nix",
                    "option_name": "services.irkerd.openPorts",
                    "option_description": "<rendered-html><p>Open ports in the firewall for irkerd</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHUCj",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/irqbalance.nix",
                    "option_name": "services.irqbalance.enable",
                    "option_description": "<rendered-html><p>Whether to enable irqbalance daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHUCj",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/isso.nix",
                    "option_name": "services.isso.enable",
                    "option_description": "<rendered-html><p>Whether to enable isso, a commenting server similar to Disqus.</p>\n<p>Note: The application\u2019s author suppose to run isso behind a reverse\nproxy. The embedded solution offered by NixOS is also only suitable for\nsmall installations below 20 requests per second .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHUCj",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/isso.nix",
                    "option_name": "services.isso.settings",
                    "option_description": "<rendered-html><p>Configuration for <code>isso</code>.</p>\n<p>See <a\nhref=\"https://posativ.org/isso/docs/configuration/server/\">Isso Server\nConfiguration</a> for supported values.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": null,
                    "option_example": "{\n  general = {\n    host = \"http://localhost\";\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHUCj",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ivpn.nix",
                    "option_name": "services.ivpn.enable",
                    "option_description": "<rendered-html><p>This option enables iVPN daemon. This sets <code\nclass=\"interpreted-text\"\nrole=\"option\">networking.firewall.checkReversePath</code> to \u201cloose\u201d,\nwhich might be undesirable for security.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            }
        ]
    }
}