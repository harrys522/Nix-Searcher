{
    "took": 18,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 227,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/deepin/app-services.nix",
                    "option_name": "services.deepin.app-services.enable",
                    "option_description": "<rendered-html><p>Whether to enable service collection of DDE applications, including\ndconfig-center.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.enable",
                    "option_description": "<rendered-html><p>Whether to enable early out of memory killing.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.enableDebugInfo",
                    "option_description": "<rendered-html><p>Enable debugging messages.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.enableNotifications",
                    "option_description": "<rendered-html><p>Send notifications about killed processes via the system d-bus.</p>\n<p>WARNING: enabling this option (while convenient) should <em>not</em>\nbe done on a machine where you do not trust the other users as it allows\nany other local user to DoS your session by spamming notifications.</p>\n<p>To actually see the notifications in your GUI session, you need to\nhave <code>systembus-notify</code> running as your user, which this\noption handles by enabling <code class=\"interpreted-text\"\nrole=\"option\">services.systembus-notify</code>.</p>\n<p>See <a\nhref=\"https://github.com/rfjakob/earlyoom#notifications\">README</a> for\ndetails.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.extraArgs",
                    "option_description": "<rendered-html><p>Extra command-line arguments to be passed to earlyoom.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-g\"\n  \"--prefer '(^|/)(java|chromium)$'\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.freeMemKillThreshold",
                    "option_description": "<rendered-html><p>Minimum available memory (in percent) before sending SIGKILL. If\nunset, this defaults to half of <code class=\"interpreted-text\"\nrole=\"option\">freeMemThreshold</code>.</p>\n<p>See the description of <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.earlyoom.freeMemThreshold&amp;query=services.earlyoom.freeMemThreshold\">services.earlyoom.freeMemThreshold</a>.</p>\n</rendered-html>",
                    "option_type": "null or integer between 1 and 100 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.freeMemThreshold",
                    "option_description": "<rendered-html><p>Minimum available memory (in percent).</p>\n<p>If the available memory falls below this threshold (and the analog is\ntrue for <code class=\"interpreted-text\"\nrole=\"option\">freeSwapThreshold</code>) the killing begins. SIGTERM is\nsent first to the process that uses the most memory; then, if the\navailable memory falls below <code class=\"interpreted-text\"\nrole=\"option\">freeMemKillThreshold</code> (and the analog is true for\n<code class=\"interpreted-text\"\nrole=\"option\">freeSwapKillThreshold</code>), SIGKILL is sent.</p>\n<p>See <a\nhref=\"https://github.com/rfjakob/earlyoom#command-line-options\">README</a>\nfor details.</p>\n</rendered-html>",
                    "option_type": "integer between 1 and 100 (both inclusive)",
                    "option_default": "10",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.freeSwapKillThreshold",
                    "option_description": "<rendered-html><p>Minimum free swap space (in percent) before sending SIGKILL. If\nunset, this defaults to half of <code class=\"interpreted-text\"\nrole=\"option\">freeSwapThreshold</code>.</p>\n<p>See the description of <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.earlyoom.freeMemThreshold&amp;query=services.earlyoom.freeMemThreshold\">services.earlyoom.freeMemThreshold</a>.</p>\n</rendered-html>",
                    "option_type": "null or integer between 1 and 100 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.freeSwapThreshold",
                    "option_description": "<rendered-html><p>Minimum free swap space (in percent) before sending SIGTERM.</p>\n<p>See the description of <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.earlyoom.freeMemThreshold&amp;query=services.earlyoom.freeMemThreshold\">services.earlyoom.freeMemThreshold</a>.</p>\n</rendered-html>",
                    "option_type": "integer between 1 and 100 (both inclusive)",
                    "option_default": "10",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.killHook",
                    "option_description": "<rendered-html><p>An absolute path to an executable to be run for each process killed.\nSome environment variables are available, see <a\nhref=\"https://github.com/rfjakob/earlyoom#notifications\">README</a> and\n<a\nhref=\"https://github.com/rfjakob/earlyoom/blob/master/MANPAGE.md#-n-pathtoscript\">the\nman page</a> for details.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "pkgs.writeShellScript \"earlyoom-kill-hook\" ''\n  echo \"Process $EARLYOOM_NAME ($EARLYOOM_PID) was killed\" >> /path/to/log\n''\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.package",
                    "option_description": "<rendered-html><p>The earlyoom package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.earlyoom",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/earlyoom.nix",
                    "option_name": "services.earlyoom.reportInterval",
                    "option_description": "<rendered-html><p>Interval (in seconds) at which a memory report is printed (set to 0\nto disable).</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3600",
                    "option_example": "0",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.configpath",
                    "option_description": "<rendered-html><p>Directory to read CSV config files from. This can be a local folder\nor a URL.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"https://cfg.ebusd.eu/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.device",
                    "option_description": "<rendered-html><p>Use DEV as eBUS device [/dev/ttyUSB0]. This can be either: enh:DEVICE\nor enh:IP:PORT for enhanced device (only adapter v3 and newer),\nens:DEVICE for enhanced high speed serial device (only adapter v3 and\nnewer with firmware since 20220731), DEVICE for serial device (normal\nspeed, for all other serial adapters like adapter v2 as well as adapter\nv3 in non-enhanced mode), or [udp:]IP:PORT for network device.</p>\n<p>Source: <a\nhref=\"https://github.com/john30/ebusd/wiki/2.-Run#device-options\">https://github.com/john30/ebusd/wiki/2.-Run#device-options</a></p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"IP:PORT\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.enable",
                    "option_description": "<rendered-html><p>Whether to enable ebusd, a daemon for communication with eBUS heating\nsystems.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.extraArguments",
                    "option_description": "<rendered-html><p>Extra arguments to the ebus daemon</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.logs.all",
                    "option_description": "<rendered-html><p>Only write log for matching <code>AREA</code>s\n(all|main|network|bus|update|other) below or equal to <code>LEVEL</code>\n(none|error|notice|info|debug)</p>\n</rendered-html>",
                    "option_type": "one of \"none\", \"error\", \"notice\", \"info\", \"debug\"",
                    "option_default": "\"notice\"",
                    "option_example": "\"debug\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.logs.bus",
                    "option_description": "<rendered-html><p>Only write log for matching <code>AREA</code>s\n(all|main|network|bus|update|other) below or equal to <code>LEVEL</code>\n(none|error|notice|info|debug)</p>\n</rendered-html>",
                    "option_type": "one of \"none\", \"error\", \"notice\", \"info\", \"debug\"",
                    "option_default": "\"notice\"",
                    "option_example": "\"debug\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.logs.main",
                    "option_description": "<rendered-html><p>Only write log for matching <code>AREA</code>s\n(all|main|network|bus|update|other) below or equal to <code>LEVEL</code>\n(none|error|notice|info|debug)</p>\n</rendered-html>",
                    "option_type": "one of \"none\", \"error\", \"notice\", \"info\", \"debug\"",
                    "option_default": "\"notice\"",
                    "option_example": "\"debug\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.logs.network",
                    "option_description": "<rendered-html><p>Only write log for matching <code>AREA</code>s\n(all|main|network|bus|update|other) below or equal to <code>LEVEL</code>\n(none|error|notice|info|debug)</p>\n</rendered-html>",
                    "option_type": "one of \"none\", \"error\", \"notice\", \"info\", \"debug\"",
                    "option_default": "\"notice\"",
                    "option_example": "\"debug\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.logs.other",
                    "option_description": "<rendered-html><p>Only write log for matching <code>AREA</code>s\n(all|main|network|bus|update|other) below or equal to <code>LEVEL</code>\n(none|error|notice|info|debug)</p>\n</rendered-html>",
                    "option_type": "one of \"none\", \"error\", \"notice\", \"info\", \"debug\"",
                    "option_default": "\"notice\"",
                    "option_example": "\"debug\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.logs.update",
                    "option_description": "<rendered-html><p>Only write log for matching <code>AREA</code>s\n(all|main|network|bus|update|other) below or equal to <code>LEVEL</code>\n(none|error|notice|info|debug)</p>\n</rendered-html>",
                    "option_type": "one of \"none\", \"error\", \"notice\", \"info\", \"debug\"",
                    "option_default": "\"notice\"",
                    "option_example": "\"debug\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.mqtt.enable",
                    "option_description": "<rendered-html><p>Whether to enable support for MQTT.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.mqtt.home-assistant",
                    "option_description": "<rendered-html><p>Adds the Home Assistant topics to MQTT, read more at <a\nhref=\"https://github.com/john30/ebusd/wiki/MQTT-integration\">MQTT\nIntegration</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.mqtt.host",
                    "option_description": "<rendered-html><p>Connect to MQTT broker on HOST.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.mqtt.password",
                    "option_description": "<rendered-html><p>The MQTT password.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.mqtt.port",
                    "option_description": "<rendered-html><p>The port on which to connect to MQTT</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "1883",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.mqtt.retain",
                    "option_description": "<rendered-html><p>Whether to enable set the retain flag on all topics instead of only\nselected global ones.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.mqtt.user",
                    "option_description": "<rendered-html><p>The MQTT user to use</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.package",
                    "option_description": "<rendered-html><p>The ebusd package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ebusd",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.port",
                    "option_description": "<rendered-html><p>The port on which to listen on</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8888",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.readonly",
                    "option_description": "<rendered-html><p>Only read from device, never write to it</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/ebusd.nix",
                    "option_name": "services.ebusd.scanconfig",
                    "option_description": "<rendered-html><p>Pick CSV config files matching initial scan (\u201cnone\u201d or empty for no\ninitial scan message, \u201cfull\u201d for full scan, or a single hex address to\nscan, default is to send a broadcast ident message). If combined with\n\u2013checkconfig, you can add scan message data as arguments for checking a\nparticular scan configuration, e.g. \u201cFF08070400/0AB5454850303003277201\u201d.\nFor further details on this option, see <a\nhref=\"https://github.com/john30/ebusd/wiki/4.7.-Automatic-configuration\">Automatic\nconfiguration</a>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"full\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/virtualisation/ecs-agent.nix",
                    "option_name": "services.ecs-agent.enable",
                    "option_description": "<rendered-html><p>Whether to enable Amazon ECS agent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/virtualisation/ecs-agent.nix",
                    "option_name": "services.ecs-agent.extra-environment",
                    "option_description": "<rendered-html><p>The environment the ECS agent should run with. See the ECS agent\ndocumentation for keys that work here.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/virtualisation/ecs-agent.nix",
                    "option_name": "services.ecs-agent.package",
                    "option_description": "<rendered-html><p>The ecs-agent package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ecs-agent",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.configFile",
                    "option_description": "<rendered-html><p>Configuration file for ejabberd in YAML format</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.ctlConfig",
                    "option_description": "<rendered-html><p>Configuration of ejabberdctl</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.enable",
                    "option_description": "<rendered-html><p>Whether to enable ejabberd server</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.group",
                    "option_description": "<rendered-html><p>Group under which ejabberd is ran</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ejabberd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.imagemagick",
                    "option_description": "<rendered-html><p>Add ImageMagick to server\u2019s path; allows for image thumbnailing</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.loadDumps",
                    "option_description": "<rendered-html><p>Configuration dumps that should be loaded on the first startup</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "[ ./myejabberd.dump ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.logsDir",
                    "option_description": "<rendered-html><p>Location of the logfile directory of ejabberd</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/log/ejabberd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.package",
                    "option_description": "<rendered-html><p>The ejabberd package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ejabberd",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.spoolDir",
                    "option_description": "<rendered-html><p>Location of the spooldir of ejabberd</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/ejabberd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ejabberd.nix",
                    "option_name": "services.ejabberd.user",
                    "option_description": "<rendered-html><p>User under which ejabberd is ran</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ejabberd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.cluster_name",
                    "option_description": "<rendered-html><p>Elasticsearch name that identifies your cluster for\nauto-discovery.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"elasticsearch\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.dataDir",
                    "option_description": "<rendered-html><p>Data directory for elasticsearch.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/elasticsearch\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.enable",
                    "option_description": "<rendered-html><p>Whether to enable elasticsearch.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.extraCmdLineOptions",
                    "option_description": "<rendered-html><p>Extra command line options for the elasticsearch launcher.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.extraConf",
                    "option_description": "<rendered-html><p>Extra configuration for elasticsearch.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "''\n  node.name: \"elasticsearch\"\n  node.master: true\n  node.data: false\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.extraJavaOptions",
                    "option_description": "<rendered-html><p>Extra command line options for Java.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-Djava.net.preferIPv4Stack=true\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.listenAddress",
                    "option_description": "<rendered-html><p>Elasticsearch listen address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.logging",
                    "option_description": "<rendered-html><p>Elasticsearch logging configuration.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "''\n  logger.action.name = org.elasticsearch.action\n  logger.action.level = info\n  \n  appender.console.type = Console\n  appender.console.name = console\n  appender.console.layout.type = PatternLayout\n  appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] %marker%m%n\n  \n  rootLogger.level = info\n  rootLogger.appenderRef.console.ref = console\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.package",
                    "option_description": "<rendered-html><p>The elasticsearch package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.elasticsearch",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.plugins",
                    "option_description": "<rendered-html><p>Extra elasticsearch plugins</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.elasticsearchPlugins.discovery-ec2 ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.port",
                    "option_description": "<rendered-html><p>Elasticsearch port to listen for HTTP traffic.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "9200",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.restartIfChanged",
                    "option_description": "<rendered-html><p>Automatically restart the service on config change. This can be set\nto false to defer restarts on a server or cluster. Please consider the\nsecurity implications of inadvertently running an older version, and the\npossibility of unexpected behavior caused by inconsistent versions\nacross a cluster when disabling this option.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.single_node",
                    "option_description": "<rendered-html><p>Start a single-node cluster</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch.nix",
                    "option_name": "services.elasticsearch.tcp_port",
                    "option_description": "<rendered-html><p>Elasticsearch port for the node to node communication.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "9300",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch-curator.nix",
                    "option_name": "services.elasticsearch-curator.actionYAML",
                    "option_description": "<rendered-html><p>curator action.yaml file contents, alternatively use curator-cli\nwhich takes a simple action command</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": null,
                    "option_example": "''\n  ---\n  actions:\n    1:\n      action: delete_indices\n      description: >-\n        Delete indices older than 45 days (based on index name), for logstash-\n        prefixed indices. Ignore the error if the filter does not result in an\n        actionable list of indices (ignore_empty_list) and exit cleanly.\n      options:\n        ignore_empty_list: True\n        disable_action: False\n      filters:\n      - filtertype: pattern\n        kind: prefix\n        value: logstash-\n      - filtertype: age\n        source: name\n        direction: older\n        timestring: '%Y.%m.%d'\n        unit: days\n        unit_count: 45\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch-curator.nix",
                    "option_name": "services.elasticsearch-curator.enable",
                    "option_description": "<rendered-html><p>Whether to enable elasticsearch curator.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch-curator.nix",
                    "option_name": "services.elasticsearch-curator.hosts",
                    "option_description": "<rendered-html><p>a list of elasticsearch hosts to connect to</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"localhost\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch-curator.nix",
                    "option_name": "services.elasticsearch-curator.interval",
                    "option_description": "<rendered-html><p>The frequency to run curator, a systemd.time such as \u2018hourly\u2019</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"hourly\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/search/elasticsearch-curator.nix",
                    "option_name": "services.elasticsearch-curator.port",
                    "option_description": "<rendered-html><p>the port that elasticsearch is listening on</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "9200",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/emacs.nix",
                    "option_name": "services.emacs.defaultEditor",
                    "option_description": "<rendered-html><p>When enabled, configures emacsclient to be the default editor using\nthe EDITOR environment variable.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/emacs.nix",
                    "option_name": "services.emacs.enable",
                    "option_description": "<rendered-html><p>Whether to enable a user service for the Emacs daemon. Use\n<code>emacsclient</code> to connect to the daemon. If <code>true</code>,\n<code class=\"interpreted-text\" role=\"var\">services.emacs.install</code>\nis considered <code>true</code>, whatever its value.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/emacs.nix",
                    "option_name": "services.emacs.install",
                    "option_description": "<rendered-html><p>Whether to install a user service for the Emacs daemon. Once the\nservice is started, use emacsclient to connect to the daemon.</p>\n<p>The service must be manually started for each user with \u201csystemctl\n\u2013user start emacs\u201d or globally through <code class=\"interpreted-text\"\nrole=\"var\">services.emacs.enable</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/emacs.nix",
                    "option_name": "services.emacs.package",
                    "option_description": "<rendered-html><p>The emacs package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.emacs",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/editors/emacs.nix",
                    "option_name": "services.emacs.startWithGraphical",
                    "option_description": "<rendered-html><p>Start emacs with the graphical session instead of any session.\nWithout this, emacs clients will not be able to create frames in the\ngraphical session.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.xserver.enable",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh.nix",
                    "option_name": "services.endlessh.enable",
                    "option_description": "<rendered-html><p>Whether to enable endlessh service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh.nix",
                    "option_name": "services.endlessh.extraOptions",
                    "option_description": "<rendered-html><p>Additional command line options to pass to the endlessh daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-6\"\n  \"-d 9000\"\n  \"-v\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh.nix",
                    "option_name": "services.endlessh.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open a firewall port for the SSH listener.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh.nix",
                    "option_name": "services.endlessh.port",
                    "option_description": "<rendered-html><p>Specifies on which port the endlessh daemon listens for SSH\nconnections.</p>\n<p>Setting this to <code>22</code> may conflict with <code\nclass=\"interpreted-text\" role=\"option\">services.openssh</code>.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "2222",
                    "option_example": "22",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh-go.nix",
                    "option_name": "services.endlessh-go.enable",
                    "option_description": "<rendered-html><p>Whether to enable endlessh-go service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh-go.nix",
                    "option_name": "services.endlessh-go.extraOptions",
                    "option_description": "<rendered-html><p>Additional command line options to pass to the endlessh-go\ndaemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-conn_type=tcp4\"\n  \"-max_clients=8192\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh-go.nix",
                    "option_name": "services.endlessh-go.listenAddress",
                    "option_description": "<rendered-html><p>Interface address to bind the endlessh-go daemon to SSH\nconnections.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": "\"[::]\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh-go.nix",
                    "option_name": "services.endlessh-go.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open a firewall port for the SSH listener.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh-go.nix",
                    "option_name": "services.endlessh-go.port",
                    "option_description": "<rendered-html><p>Specifies on which port the endlessh-go daemon listens for SSH\nconnections.</p>\n<p>Setting this to <code>22</code> may conflict with <code\nclass=\"interpreted-text\" role=\"option\">services.openssh</code>.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "2222",
                    "option_example": "22",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh-go.nix",
                    "option_name": "services.endlessh-go.prometheus.enable",
                    "option_description": "<rendered-html><p>Whether to enable Prometheus integration.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh-go.nix",
                    "option_name": "services.endlessh-go.prometheus.listenAddress",
                    "option_description": "<rendered-html><p>Interface address to bind the endlessh-go daemon to answer Prometheus\nqueries.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": "\"[::]\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/endlessh-go.nix",
                    "option_name": "services.endlessh-go.prometheus.port",
                    "option_description": "<rendered-html><p>Specifies on which port the endlessh-go daemon listens for Prometheus\nqueries.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "2112",
                    "option_example": "9119",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/engelsystem.nix",
                    "option_name": "services.engelsystem.config",
                    "option_description": "<rendered-html><p>Options to be added to config.php, as a nix attribute set. Options\ncontaining secret data should be set to an attribute set containing the\nattribute _secret - a string pointing to a file containing the value the\noption should be set to. See the example to get a better picture of\nthis: in the resulting config.php file, the email.password key will be\nset to the contents of the /var/keys/engelsystem/mail file.</p>\n<p>See <a\nhref=\"https://engelsystem.de/doc/admin/configuration/\">https://engelsystem.de/doc/admin/configuration/</a>\nfor available options.</p>\n<p>Note that the admin user login credentials cannot be set here - they\nalways default to admin:asdfasdf. Log in and change them\nimmediately.</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{\n  database = {\n    database = \"engelsystem\";\n    host = \"localhost\";\n    username = \"engelsystem\";\n  };\n}",
                    "option_example": "{\n  autoarrive = true;\n  database = {\n    database = \"engelsystem\";\n    host = \"database.example.com\";\n    password = {\n      _secret = \"/var/keys/engelsystem/database\";\n    };\n    username = \"engelsystem\";\n  };\n  default_locale = \"de_DE\";\n  email = {\n    driver = \"smtp\";\n    encryption = \"tls\";\n    from = {\n      address = \"engelsystem@example.com\";\n      name = \"example engelsystem\";\n    };\n    host = \"smtp.example.com\";\n    password = {\n      _secret = \"/var/keys/engelsystem/mail\";\n    };\n    port = 587;\n    username = \"engelsystem@example.com\";\n  };\n  maintenance = false;\n  min_password_length = 6;\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/engelsystem.nix",
                    "option_name": "services.engelsystem.createDatabase",
                    "option_description": "<rendered-html><p>Whether to create a local database automatically. This will override\nevery database setting in <code class=\"interpreted-text\"\nrole=\"option\">services.engelsystem.config</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/engelsystem.nix",
                    "option_name": "services.engelsystem.domain",
                    "option_description": "<rendered-html><p>Domain to serve on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"engelsystem.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/engelsystem.nix",
                    "option_name": "services.engelsystem.enable",
                    "option_description": "<rendered-html><p>Whether to enable engelsystem, an online tool for coordinating\nvolunteers and shifts on large events.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/engelsystem.nix",
                    "option_name": "services.engelsystem.package",
                    "option_description": "<rendered-html><p>The engelsystem package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.engelsystem",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/filesystems/envfs.nix",
                    "option_name": "services.envfs.enable",
                    "option_description": "<rendered-html><p>Fuse filesystem that returns symlinks to executables based on the\nPATH of the requesting process. This is useful to execute shebangs on\nNixOS that assume hard coded locations in locations like /bin or\n/usr/bin etc.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/filesystems/envfs.nix",
                    "option_name": "services.envfs.extraFallbackPathCommands",
                    "option_description": "<rendered-html><p>Extra commands to run in the package that contains fallback\nexecutables in case not other executable is found</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"ln -s $''{pkgs.bash}/bin/bash $out/bash\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/filesystems/envfs.nix",
                    "option_name": "services.envfs.package",
                    "option_description": "<rendered-html><p>Which package to use for the envfs.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.envfs",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/envoy.nix",
                    "option_name": "services.envoy.enable",
                    "option_description": "<rendered-html><p>Whether to enable Envoy reverse proxy.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/envoy.nix",
                    "option_name": "services.envoy.package",
                    "option_description": "<rendered-html><p>The envoy package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.envoy",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/envoy.nix",
                    "option_name": "services.envoy.requireValidConfig",
                    "option_description": "<rendered-html><p>Whether a failure during config validation at build time is fatal.\nWhen the config can\u2019t be checked during build time, for example when it\nincludes other files, disable this option.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/envoy.nix",
                    "option_name": "services.envoy.settings",
                    "option_description": "<rendered-html><p>Specify the configuration for Envoy in Nix.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": "{\n  admin = {\n    access_log_path = \"/dev/null\";\n    address = {\n      socket_address = {\n        protocol = \"TCP\";\n        address = \"127.0.0.1\";\n        port_value = 9901;\n      };\n    };\n  };\n  static_resources = {\n    listeners = [];\n    clusters = [];\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.database.name",
                    "option_description": "<rendered-html><p>Name of the MySQL database that holds EPGStation\u2019s data.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"epgstation\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.database.passwordFile",
                    "option_description": "<rendered-html><p>A file containing the password for the database named <code\nclass=\"interpreted-text\" role=\"option\">database.name</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/run/keys/epgstation-db-password\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.enable",
                    "option_description": "<rendered-html><p>Whether to enable EPGStation: DVR system for Mirakurun-managed TV\ntuners.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.ffmpeg",
                    "option_description": "<rendered-html><p>The ffmpeg package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ffmpeg-headless",
                    "option_example": "ffmpeg-full",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for the EPGStation web interface.</p>\n<div class=\"warning\">\n<p>Exposing EPGStation to the open internet is generally advised\nagainst. Only use it inside a trusted local network, or consider putting\nit behind a VPN if you want remote access.</p>\n</div>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.package",
                    "option_description": "<rendered-html><p>The epgstation package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.epgstation",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.settings",
                    "option_description": "<rendered-html><p>Options to add to config.yml.</p>\n<p>Documentation: <a\nhref=\"https://github.com/l3tnun/EPGStation/blob/master/doc/conf-manual.md\">https://github.com/l3tnun/EPGStation/blob/master/doc/conf-manual.md</a></p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": "{\n  conflictPriority = 10;\n  recPriority = 20;\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.settings.clientSocketioPort",
                    "option_description": "<rendered-html><p>Socket.io port that the web client is going to connect to. This may\nbe different from <code class=\"interpreted-text\"\nrole=\"option\">services.epgstation.settings.socketioPort</code> if\nEPGStation is hidden behind a reverse proxy.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "config.services.epgstation.settings.socketioPort",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.settings.concurrentEncodeNum",
                    "option_description": "<rendered-html><p>The maximum number of encoding jobs that EPGStation would run at the\nsame time.</p>\n</rendered-html>",
                    "option_type": "positive integer, meaning >0",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.settings.encode",
                    "option_description": "<rendered-html><p>Encoding presets for recorded videos.</p>\n</rendered-html>",
                    "option_type": "list of (attribute set)",
                    "option_default": "[\n  {\n    name = \"H.264\";\n    cmd = \"%NODE% config.services.epgstation.package/libexec/enc.js\";\n    suffix = \".mp4\";\n  }\n]\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.settings.encodeProcessNum",
                    "option_description": "<rendered-html><p>The maximum number of processes that EPGStation would allow to run at\nthe same time for encoding or streaming videos.</p>\n</rendered-html>",
                    "option_type": "positive integer, meaning >0",
                    "option_default": "4",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.settings.mirakurunPath",
                    "option_description": "<rendered-html><p>URL to connect to Mirakurun.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"http+unix://${lib.replaceStrings [\"/\"] [\"%2F\"] config.services.mirakurun.unixSocket}\"\n",
                    "option_example": "\"http://localhost:40772\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.settings.port",
                    "option_description": "<rendered-html><p>HTTP port for EPGStation to listen on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "20772",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.settings.socketioPort",
                    "option_description": "<rendered-html><p>Socket.io port for EPGStation to listen on. It is valid to share\nports with <code class=\"interpreted-text\"\nrole=\"option\">services.epgstation.settings.port</code>.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "config.services.epgstation.settings.port + 1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/epgstation/default.nix",
                    "option_name": "services.epgstation.usePreconfiguredStreaming",
                    "option_description": "<rendered-html><p>Use preconfigured default streaming options.</p>\n<p>Upstream defaults: <a\nhref=\"https://github.com/l3tnun/EPGStation/blob/master/config/config.yml.template\">https://github.com/l3tnun/EPGStation/blob/master/config/config.yml.template</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/epmd.nix",
                    "option_name": "services.epmd.enable",
                    "option_description": "<rendered-html><p>Whether to enable socket activation for Erlang Port Mapper Daemon\n(epmd), which acts as a name server on all hosts involved in distributed\nErlang computations.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/epmd.nix",
                    "option_name": "services.epmd.listenStream",
                    "option_description": "<rendered-html><p>the listenStream used by the systemd socket. see <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.socket.html#ListenStream=\">https://www.freedesktop.org/software/systemd/man/systemd.socket.html#ListenStream=</a>\nfor more information. use this to change the port epmd will run on. if\nnot defined, epmd will use \u201c[::]:4369\u201d</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"[::]:4369\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/epmd.nix",
                    "option_name": "services.epmd.package",
                    "option_description": "<rendered-html><p>The erlang package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.erlang",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.api.keyHash",
                    "option_description": "<rendered-html><p>Hex-encoded Blake2b256 hash of an API key as a 64-chars long Base16\nstring.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.api.listen.ip",
                    "option_description": "<rendered-html><p>IP address that the Ergo node API should listen on if <code\nclass=\"interpreted-text\" role=\"option\">api.keyHash</code> is\ndefined.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.api.listen.port",
                    "option_description": "<rendered-html><p>Listen port for the API endpoint if <code class=\"interpreted-text\"\nrole=\"option\">api.keyHash</code> is defined.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "9052",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.dataDir",
                    "option_description": "<rendered-html><p>The data directory for the Ergo node.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/ergo\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.enable",
                    "option_description": "<rendered-html><p>Whether to enable Ergo service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.group",
                    "option_description": "<rendered-html><p>The group as which to run the Ergo node.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "config.services.ergo.user",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.listen.ip",
                    "option_description": "<rendered-html><p>IP address on which the Ergo node should listen.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.listen.port",
                    "option_description": "<rendered-html><p>Listen port for the Ergo node.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "9006",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for the Ergo node as well as the API.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.testnet",
                    "option_description": "<rendered-html><p>Connect to testnet network instead of the default mainnet.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergo.nix",
                    "option_name": "services.ergo.user",
                    "option_description": "<rendered-html><p>The user as which to run the Ergo node.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ergo\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergochat.nix",
                    "option_name": "services.ergochat.configFile",
                    "option_description": "<rendered-html><p>Path to configuration file. Setting this will skip any configuration\ndone via <code>settings</code></p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "<rendered-html><p>generated config file from <code>settings</code></p>\n</rendered-html>",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergochat.nix",
                    "option_name": "services.ergochat.enable",
                    "option_description": "<rendered-html><p>Whether to enable Ergo IRC daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergochat.nix",
                    "option_name": "services.ergochat.openFilesLimit",
                    "option_description": "<rendered-html><p>Maximum number of open files. Limits the clients and server\nconnections.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1024",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ergochat.nix",
                    "option_name": "services.ergochat.settings",
                    "option_description": "<rendered-html><p>Ergo IRC daemon configuration file. <a\nhref=\"https://raw.githubusercontent.com/ergochat/ergo/master/default.yaml\">https://raw.githubusercontent.com/ergochat/ergo/master/default.yaml</a></p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{\n  accounts = {\n    authentication-enabled = true;\n    multiclient = {\n      allowed-by-default = true;\n      always-on = \"opt-out\";\n      auto-away = \"opt-out\";\n      enabled = true;\n    };\n    registration = {\n      allow-before-connect = true;\n      bcrypt-cost = 4;\n      email-verification = {\n        enabled = false;\n      };\n      enabled = true;\n      throttling = {\n        duration = \"10m\";\n        enabled = true;\n        max-attempts = 30;\n      };\n    };\n  };\n  channels = {\n    default-modes = \"+ntC\";\n    registration = {\n      enabled = true;\n    };\n  };\n  datastore = {\n    autoupgrade = true;\n    path = \"/var/lib/ergo/ircd.db\";\n  };\n  history = {\n    autoreplay-on-join = 0;\n    autoresize-window = \"3d\";\n    channel-length = 2048;\n    chathistory-maxmessages = 100;\n    client-length = 256;\n    enabled = true;\n    restrictions = {\n      expire-time = \"1w\";\n      grace-period = \"1h\";\n      query-cutoff = \"none\";\n    };\n    retention = {\n      allow-individual-delete = false;\n      enable-account-indexing = false;\n    };\n    tagmsg-storage = {\n      default = false;\n      whitelist = [\n        \"+draft/react\"\n        \"+react\"\n      ];\n    };\n    znc-maxmessages = 2048;\n  };\n  limits = {\n    awaylen = 390;\n    channellen = 64;\n    identlen = 20;\n    kicklen = 390;\n    nicklen = 32;\n    topiclen = 390;\n  };\n  network = {\n    name = \"testnetwork\";\n  };\n  server = {\n    casemapping = \"permissive\";\n    check-ident = false;\n    enforce-utf = true;\n    forward-confirm-hostnames = false;\n    ip-cloaking = {\n      enabled = false;\n    };\n    ip-limits = {\n      count = false;\n      throttle = false;\n    };\n    listeners = {\n      \":6667\" = { };\n    };\n    lookup-hostnames = false;\n    max-sendq = \"1M\";\n    name = \"example.com\";\n    relaymsg = {\n      enabled = false;\n    };\n  };\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/blockchain/ethereum/erigon.nix",
                    "option_name": "services.erigon.enable",
                    "option_description": "<rendered-html><p>Whether to enable Ethereum implementation on the efficiency\nfrontier.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/blockchain/ethereum/erigon.nix",
                    "option_name": "services.erigon.extraArgs",
                    "option_description": "<rendered-html><p>Additional arguments passed to Erigon</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/blockchain/ethereum/erigon.nix",
                    "option_name": "services.erigon.package",
                    "option_description": "<rendered-html><p>The erigon package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.erigon",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/blockchain/ethereum/erigon.nix",
                    "option_name": "services.erigon.secretJwtPath",
                    "option_description": "<rendered-html><p>Path to the secret jwt used for the http api authentication.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"\"",
                    "option_example": "\"config.age.secrets.ERIGON_JWT.path\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/blockchain/ethereum/erigon.nix",
                    "option_name": "services.erigon.settings",
                    "option_description": "<rendered-html><p>Configuration for Erigon Refer to <a\nhref=\"https://github.com/ledgerwatch/erigon#usage\">https://github.com/ledgerwatch/erigon#usage</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "TOML value",
                    "option_default": "{\n  datadir = \"/var/lib/erigon\";\n  chain = \"mainnet\";\n  http = true;\n  \"http.port\" = 8545;\n  \"http.api\" = [\"eth\" \"debug\" \"net\" \"trace\" \"web3\" \"erigon\"];\n  ws = true;\n  port = 30303;\n  \"authrpc.port\" = 8551;\n  \"torrent.port\" = 42069;\n  \"private.api.addr\" = \"localhost:9090\";\n  \"log.console.verbosity\" = 3; # info\n}\n",
                    "option_example": "{\n  \"authrpc.port\" = 8551;\n  chain = \"mainnet\";\n  datadir = \"/var/lib/erigon\";\n  http = true;\n  \"http.api\" = [\n    \"eth\"\n    \"debug\"\n    \"net\"\n    \"trace\"\n    \"web3\"\n    \"erigon\"\n  ];\n  \"http.port\" = 8545;\n  \"log.console.verbosity\" = 3;\n  port = 30303;\n  \"private.api.addr\" = \"localhost:9090\";\n  \"torrent.port\" = 42069;\n  ws = true;\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/eris-server.nix",
                    "option_name": "services.eris-server.backends",
                    "option_description": "<rendered-html><p>List of backend URLs. Add \u201cget\u201d and \u201cput\u201d as query elements to enable\nthose operations.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": null,
                    "option_example": "[\n  \"bolt+file:///srv/eris.bolt?get&put\"\n  \"coap+tcp://eris.example.com:5683?get\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/eris-server.nix",
                    "option_name": "services.eris-server.decode",
                    "option_description": "<rendered-html><p>Whether the HTTP service (when enabled) will decode ERIS content at\n/uri-res/N2R?urn:eris:. Enabling this is recommended only for private or\nlocal-only servers.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/eris-server.nix",
                    "option_name": "services.eris-server.enable",
                    "option_description": "<rendered-html><p>Whether to enable an ERIS server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/eris-server.nix",
                    "option_name": "services.eris-server.listenCoap",
                    "option_description": "<rendered-html><p>Server CoAP listen address. Listen on all IP addresses at port 5683\nby default. Please note that the server can service client requests for\nERIS-blocks by querying other clients connected to the server. Whether\nor not blocks are relayed back to the server depends on client\nconfiguration but be aware this may leak sensitive metadata and trigger\nnetwork activity.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\":5683\"",
                    "option_example": "\"[::1]:5683\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/eris-server.nix",
                    "option_name": "services.eris-server.listenHttp",
                    "option_description": "<rendered-html><p>Server HTTP listen address. Do not listen by default.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"[::1]:8080\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/eris-server.nix",
                    "option_name": "services.eris-server.mountpoint",
                    "option_description": "<rendered-html><p>Mountpoint for FUSE namespace that exposes \u201curn:eris:\u2026\u201d files.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"/eris\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/eris-server.nix",
                    "option_name": "services.eris-server.package",
                    "option_description": "<rendered-html><p>Package to use for the ERIS server.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.eris-go",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/errbot.nix",
                    "option_name": "services.errbot.instances",
                    "option_description": "<rendered-html><p>Errbot instance configs</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/errbot.nix",
                    "option_name": "services.errbot.instances.<name>.admins",
                    "option_description": "<rendered-html><p>List of identifiers of errbot admins.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/errbot.nix",
                    "option_name": "services.errbot.instances.<name>.backend",
                    "option_description": "<rendered-html><p>Errbot backend name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"XMPP\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/errbot.nix",
                    "option_name": "services.errbot.instances.<name>.dataDir",
                    "option_description": "<rendered-html><p>Data directory for errbot instance.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/errbot.nix",
                    "option_name": "services.errbot.instances.<name>.extraConfig",
                    "option_description": "<rendered-html><p>String to be appended to the config verbatim</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/errbot.nix",
                    "option_name": "services.errbot.instances.<name>.identity",
                    "option_description": "<rendered-html><p>Errbot identity configuration</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/errbot.nix",
                    "option_name": "services.errbot.instances.<name>.logLevel",
                    "option_description": "<rendered-html><p>Errbot log level</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"INFO\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/errbot.nix",
                    "option_name": "services.errbot.instances.<name>.plugins",
                    "option_description": "<rendered-html><p>List of errbot plugin derivations.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/esdm.nix",
                    "option_name": "services.esdm.enable",
                    "option_description": "<rendered-html><p>Whether to enable ESDM service configuration.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/esdm.nix",
                    "option_name": "services.esdm.enableLinuxCompatServices",
                    "option_description": "<rendered-html><p>Enable /dev/random, /dev/urandom and /proc/sys/kernel/random/*\nuserspace wrapper.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/esdm.nix",
                    "option_name": "services.esdm.package",
                    "option_description": "<rendered-html><p>The esdm package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.esdm",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/espanso.nix",
                    "option_name": "services.espanso.enable",
                    "option_description": "<rendered-html><p>Whether to enable Espanso.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/espanso.nix",
                    "option_name": "services.espanso.package",
                    "option_description": "<rendered-html><p>The espanso package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.espanso",
                    "option_example": "pkgs.espanso-wayland",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/esphome.nix",
                    "option_name": "services.esphome.address",
                    "option_description": "<rendered-html><p>esphome address</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/esphome.nix",
                    "option_name": "services.esphome.allowedDevices",
                    "option_description": "<rendered-html><p>A list of device nodes to which <code class=\"interpreted-text\"\nrole=\"command\">esphome</code> has access to. Refer to DeviceAllow in\nsystemd.resource-control(5) for more information. Beware that if a\ndevice is referred to by an absolute path instead of a device category,\nit will only allow devices that already are plugged in when the service\nis started.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"char-ttyS\"\n  \"char-ttyUSB\"\n]",
                    "option_example": "[\n  \"/dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/esphome.nix",
                    "option_name": "services.esphome.enable",
                    "option_description": "<rendered-html><p>Whether to enable esphome, for making custom firmwares for\nESP32/ESP8266.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/esphome.nix",
                    "option_name": "services.esphome.enableUnixSocket",
                    "option_description": "<rendered-html><p>Listen on a unix socket <code>/run/esphome/esphome.sock</code>\ninstead of the TCP port.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/esphome.nix",
                    "option_name": "services.esphome.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open the firewall for the specified port.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/esphome.nix",
                    "option_name": "services.esphome.package",
                    "option_description": "<rendered-html><p>The esphome package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.esphome",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/esphome.nix",
                    "option_name": "services.esphome.port",
                    "option_description": "<rendered-html><p>esphome port</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "6052",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/esphome.nix",
                    "option_name": "services.esphome.usePing",
                    "option_description": "<rendered-html><p>Use ping to check online status of devices instead of mDNS</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.advertiseClientUrls",
                    "option_description": "<rendered-html><p>Etcd list of this member\u2019s client URLs to advertise to the rest of\nthe cluster.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "config.services.etcd.listenClientUrls",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.certFile",
                    "option_description": "<rendered-html><p>Cert file to use for clients</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.clientCertAuth",
                    "option_description": "<rendered-html><p>Whether to use certs for client authentication</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.dataDir",
                    "option_description": "<rendered-html><p>Etcd data directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/etcd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.discovery",
                    "option_description": "<rendered-html><p>Etcd discovery url</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.enable",
                    "option_description": "<rendered-html><p>Whether to enable etcd.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.extraConf",
                    "option_description": "<rendered-html><p>Etcd extra configuration. See <a\nhref=\"https://github.com/coreos/etcd/blob/master/Documentation/op-guide/configuration.md#configuration-flags\">https://github.com/coreos/etcd/blob/master/Documentation/op-guide/configuration.md#configuration-flags</a></p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  \"CORS\" = \"*\";\n  \"NAME\" = \"default-name\";\n  \"MAX_RESULT_BUFFER\" = \"1024\";\n  \"MAX_CLUSTER_SIZE\" = \"9\";\n  \"MAX_RETRY_ATTEMPTS\" = \"3\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.initialAdvertisePeerUrls",
                    "option_description": "<rendered-html><p>Etcd list of this member\u2019s peer URLs to advertise to rest of the\ncluster.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "config.services.etcd.listenPeerUrls",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.initialCluster",
                    "option_description": "<rendered-html><p>Etcd initial cluster configuration for bootstrapping.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\"${config.services.etcd.name}=http://127.0.0.1:2380\"]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.initialClusterState",
                    "option_description": "<rendered-html><p>Etcd initial cluster configuration for bootstrapping.</p>\n</rendered-html>",
                    "option_type": "one of \"new\", \"existing\"",
                    "option_default": "\"new\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.initialClusterToken",
                    "option_description": "<rendered-html><p>Etcd initial cluster token for etcd cluster during bootstrap.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"etcd-cluster\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.keyFile",
                    "option_description": "<rendered-html><p>Key file to use for clients</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.listenClientUrls",
                    "option_description": "<rendered-html><p>Etcd list of URLs to listen on for client traffic.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"http://127.0.0.1:2379\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.listenPeerUrls",
                    "option_description": "<rendered-html><p>Etcd list of URLs to listen on for peer traffic.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"http://127.0.0.1:2380\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.name",
                    "option_description": "<rendered-html><p>Etcd unique node name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "config.networking.hostName",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.openFirewall",
                    "option_description": "<rendered-html><p>Open etcd ports in the firewall. Ports opened:</p>\n<ul>\n<li>2379/tcp for client requests</li>\n<li>2380/tcp for peer communication</li>\n</ul>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.package",
                    "option_description": "<rendered-html><p>The etcd package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.etcd",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.peerCertFile",
                    "option_description": "<rendered-html><p>Cert file to use for peer to peer communication</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "config.services.etcd.certFile",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.peerClientCertAuth",
                    "option_description": "<rendered-html><p>Whether to check all incoming peer requests from the cluster for\nvalid client certificates signed by the supplied CA</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.peerKeyFile",
                    "option_description": "<rendered-html><p>Key file to use for peer to peer communication</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "config.services.etcd.keyFile",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.peerTrustedCaFile",
                    "option_description": "<rendered-html><p>Certificate authority file to use for peer to peer communication</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "config.services.etcd.trustedCaFile",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/etcd.nix",
                    "option_name": "services.etcd.trustedCaFile",
                    "option_description": "<rendered-html><p>Certificate authority file to use for clients</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.dataDir",
                    "option_description": "<rendered-html><p>Directory to store the Etebase server data.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/etebase-server\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Etebase server.</p>\n<p>Once enabled you need to create an admin user by invoking the shell\ncommand <code>etebase-server createsuperuser</code> with the user\nspecified by the <code>user</code> option or a superuser. Then you can\nlogin and create accounts on your-etebase-server.com/admin</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open ports in the firewall for the server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.package",
                    "option_description": "<rendered-html><p>etebase-server package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.python3.pkgs.etebase-server",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.port",
                    "option_description": "<rendered-html><p>Port to listen on.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8001",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.settings",
                    "option_description": "<rendered-html><p>Configuration for <code>etebase-server</code>. Refer to <a\nhref=\"https://github.com/etesync/server/blob/master/etebase-server.ini.example\">https://github.com/etesync/server/blob/master/etebase-server.ini.example</a>\nand <a\nhref=\"https://github.com/etesync/server/wiki\">https://github.com/etesync/server/wiki</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": "{ }",
                    "option_example": "{\n  allowed_hosts = {\n    allowed_host2 = \"localhost\";\n  };\n  global = {\n    debug = true;\n    media_root = \"/path/to/media\";\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.settings.allowed_hosts.allowed_host1",
                    "option_description": "<rendered-html><p>The main host that is allowed access.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": "\"localhost\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.settings.database.engine",
                    "option_description": "<rendered-html><p>The database engine to use.</p>\n</rendered-html>",
                    "option_type": "one of \"django.db.backends.sqlite3\", \"django.db.backends.postgresql\"",
                    "option_default": "\"django.db.backends.sqlite3\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.settings.database.name",
                    "option_description": "<rendered-html><p>The database name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.services.etebase-server.dataDir}/db.sqlite3\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.settings.global.debug",
                    "option_description": "<rendered-html><p>Whether to set django\u2019s DEBUG flag.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.settings.global.media_root",
                    "option_description": "<rendered-html><p>The media directory.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.services.etebase-server.dataDir}/media\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.settings.global.secret_file",
                    "option_description": "<rendered-html><p>The path to a file containing the secret used as django\u2019s\nSECRET_KEY.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.settings.global.static_root",
                    "option_description": "<rendered-html><p>The directory for static files.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.services.etebase-server.dataDir}/static\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.unixSocket",
                    "option_description": "<rendered-html><p>The path to the socket to bind to.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"/run/etebase-server/etebase-server.sock\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etebase-server.nix",
                    "option_name": "services.etebase-server.user",
                    "option_description": "<rendered-html><p>User under which Etebase server runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"etebase-server\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/eternal-terminal.nix",
                    "option_name": "services.eternal-terminal.enable",
                    "option_description": "<rendered-html><p>Whether to enable Eternal Terminal server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/eternal-terminal.nix",
                    "option_name": "services.eternal-terminal.logSize",
                    "option_description": "<rendered-html><p>The maximum log size.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "20971520",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/eternal-terminal.nix",
                    "option_name": "services.eternal-terminal.port",
                    "option_description": "<rendered-html><p>The port the server should listen on. Will use the server\u2019s default\n(2022) if not specified.</p>\n<p>Make sure to open this port in the firewall if necessary.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "2022",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/eternal-terminal.nix",
                    "option_name": "services.eternal-terminal.silent",
                    "option_description": "<rendered-html><p>If enabled, disables all logging.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/eternal-terminal.nix",
                    "option_name": "services.eternal-terminal.verbosity",
                    "option_description": "<rendered-html><p>The verbosity level (0-9).</p>\n</rendered-html>",
                    "option_type": "one of 0, 1, 2, 3, 4, 5, 6, 7, 8, 9",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etesync-dav.nix",
                    "option_name": "services.etesync-dav.apiUrl",
                    "option_description": "<rendered-html><p>The url to the etesync API.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"https://api.etesync.com/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etesync-dav.nix",
                    "option_name": "services.etesync-dav.enable",
                    "option_description": "<rendered-html><p>Whether to enable etesync-dav, end-to-end encrypted sync for\ncontacts, calendars and tasks.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etesync-dav.nix",
                    "option_name": "services.etesync-dav.host",
                    "option_description": "<rendered-html><p>The server host address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etesync-dav.nix",
                    "option_name": "services.etesync-dav.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open the firewall for the specified port.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etesync-dav.nix",
                    "option_name": "services.etesync-dav.port",
                    "option_description": "<rendered-html><p>The server host port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "37358",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etesync-dav.nix",
                    "option_name": "services.etesync-dav.sslCertificate",
                    "option_description": "<rendered-html><p>Path to server SSL certificate. It will be copied into etesync-dav\u2019s\ndata directory.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/etesync.crt\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/etesync-dav.nix",
                    "option_name": "services.etesync-dav.sslCertificateKey",
                    "option_description": "<rendered-html><p>Path to server SSL certificate key. It will be copied into\netesync-dav\u2019s data directory.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/etesync.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/ethercalc.nix",
                    "option_name": "services.ethercalc.enable",
                    "option_description": "<rendered-html><p>ethercalc, an online collaborative spreadsheet server.</p>\n<p>Persistent state will be maintained under <code\nclass=\"interpreted-text\" role=\"file\">/var/lib/ethercalc</code>. Upstream\nsupports using a redis server for storage and recommends the redis\nbackend for intensive use; however, the Nix module doesn\u2019t currently\nsupport redis.</p>\n<p>Note that while ethercalc is a good and robust project with an active\nissue tracker, there haven\u2019t been new commits since the end of 2020.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/ethercalc.nix",
                    "option_name": "services.ethercalc.host",
                    "option_description": "<rendered-html><p>Address to listen on (use 0.0.0.0 to allow access from any\naddress).</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/ethercalc.nix",
                    "option_name": "services.ethercalc.package",
                    "option_description": "<rendered-html><p>The ethercalc package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ethercalc",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/ethercalc.nix",
                    "option_name": "services.ethercalc.port",
                    "option_description": "<rendered-html><p>Port to bind to.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/evcc.nix",
                    "option_name": "services.evcc.enable",
                    "option_description": "<rendered-html><p>Whether to enable EVCC, the extensible EV Charge Controller with PV\nintegration.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/evcc.nix",
                    "option_name": "services.evcc.extraArgs",
                    "option_description": "<rendered-html><p>Extra arguments to pass to the evcc executable.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/home-automation/evcc.nix",
                    "option_name": "services.evcc.settings",
                    "option_description": "<rendered-html><p>evcc configuration as a Nix attribute set.</p>\n<p>Check for possible options in the sample [evcc.dist.yaml](<a\nhref=\"https://github.com/andig/evcc/blob/0.127.2/evcc.dist.yaml]\">https://github.com/andig/evcc/blob/0.127.2/evcc.dist.yaml]</a>.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/evdevremapkeys.nix",
                    "option_name": "services.evdevremapkeys.enable",
                    "option_description": "<rendered-html><p>Whether to enable evdevremapkeys, a daemon to remap events on linux\ninput devices.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/evdevremapkeys.nix",
                    "option_name": "services.evdevremapkeys.settings",
                    "option_description": "<rendered-html><p>config.yaml for evdevremapkeys</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/exim.nix",
                    "option_name": "services.exim.config",
                    "option_description": "<rendered-html><p>Verbatim Exim configuration. This should not contain exim_user,\nexim_group, exim_path, or spool_directory.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/exim.nix",
                    "option_name": "services.exim.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Exim mail transfer agent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/exim.nix",
                    "option_name": "services.exim.group",
                    "option_description": "<rendered-html><p>Group to use when no root privileges are required.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"exim\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/exim.nix",
                    "option_name": "services.exim.package",
                    "option_description": "<rendered-html><p>The exim package to use. This can be used to enable features such as\nLDAP or PAM support.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.exim",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/exim.nix",
                    "option_name": "services.exim.queueRunnerInterval",
                    "option_description": "<rendered-html><p>How often to spawn a new queue runner.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"5m\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/exim.nix",
                    "option_name": "services.exim.spoolDir",
                    "option_description": "<rendered-html><p>Location of the spool directory of exim.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/spool/exim\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/exim.nix",
                    "option_name": "services.exim.user",
                    "option_description": "<rendered-html><p>User to use when no root privileges are required. In particular, this\napplies when receiving messages and when doing remote deliveries. (Local\ndeliveries run as various non-root users, typically as the owner of a\nlocal mailbox.) Specifying this value as root is not supported.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"exim\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/expressvpn.nix",
                    "option_name": "services.expressvpn.enable",
                    "option_description": "<rendered-html><p>Enable the ExpressVPN daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHTqg",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/x11/desktop-managers/gnome.nix",
                    "option_name": "services.gnome.core-os-services.enable",
                    "option_description": "<rendered-html><p>Whether to enable essential services for GNOME3.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            }
        ]
    }
}