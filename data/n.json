{
    "took": 9,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 776,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/n8n.nix",
                    "option_name": "services.n8n.enable",
                    "option_description": "<rendered-html><p>Whether to enable n8n server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/n8n.nix",
                    "option_name": "services.n8n.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for the n8n web interface.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/n8n.nix",
                    "option_name": "services.n8n.settings",
                    "option_description": "<rendered-html><p>Configuration for n8n, see <a\nhref=\"https://docs.n8n.io/hosting/environment-variables/configuration-methods/\">https://docs.n8n.io/hosting/environment-variables/configuration-methods/</a>\nfor supported values.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/n8n.nix",
                    "option_name": "services.n8n.webhookUrl",
                    "option_description": "<rendered-html><p>WEBHOOK_URL for n8n, in case we\u2019re running behind a reverse proxy.\nThis cannot be set through configuration and must reside in an\nenvironment variable.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.cgiConfigFile",
                    "option_description": "<rendered-html><p>Derivation for the configuration file of Nagios CGI scripts that can\nbe used in web servers for running the Nagios web interface.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "nagiosCGICfgFile",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.enable",
                    "option_description": "<rendered-html><p>Whether to enable <a href=\"https://www.nagios.org/\">Nagios</a> to\nmonitor your system or network..</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.enableWebInterface",
                    "option_description": "<rendered-html><p>Whether to enable the Nagios web interface. You should also enable\nApache (<code class=\"interpreted-text\"\nrole=\"option\">services.httpd.enable</code>).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.extraConfig",
                    "option_description": "<rendered-html><p>Configuration to add to /etc/nagios.cfg</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  debug_file = \"/var/log/nagios/debug.log\";\n  debug_level = \"-1\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.mainConfigFile",
                    "option_description": "<rendered-html><p>If non-null, overrides the main configuration file of Nagios.</p>\n</rendered-html>",
                    "option_type": "null or package",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.objectDefs",
                    "option_description": "<rendered-html><p>A list of Nagios object configuration files that must define the\nhosts, host groups, services and contacts for the network that you want\nNagios to monitor.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": null,
                    "option_example": "[ ./objects.cfg ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.plugins",
                    "option_description": "<rendered-html><p>Packages to be added to the Nagios <code class=\"interpreted-text\"\nrole=\"env\">PATH</code>. Typically used to add plugins, but can be\nanything.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[pkgs.monitoring-plugins pkgs.msmtp pkgs.mailutils]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.validateConfig",
                    "option_description": "<rendered-html><p>if true, the syntax of the nagios configuration file is checked at\nbuild time</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "pkgs.stdenv.hostPlatform == pkgs.stdenv.buildPlatform",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost",
                    "option_description": "<rendered-html><p>Apache configuration can be done by adapting <code\nclass=\"interpreted-text\"\nrole=\"option\">services.httpd.virtualHosts</code>. See <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.httpd.virtualHosts&amp;query=services.httpd.virtualHosts\">services.httpd.virtualHosts</a>\nfor further information.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": null,
                    "option_example": "{ hostName = \"example.org\";\n  adminAddr = \"webmaster@example.org\";\n  enableSSL = true;\n  sslServerCert = \"/var/lib/acme/example.org/full.pem\";\n  sslServerKey = \"/var/lib/acme/example.org/key.pem\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.acmeRoot",
                    "option_description": "<rendered-html><p>Directory for the acme challenge which is PUBLIC, don\u2019t put certs or\nkeys in here. Set to null to inherit from config.security.acme.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"/var/lib/acme/acme-challenge\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.addSSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS in addition to plain HTTP. This will set\ndefaults for <code>listen</code> to listen on all interfaces on the\nrespective default ports (80, 443).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.adminAddr",
                    "option_description": "<rendered-html><p>E-mail address of the server administrator.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"admin@example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.documentRoot",
                    "option_description": "<rendered-html><p>The path of Apache\u2019s document root directory. If left undefined, an\nempty directory in the Nix store will be used as root.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/data/webserver/docs\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.enableACME",
                    "option_description": "<rendered-html><p>Whether to ask Let\u2019s Encrypt to sign a certificate for this vhost.\nAlternately, you can use an existing certificate through <code\nclass=\"interpreted-text\" role=\"option\">useACMEHost</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.enableUserDir",
                    "option_description": "<rendered-html><p>Whether to enable serving <code class=\"interpreted-text\"\nrole=\"file\">~/public_html</code> as <code>/~\u00abusername\u00bb</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to httpd.conf verbatim. They will go after directories\nand directory aliases defined by default.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  <Directory /home>\n    Options FollowSymlinks\n    AllowOverride All\n  </Directory>\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.forceSSL",
                    "option_description": "<rendered-html><p>Whether to add a separate nginx server block that permanently\nredirects (301) all plain HTTP traffic to HTTPS. This will set defaults\nfor <code>listen</code> to listen on all interfaces on the respective\ndefault ports (80, 443), where the non-SSL listens are used for the\nredirect vhosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.globalRedirect",
                    "option_description": "<rendered-html><p>If set, all requests for this host are redirected permanently to the\ngiven URL.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"http://newserver.example.org/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.hostName",
                    "option_description": "<rendered-html><p>Canonical hostname for the server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.http2",
                    "option_description": "<rendered-html><p>Whether to enable HTTP 2. HTTP/2 is supported in all multi-processing\nmodules that come with httpd. <em>However, if you use the prefork mpm,\nthere will be severe restrictions.</em> Refer to <a\nhref=\"https://httpd.apache.org/docs/2.4/howto/http2.html#mpm-config\">https://httpd.apache.org/docs/2.4/howto/http2.html#mpm-config</a>\nfor details.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.listen",
                    "option_description": "<rendered-html><p>Listen addresses and ports for this virtual host.</p>\n<div class=\"note\">\n<p>This option overrides <code>addSSL</code>, <code>forceSSL</code> and\n<code>onlySSL</code>.</p>\n<p>If you only want to set the addresses manually and not the ports,\ntake a look at <code>listenAddresses</code>.</p>\n</div>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    ip = \"195.154.1.1\";\n    port = 443;\n    ssl = true;\n  }\n  {\n    ip = \"192.154.1.1\";\n    port = 80;\n  }\n  {\n    ip = \"*\";\n    port = 8080;\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.listen.*.ip",
                    "option_description": "<rendered-html><p>IP to listen on. 0.0.0.0 for IPv4 only, * for all.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"*\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.listen.*.port",
                    "option_description": "<rendered-html><p>Port to listen on</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.listen.*.ssl",
                    "option_description": "<rendered-html><p>Whether to enable SSL (https) support.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.listenAddresses",
                    "option_description": "<rendered-html><p>Listen addresses for this virtual host. Compared to\n<code>listen</code> this only sets the addresses and the ports are\nchosen automatically.</p>\n</rendered-html>",
                    "option_type": "non-empty (list of string)",
                    "option_default": "[\n  \"*\"\n]",
                    "option_example": "[\n  \"127.0.0.1\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.locations",
                    "option_description": "<rendered-html><p>Declarative location config. See <a\nhref=\"https://httpd.apache.org/docs/2.4/mod/core.html#location\">https://httpd.apache.org/docs/2.4/mod/core.html#location</a>\nfor details.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  \"/\" = {\n    proxyPass = \"http://localhost:3000\";\n  };\n  \"/foo/bar.png\" = {\n    alias = \"/home/eelco/some-file.png\";\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.locations.<name>.alias",
                    "option_description": "<rendered-html><p>Alias directory for requests. See <a\nhref=\"https://httpd.apache.org/docs/2.4/mod/mod_alias.html#alias\">https://httpd.apache.org/docs/2.4/mod/mod_alias.html#alias</a>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/alias/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.locations.<name>.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the location verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.locations.<name>.index",
                    "option_description": "<rendered-html><p>Adds DirectoryIndex directive. See <a\nhref=\"https://httpd.apache.org/docs/2.4/mod/mod_dir.html#directoryindex\">https://httpd.apache.org/docs/2.4/mod/mod_dir.html#directoryindex</a>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"index.php index.html\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.locations.<name>.priority",
                    "option_description": "<rendered-html><p>Order of this location block in relation to the others in the vhost.\nThe semantics are the same as with <code>lib.mkOrder</code>. Smaller\nvalues have a greater priority.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.locations.<name>.proxyPass",
                    "option_description": "<rendered-html><p>Sets up a simple reverse proxy as described by <a\nhref=\"https://httpd.apache.org/docs/2.4/howto/reverse_proxy.html#simple\">https://httpd.apache.org/docs/2.4/howto/reverse_proxy.html#simple</a>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"http://www.example.org/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.logFormat",
                    "option_description": "<rendered-html><p>Log format for Apache\u2019s log files. Possible values are: combined,\ncommon, referer, agent.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"common\"",
                    "option_example": "\"combined\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHUmo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.onlySSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS and reject plain HTTP connections. This will\nset defaults for <code>listen</code> to listen on all interfaces on port\n443.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.robotsEntries",
                    "option_description": "<rendered-html><p>Specification of pages to be ignored by web crawlers. See <a\nhref=\"http://www.robotstxt.org/\">http://www.robotstxt.org/</a> for\ndetails.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"Disallow: /foo/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.servedDirs",
                    "option_description": "<rendered-html><p>This option provides a simple way to serve static directories.</p>\n</rendered-html>",
                    "option_type": "list of (attribute set)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    dir = \"/home/eelco/Dev/nix-homepage\";\n    urlPath = \"/nix\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.servedFiles",
                    "option_description": "<rendered-html><p>This option provides a simple way to serve individual, static\nfiles.</p>\n<div class=\"note\">\n<p>This option has been deprecated and will be removed in a future\nversion of NixOS. You can achieve the same result by making use of the\n<code>locations.&lt;name&gt;.alias</code> option.</p>\n</div>\n</rendered-html>",
                    "option_type": "list of (attribute set)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    file = \"/home/eelco/some-file.png\";\n    urlPath = \"/foo/bar.png\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.serverAliases",
                    "option_description": "<rendered-html><p>Additional names of virtual hosts served by this virtual host\nconfiguration.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"www.example.org\"\n  \"www.example.org:8080\"\n  \"example.org\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.sslServerCert",
                    "option_description": "<rendered-html><p>Path to server SSL certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.cert\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.sslServerChain",
                    "option_description": "<rendered-html><p>Path to server SSL chain file.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/ca.pem\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.sslServerKey",
                    "option_description": "<rendered-html><p>Path to server SSL certificate key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nagios.nix",
                    "option_name": "services.nagios.virtualHost.useACMEHost",
                    "option_description": "<rendered-html><p>A host of an existing Let\u2019s Encrypt certificate to use. This is\nuseful if you have many subdomains and want to avoid hitting the <a\nhref=\"https://letsencrypt.org/docs/rate-limits\">rate limit</a>.\nAlternately, you can generate a certificate through <code\nclass=\"interpreted-text\" role=\"option\">enableACME</code>. <em>Note that\nthis option does not create any certificates, nor it does add subdomains\nto existing ones \u2013 you will need to create them manually using <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=security.acme.certs&amp;query=security.acme.certs\">security.acme.certs</a>.</em></p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.enable",
                    "option_description": "<rendered-html><p>Whether to enable namecoind, Namecoin client.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.extraNodes",
                    "option_description": "<rendered-html><p>List of additional peer IP addresses to connect to.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.generate",
                    "option_description": "<rendered-html><p>Whether to generate (mine) Namecoins.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.rpc.address",
                    "option_description": "<rendered-html><p>IP address the RPC server will bind to.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.rpc.allowFrom",
                    "option_description": "<rendered-html><p>List of IP address ranges allowed to use the RPC API. Wiledcards (*)\ncan be user to specify a range.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"127.0.0.1\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.rpc.certificate",
                    "option_description": "<rendered-html><p>Certificate file for securing RPC connections.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/lib/namecoind/server.cert\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.rpc.key",
                    "option_description": "<rendered-html><p>Key file for securing RPC connections.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/lib/namecoind/server.pem\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.rpc.password",
                    "option_description": "<rendered-html><p>Password for RPC connections.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.rpc.port",
                    "option_description": "<rendered-html><p>Port the RPC server will bind to.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8332",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.rpc.user",
                    "option_description": "<rendered-html><p>User name for RPC connections.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.trustedNodes",
                    "option_description": "<rendered-html><p>List of the only peer IP addresses to connect to. If specified no\nother connection will be made.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/namecoind.nix",
                    "option_name": "services.namecoind.wallet",
                    "option_description": "<rendered-html><p>Wallet file. The ownership of the file has to be namecoin:namecoin,\nand the permissions must be 0640.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/namecoind/wallet.dat\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nar-serve.nix",
                    "option_name": "services.nar-serve.cacheURL",
                    "option_description": "<rendered-html><p>Binary cache URL to connect to.</p>\n<p>The URL format is compatible with the nix remote url style, such\nas:</p>\n<ul>\n<li>http://, https:// for binary caches via HTTP or HTTPS</li>\n<li>s3:// for binary caches stored in Amazon S3</li>\n<li>gs:// for binary caches stored in Google Cloud Storage</li>\n</ul>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"https://cache.nixos.org/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nar-serve.nix",
                    "option_name": "services.nar-serve.enable",
                    "option_description": "<rendered-html><p>Whether to enable serving NAR file contents via HTTP.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nar-serve.nix",
                    "option_name": "services.nar-serve.port",
                    "option_description": "<rendered-html><p>Port number where nar-serve will listen on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8383",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nats.nix",
                    "option_name": "services.nats.dataDir",
                    "option_description": "<rendered-html><p>The NATS data directory. Only used if JetStream is enabled, for\nstoring stream metadata and messages.</p>\n<p>If left as the default value this directory will automatically be\ncreated before the NATS server starts, otherwise the sysadmin is\nresponsible for ensuring the directory exists with appropriate ownership\nand permissions.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/nats\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nats.nix",
                    "option_name": "services.nats.enable",
                    "option_description": "<rendered-html><p>Whether to enable NATS messaging system.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nats.nix",
                    "option_name": "services.nats.group",
                    "option_description": "<rendered-html><p>Group under which NATS runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nats\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nats.nix",
                    "option_name": "services.nats.jetstream",
                    "option_description": "<rendered-html><p>Whether to enable JetStream.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nats.nix",
                    "option_name": "services.nats.port",
                    "option_description": "<rendered-html><p>Port on which to listen.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "4222",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nats.nix",
                    "option_name": "services.nats.serverName",
                    "option_description": "<rendered-html><p>Name of the NATS server, must be unique if clustered.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nats\"",
                    "option_example": "\"n1-c3\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nats.nix",
                    "option_name": "services.nats.settings",
                    "option_description": "<rendered-html><p>Declarative NATS configuration. See the <a\nhref=\"https://docs.nats.io/nats-server/configuration\"> NATS\ndocumentation</a> for a list of options.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": "{\n  jetstream = {\n    max_mem = \"1G\";\n    max_file = \"10G\";\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nats.nix",
                    "option_name": "services.nats.user",
                    "option_description": "<rendered-html><p>User account under which NATS runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nats\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/navidrome.nix",
                    "option_name": "services.navidrome.enable",
                    "option_description": "<rendered-html><p>Whether to enable Navidrome music server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/navidrome.nix",
                    "option_name": "services.navidrome.group",
                    "option_description": "<rendered-html><p>Group under which Navidrome runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"navidrome\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/navidrome.nix",
                    "option_name": "services.navidrome.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open the TCP port in the firewall</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/navidrome.nix",
                    "option_name": "services.navidrome.package",
                    "option_description": "<rendered-html><p>The navidrome package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.navidrome",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/navidrome.nix",
                    "option_name": "services.navidrome.settings",
                    "option_description": "<rendered-html><p>Configuration for Navidrome, see <a\nhref=\"https://www.navidrome.org/docs/usage/configuration-options/\">https://www.navidrome.org/docs/usage/configuration-options/</a>\nfor supported values.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": "{\n  MusicFolder = \"/mnt/music\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/navidrome.nix",
                    "option_name": "services.navidrome.settings.Address",
                    "option_description": "<rendered-html><p>Address to run Navidrome on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/navidrome.nix",
                    "option_name": "services.navidrome.settings.Port",
                    "option_description": "<rendered-html><p>Port to run Navidrome on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "4533",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/navidrome.nix",
                    "option_name": "services.navidrome.user",
                    "option_description": "<rendered-html><p>User under which Navidrome runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"navidrome\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nbd.nix",
                    "option_name": "services.nbd.server.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Network Block Device (nbd) server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nbd.nix",
                    "option_name": "services.nbd.server.exports",
                    "option_description": "<rendered-html><p>Files or block devices to make available over the network.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nbd.nix",
                    "option_name": "services.nbd.server.exports.<name>.allowAddresses",
                    "option_description": "<rendered-html><p>IPs and subnets that are authorized to connect for this device. If\nnot specified, the server will allow all connections.</p>\n</rendered-html>",
                    "option_type": "null or (list of string)",
                    "option_default": "null",
                    "option_example": "[\n  \"10.10.0.0/24\"\n  \"127.0.0.1\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nbd.nix",
                    "option_name": "services.nbd.server.exports.<name>.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for this export. See <code class=\"interpreted-text\"\nrole=\"manpage\">nbd-server(5)</code>.</p>\n</rendered-html>",
                    "option_type": "attribute set of (boolean or signed integer or floating point number or string)",
                    "option_default": "{\n  flush = true;\n  fua = true;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nbd.nix",
                    "option_name": "services.nbd.server.exports.<name>.path",
                    "option_description": "<rendered-html><p>File or block device to export.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"/dev/sdb1\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nbd.nix",
                    "option_name": "services.nbd.server.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the server. See <code class=\"interpreted-text\"\nrole=\"manpage\">nbd-server(5)</code>.</p>\n</rendered-html>",
                    "option_type": "attribute set of (boolean or signed integer or floating point number or string)",
                    "option_default": "{\n  allowlist = false;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nbd.nix",
                    "option_name": "services.nbd.server.listenAddress",
                    "option_description": "<rendered-html><p>Address to listen on. If not specified, the server will listen on all\ninterfaces.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"10.10.0.1\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nbd.nix",
                    "option_name": "services.nbd.server.listenPort",
                    "option_description": "<rendered-html><p>Port to listen on. The port is NOT automatically opened in the\nfirewall.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "10809",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.address",
                    "option_description": "<rendered-html><p>The IP address the ncdns resolver will bind to. Leave this unchanged\nif you do not wish to directly expose the resolver.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"[::1]\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.dnssec.enable",
                    "option_description": "<rendered-html><p>Whether to enable DNSSEC support in ncdns. This will generate KSK and\nZSK keypairs (unless provided via the options <code\nclass=\"interpreted-text\"\nrole=\"option\">services.ncdns.dnssec.publicKey</code>, <code\nclass=\"interpreted-text\"\nrole=\"option\">services.ncdns.dnssec.privateKey</code> etc.) and add a\ntrust anchor to recursive resolvers .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.dnssec.keys.private",
                    "option_description": "<rendered-html><p>Path to the file containing the KSK private key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/ncdns/bit.private\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.dnssec.keys.public",
                    "option_description": "<rendered-html><p>Path to the file containing the KSK public key. The key can be\ngenerated using the <code>dnssec-keygen</code> command, provided by the\npackage <code>bind</code> as follows:</p>\n<pre><code>$ dnssec-keygen -a RSASHA256 -3 -b 2048 -f KSK bit</code></pre>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/ncdns/bit.key\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.dnssec.keys.zonePrivate",
                    "option_description": "<rendered-html><p>Path to the file containing the ZSK private key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/ncdns/bit-zone.private\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.dnssec.keys.zonePublic",
                    "option_description": "<rendered-html><p>Path to the file containing the ZSK public key. The key can be\ngenerated using the <code>dnssec-keygen</code> command, provided by the\npackage <code>bind</code> as follows:</p>\n<pre><code>$ dnssec-keygen -a RSASHA256 -3 -b 2048 bit</code></pre>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/ncdns/bit-zone.key\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.enable",
                    "option_description": "<rendered-html><p>Whether to enable ncdns, a Go daemon to bridge Namecoin to DNS. To\nresolve .bit domains set <code>services.namecoind.enable = true;</code>\nand an RPC username/password .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.identity.address",
                    "option_description": "<rendered-html><p>The IP address the hostname specified in <code\nclass=\"interpreted-text\"\nrole=\"option\">services.ncdns.identity.hostname</code> should resolve to.\nIf you are only using ncdns locally you can ignore this.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.127.127.127\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.identity.hostmaster",
                    "option_description": "<rendered-html><p>An email address for the SOA record at the bit zone. If you are only\nusing ncdns locally you can ignore this.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"root@example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.identity.hostname",
                    "option_description": "<rendered-html><p>The hostname of this ncdns instance, which defaults to the machine\nhostname. If specified, ncdns lists the hostname as an NS record at the\nzone apex:</p>\n<pre><code>bit. IN NS ns1.example.com.</code></pre>\n<p>If unset ncdns will generate an internal pseudo-hostname under the\nzone, which will resolve to the value of <code class=\"interpreted-text\"\nrole=\"option\">services.ncdns.identity.address</code>. If you are only\nusing ncdns locally you can ignore this.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "config.networking.hostName",
                    "option_example": "\"example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.port",
                    "option_description": "<rendered-html><p>The port the ncdns resolver will bind to.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5333",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ncdns.nix",
                    "option_name": "services.ncdns.settings",
                    "option_description": "<rendered-html><p>ncdns settings. Use this option to configure ncds settings not\nexposed in a NixOS option or to bypass one. See the example ncdns.conf\nfile at <a\nhref=\"https://github.com/namecoin/ncdns/blob/master/_doc/ncdns.conf.example\">https://github.com/namecoin/ncdns/blob/master/_doc/ncdns.conf.example</a>\nfor the available options.</p>\n</rendered-html>",
                    "option_type": "ncdns.conf configuration type. The format consists of an\nattribute set of settings. Each setting can be either `null`,\na value or an attribute set. The allowed values are integers,\nstrings, booleans or paths.\n",
                    "option_default": "{ }",
                    "option_example": "{ # enable webserver\n  ncdns.httplistenaddr = \":8202\";\n\n  # synchronize TLS certs\n  certstore.nss = true;\n  # note: all paths are relative to the config file\n  certstore.nsscertdir =  \"../../var/lib/ncdns\";\n  certstore.nssdbdir = \"../../home/alice/.pki/nssdb\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.configFile",
                    "option_description": "<rendered-html><p>Path to configuration file.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.enable",
                    "option_description": "<rendered-html><p>Whether to enable daemon that proxies NDP (Neighbor Discovery\nProtocol) messages between interfaces.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.interface",
                    "option_description": "<rendered-html><p>Interface which is on link-level with router. (Legacy option, use\nservices.ndppd.proxies.&lt;interface&gt;.rules.&lt;network&gt;\ninstead)</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"eth0\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.network",
                    "option_description": "<rendered-html><p>Network that we proxy. (Legacy option, use\nservices.ndppd.proxies.&lt;interface&gt;.rules.&lt;network&gt;\ninstead)</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"1111::/64\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.proxies",
                    "option_description": "<rendered-html><p>This sets up a listener, that will listen for any Neighbor\nSolicitation messages, and respond to them according to a set of\nrules.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  eth0.rules.\"1111::/64\" = {};\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.proxies.<name>.interface",
                    "option_description": "<rendered-html><p>Listen for any Neighbor Solicitation messages on this interface, and\nrespond to them according to a set of rules. Defaults to the name of the\nattrset.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.proxies.<name>.router",
                    "option_description": "<rendered-html><p>Turns on or off the router flag for Neighbor Advertisement\nMessages.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.proxies.<name>.rules",
                    "option_description": "<rendered-html><p>This is a rule that the target address is to match against. If no\nnetmask is provided, /128 is assumed. You may have several rule\nsections, and the addresses may or may not overlap.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.proxies.<name>.rules.<name>.interface",
                    "option_description": "<rendered-html><p>Interface to use when method is iface.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.proxies.<name>.rules.<name>.method",
                    "option_description": "<rendered-html><p>static: Immediately answer any Neighbor Solicitation Messages (if\nthey match the IP rule). iface: Forward the Neighbor Solicitation\nMessage through the specified interface and only respond if a matching\nNeighbor Advertisement Message is received. auto: Same as iface, but\ninstead of manually specifying the outgoing interface, check for a\nmatching route in /proc/net/ipv6_route.</p>\n</rendered-html>",
                    "option_type": "one of \"static\", \"iface\", \"auto\"",
                    "option_default": "\"auto\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.proxies.<name>.rules.<name>.network",
                    "option_description": "<rendered-html><p>This is the target address is to match against. If no netmask is\nprovided, /128 is assumed. The addresses of several rules may or may not\noverlap. Defaults to the name of the attrset.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.proxies.<name>.timeout",
                    "option_description": "<rendered-html><p>Controls how long to wait for a Neighbor Advertisement Message before\ninvalidating the entry, in milliseconds.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "500",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.proxies.<name>.ttl",
                    "option_description": "<rendered-html><p>Controls how long a valid or invalid entry remains in the cache, in\nmilliseconds.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "30000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ndppd.nix",
                    "option_name": "services.ndppd.routeTTL",
                    "option_description": "<rendered-html><p>This tells \u2018ndppd\u2019 how often to reload the route file\n/proc/net/ipv6_route, in milliseconds.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "30000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/neard.nix",
                    "option_name": "services.neard.enable",
                    "option_description": "<rendered-html><p>Whether to enable neard, an NFC daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks",
                    "option_description": "<rendered-html><p>Nebula network definitions.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.ca",
                    "option_description": "<rendered-html><p>Path to the certificate authority certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/etc/nebula/ca.crt\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.cert",
                    "option_description": "<rendered-html><p>Path to the host certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/etc/nebula/host.crt\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.enable",
                    "option_description": "<rendered-html><p>Enable or disable this network.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.firewall.inbound",
                    "option_description": "<rendered-html><p>Firewall rules for inbound traffic.</p>\n</rendered-html>",
                    "option_type": "list of (attribute set)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    host = \"any\";\n    port = \"any\";\n    proto = \"any\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.firewall.outbound",
                    "option_description": "<rendered-html><p>Firewall rules for outbound traffic.</p>\n</rendered-html>",
                    "option_type": "list of (attribute set)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    host = \"any\";\n    port = \"any\";\n    proto = \"any\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.isLighthouse",
                    "option_description": "<rendered-html><p>Whether this node is a lighthouse.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.isRelay",
                    "option_description": "<rendered-html><p>Whether this node is a relay.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.key",
                    "option_description": "<rendered-html><p>Path to the host key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/etc/nebula/host.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.lighthouses",
                    "option_description": "<rendered-html><p>List of IPs of lighthouse hosts this node should report to and query\nfrom. This should be empty on lighthouse nodes. The IPs should be the\nlighthouse\u2019s Nebula IPs, not their external IPs.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"192.168.100.1\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.listen.host",
                    "option_description": "<rendered-html><p>IP address to listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.listen.port",
                    "option_description": "<rendered-html><p>Port number to listen on.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "if (config.services.nebula.networks.${name}.isLighthouse ||\n    config.services.nebula.networks.${name}.isRelay) then\n  4242\nelse\n  0;\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.package",
                    "option_description": "<rendered-html><p>The nebula package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nebula",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.relays",
                    "option_description": "<rendered-html><p>List of IPs of relays that this node should allow traffic from.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"192.168.100.1\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.settings",
                    "option_description": "<rendered-html><p>Nebula configuration. Refer to <a\nhref=\"https://github.com/slackhq/nebula/blob/master/examples/config.yml\">https://github.com/slackhq/nebula/blob/master/examples/config.yml</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": "{\n  lighthouse.dns = {\n    host = \"0.0.0.0\";\n    port = 53;\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.staticHostMap",
                    "option_description": "<rendered-html><p>The static host map defines a set of hosts with fixed IP addresses on\nthe internet (or any network). A host can have multiple fixed IP\naddresses defined here, and nebula will try each when establishing a\ntunnel.</p>\n</rendered-html>",
                    "option_type": "attribute set of list of string",
                    "option_default": "{ }",
                    "option_example": "{\n  \"192.168.100.1\" = [\n    \"100.64.22.11:4242\"\n  ];\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.tun.device",
                    "option_description": "<rendered-html><p>Name of the tun device. Defaults to nebula.${networkName}.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nebula.nix",
                    "option_name": "services.nebula.networks.<name>.tun.disable",
                    "option_description": "<rendered-html><p>When tun is disabled, a lighthouse can be started without a local tun\ninterface (and therefore without root).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.bolt.enable",
                    "option_description": "<rendered-html><p>Enable the BOLT connector for Neo4j. Setting this option to\n<code>false</code> will stop Neo4j from listening for incoming\nconnections on the BOLT port (7687 by default).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.bolt.listenAddress",
                    "option_description": "<rendered-html><p>Neo4j listen address for BOLT traffic. The listen address is\nexpressed in the format\n<code>&lt;ip-address&gt;:&lt;port-number&gt;</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\":7687\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.bolt.sslPolicy",
                    "option_description": "<rendered-html><p>Neo4j SSL policy for BOLT traffic.</p>\n<p>The legacy policy is a special policy which is not defined in the\npolicy configuration section, but rather derives from <code\nclass=\"interpreted-text\" role=\"option\">directories.certificates</code>\nand associated files (by default: <code class=\"interpreted-text\"\nrole=\"file\">neo4j.key</code> and <code class=\"interpreted-text\"\nrole=\"file\">neo4j.cert</code>). Its use will be deprecated.</p>\n<p>Note: This connector must be configured to support/require SSL/TLS\nfor the legacy policy to actually be utilized. See <code\nclass=\"interpreted-text\" role=\"option\">bolt.tlsLevel</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"legacy\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.bolt.tlsLevel",
                    "option_description": "<rendered-html><p>SSL/TSL requirement level for BOLT traffic.</p>\n</rendered-html>",
                    "option_type": "one of \"REQUIRED\", \"OPTIONAL\", \"DISABLED\"",
                    "option_default": "\"OPTIONAL\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.constrainLoadCsv",
                    "option_description": "<rendered-html><p>Sets the root directory for file URLs used with the Cypher\n<code>LOAD CSV</code> clause to be that defined by <code\nclass=\"interpreted-text\" role=\"option\">directories.imports</code>. It\nrestricts access to only those files within that directory and its\nsubdirectories.</p>\n<p>Setting this option to <code>false</code> introduces possible\nsecurity problems.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.defaultListenAddress",
                    "option_description": "<rendered-html><p>Default network interface to listen for incoming connections. To\nlisten for connections on all interfaces, use \u201c0.0.0.0\u201d.</p>\n<p>Specifies the default IP address and address part of connector\nspecific <code class=\"interpreted-text\"\nrole=\"option\">listenAddress</code> options. To bind specific connectors\nto a specific network interfaces, specify the entire <code\nclass=\"interpreted-text\" role=\"option\">listenAddress</code> option for\nthat connector.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.directories.certificates",
                    "option_description": "<rendered-html><p>Directory for storing certificates to be used by Neo4j for TLS\nconnections.</p>\n<p>When setting this directory to something other than its default,\nensure the directory\u2019s existence, and that read/write permissions are\ngiven to the Neo4j daemon user <code>neo4j</code>.</p>\n<p>Note that changing this directory from its default will prevent the\ndirectory structure required for each SSL policy from being\nautomatically generated. A policy\u2019s directory structure as defined by\nits <code class=\"interpreted-text\"\nrole=\"option\">baseDirectory</code>,<code class=\"interpreted-text\"\nrole=\"option\">revokedDir</code> and <code class=\"interpreted-text\"\nrole=\"option\">trustedDir</code> must then be setup manually. The\nexistence of these directories is mandatory, as well as the presence of\nthe certificate file and the private key. Ensure the correct permissions\nare set on these directories and files.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.neo4j.directories.home}/certificates\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.directories.data",
                    "option_description": "<rendered-html><p>Path of the data directory. You must not configure more than one\nNeo4j installation to use the same data directory.</p>\n<p>When setting this directory to something other than its default,\nensure the directory\u2019s existence, and that read/write permissions are\ngiven to the Neo4j daemon user <code>neo4j</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.neo4j.directories.home}/data\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.directories.home",
                    "option_description": "<rendered-html><p>Path of the Neo4j home directory. Other default directories are\nsubdirectories of this path. This directory will be created if\nnon-existent, and its ownership will be <code class=\"interpreted-text\"\nrole=\"command\">chown</code> to the Neo4j daemon user\n<code>neo4j</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/neo4j\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.directories.imports",
                    "option_description": "<rendered-html><p>The root directory for file URLs used with the Cypher\n<code>LOAD CSV</code> clause. Only meaningful when <code\nclass=\"interpreted-text\" role=\"option\">constrainLoadCvs</code> is set to\n<code>true</code>.</p>\n<p>When setting this directory to something other than its default,\nensure the directory\u2019s existence, and that read permission is given to\nthe Neo4j daemon user <code>neo4j</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.neo4j.directories.home}/import\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.directories.plugins",
                    "option_description": "<rendered-html><p>Path of the database plugin directory. Compiled Java JAR files that\ncontain database procedures will be loaded if they are placed in this\ndirectory.</p>\n<p>When setting this directory to something other than its default,\nensure the directory\u2019s existence, and that read permission is given to\nthe Neo4j daemon user <code>neo4j</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.neo4j.directories.home}/plugins\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.enable",
                    "option_description": "<rendered-html><p>Whether to enable Neo4j Community Edition.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.extraServerConfig",
                    "option_description": "<rendered-html><p>Extra configuration for Neo4j Community server. Refer to the <a\nhref=\"https://neo4j.com/docs/operations-manual/current/reference/configuration-settings/\">complete\nreference</a> of Neo4j configuration settings.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.http.enable",
                    "option_description": "<rendered-html><p>Enable the HTTP connector for Neo4j. Setting this option to\n<code>false</code> will stop Neo4j from listening for incoming\nconnections on the HTTPS port (7474 by default).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.http.listenAddress",
                    "option_description": "<rendered-html><p>Neo4j listen address for HTTP traffic. The listen address is\nexpressed in the format\n<code>&lt;ip-address&gt;:&lt;port-number&gt;</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\":7474\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.https.enable",
                    "option_description": "<rendered-html><p>Enable the HTTPS connector for Neo4j. Setting this option to\n<code>false</code> will stop Neo4j from listening for incoming\nconnections on the HTTPS port (7473 by default).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.https.listenAddress",
                    "option_description": "<rendered-html><p>Neo4j listen address for HTTPS traffic. The listen address is\nexpressed in the format\n<code>&lt;ip-address&gt;:&lt;port-number&gt;</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\":7473\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.https.sslPolicy",
                    "option_description": "<rendered-html><p>Neo4j SSL policy for HTTPS traffic.</p>\n<p>The legacy policy is a special policy which is not defined in the\npolicy configuration section, but rather derives from <code\nclass=\"interpreted-text\" role=\"option\">directories.certificates</code>\nand associated files (by default: <code class=\"interpreted-text\"\nrole=\"file\">neo4j.key</code> and <code class=\"interpreted-text\"\nrole=\"file\">neo4j.cert</code>). Its use will be deprecated.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"legacy\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.package",
                    "option_description": "<rendered-html><p>The neo4j package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.neo4j",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.readOnly",
                    "option_description": "<rendered-html><p>Only allow read operations from this Neo4j instance.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.shell.enable",
                    "option_description": "<rendered-html><p>Enable a remote shell server which Neo4j Shell clients can log in to.\nOnly applicable to <code class=\"interpreted-text\"\nrole=\"command\">neo4j-shell</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies",
                    "option_description": "<rendered-html><p>Defines the SSL policies for use with Neo4j connectors. Each\nattribute of this set defines a policy, with the attribute name defining\nthe name of the policy and its namespace. Refer to the operations manual\nsection on Neo4j\u2019s <a\nhref=\"https://neo4j.com/docs/operations-manual/current/security/ssl-framework/\">SSL\nFramework</a> for further details.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.allowKeyGeneration",
                    "option_description": "<rendered-html><p>Allows the generation of a private key and associated self-signed\ncertificate. Only performed when both objects cannot be found for this\npolicy. It is recommended to turn this off again after keys have been\ngenerated.</p>\n<p>The public certificate is required to be duplicated to the directory\nholding trusted certificates as defined by the <code\nclass=\"interpreted-text\" role=\"option\">trustedDir</code> option.</p>\n<p>Keys should in general be generated and distributed offline by a\ntrusted certificate authority and not by utilizing this mode.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.baseDirectory",
                    "option_description": "<rendered-html><p>The mandatory base directory for cryptographic objects of this\npolicy. This path is only automatically generated when this option as\nwell as <code class=\"interpreted-text\"\nrole=\"option\">directories.certificates</code> are left at their default.\nEnsure read/write permissions are given to the Neo4j daemon user\n<code>neo4j</code>.</p>\n<p>It is also possible to override each individual configuration with\nabsolute paths. See the <code class=\"interpreted-text\"\nrole=\"option\">privateKey</code> and <code class=\"interpreted-text\"\nrole=\"option\">publicCertificate</code> policy options.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.neo4j.directories.certificates}/${name}\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.ciphers",
                    "option_description": "<rendered-html><p>Restrict the allowed ciphers of this policy to those defined here.\nThe default ciphers are those of the JVM platform.</p>\n</rendered-html>",
                    "option_type": "null or (list of string)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.clientAuth",
                    "option_description": "<rendered-html><p>The client authentication stance for this policy.</p>\n</rendered-html>",
                    "option_type": "one of \"NONE\", \"OPTIONAL\", \"REQUIRE\"",
                    "option_default": "\"REQUIRE\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.privateKey",
                    "option_description": "<rendered-html><p>The name of private PKCS #8 key file for this policy to be found in\nthe <code class=\"interpreted-text\" role=\"option\">baseDirectory</code>,\nor the absolute path to the key file. It is mandatory that a key can be\nfound or generated.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"private.key\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.publicCertificate",
                    "option_description": "<rendered-html><p>The name of public X.509 certificate (chain) file in PEM format for\nthis policy to be found in the <code class=\"interpreted-text\"\nrole=\"option\">baseDirectory</code>, or the absolute path to the\ncertificate file. It is mandatory that a certificate can be found or\ngenerated.</p>\n<p>The public certificate is required to be duplicated to the directory\nholding trusted certificates as defined by the <code\nclass=\"interpreted-text\" role=\"option\">trustedDir</code> option.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"public.crt\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.revokedDir",
                    "option_description": "<rendered-html><p>Path to directory of CRLs (Certificate Revocation Lists) in PEM\nformat. Must be an absolute path. The existence of this directory is\nmandatory and will need to be created manually when: setting this option\nto something other than its default; setting either this policy\u2019s <code\nclass=\"interpreted-text\" role=\"option\">baseDirectory</code> or <code\nclass=\"interpreted-text\" role=\"option\">directories.certificates</code>\nto something other than their default. Ensure read/write permissions are\ngiven to the Neo4j daemon user <code>neo4j</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.neo4j.ssl.policies.<name>.baseDirectory}/revoked\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.tlsVersions",
                    "option_description": "<rendered-html><p>Restrict the TLS protocol versions of this policy to those defined\nhere.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"TLSv1.2\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.trustAll",
                    "option_description": "<rendered-html><p>Makes this policy trust all remote parties. Enabling this is not\nrecommended and the policy\u2019s trusted directory will be ignored. Use of\nthis mode is discouraged. It would offer encryption but no security.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.ssl.policies.<name>.trustedDir",
                    "option_description": "<rendered-html><p>Path to directory of X.509 certificates in PEM format for trusted\nparties. Must be an absolute path. The existence of this directory is\nmandatory and will need to be created manually when: setting this option\nto something other than its default; setting either this policy\u2019s <code\nclass=\"interpreted-text\" role=\"option\">baseDirectory</code> or <code\nclass=\"interpreted-text\" role=\"option\">directories.certificates</code>\nto something other than their default. Ensure read/write permissions are\ngiven to the Neo4j daemon user <code>neo4j</code>.</p>\n<p>The public certificate as defined by <code class=\"interpreted-text\"\nrole=\"option\">publicCertificate</code> is required to be duplicated to\nthis directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.neo4j.ssl.policies.<name>.baseDirectory}/trusted\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/neo4j.nix",
                    "option_name": "services.neo4j.workerCount",
                    "option_description": "<rendered-html><p>Number of Neo4j worker threads, where the default of <code>0</code>\nindicates a worker count equal to the number of available\nprocessors.</p>\n</rendered-html>",
                    "option_type": "integer between 0 and 44738 (both inclusive)",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/netatalk.nix",
                    "option_name": "services.netatalk.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Netatalk AFP fileserver.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/netatalk.nix",
                    "option_name": "services.netatalk.extmap",
                    "option_description": "<rendered-html><p>File name extension mappings. See <code class=\"interpreted-text\"\nrole=\"manpage\">extmap.conf(5)</code>. for more information.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/netatalk.nix",
                    "option_name": "services.netatalk.port",
                    "option_description": "<rendered-html><p>TCP port to be used for AFP.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "548",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/netatalk.nix",
                    "option_name": "services.netatalk.settings",
                    "option_description": "<rendered-html><p>Configuration for Netatalk. See <code class=\"interpreted-text\"\nrole=\"manpage\">afp.conf(5)</code>.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": "{ }",
                    "option_example": "{\n  Global = {\n    \"uam list\" = \"uams_guest.so\";\n  };\n  Homes = {\n    \"basedir regex\" = \"/home\";\n    path = \"afp-data\";\n  };\n  example-volume = {\n    path = \"/srv/volume\";\n    \"read only\" = true;\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird.nix",
                    "option_name": "services.netbird.enable",
                    "option_description": "<rendered-html><p>Whether to enable Netbird daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird.nix",
                    "option_name": "services.netbird.package",
                    "option_description": "<rendered-html><p>The netbird package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.netbird",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/coturn.nix",
                    "option_name": "services.netbird.server.coturn.domain",
                    "option_description": "<rendered-html><p>The domain under which the coturn server runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/coturn.nix",
                    "option_name": "services.netbird.server.coturn.enable",
                    "option_description": "<rendered-html><p>Whether to enable a Coturn server for Netbird, will also open the\nfirewall on the configured range.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/coturn.nix",
                    "option_name": "services.netbird.server.coturn.openPorts",
                    "option_description": "<rendered-html><p>The list of ports used by coturn for listening to open in the\nfirewall.</p>\n</rendered-html>",
                    "option_type": "list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "with config.services.coturn; [\n  listening-port\n  alt-listening-port\n  tls-listening-port\n  alt-tls-listening-port\n];\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/coturn.nix",
                    "option_name": "services.netbird.server.coturn.password",
                    "option_description": "<rendered-html><p>The password of the user used by netbird to connect to the coturn\nserver. Be advised this will be world readable in the nix store.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/coturn.nix",
                    "option_name": "services.netbird.server.coturn.passwordFile",
                    "option_description": "<rendered-html><p>The path to a file containing the password of the user used by\nnetbird to connect to the coturn server.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/coturn.nix",
                    "option_name": "services.netbird.server.coturn.useAcmeCertificates",
                    "option_description": "<rendered-html><p>Whether to use ACME certificates corresponding to the given domain\nfor the server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/coturn.nix",
                    "option_name": "services.netbird.server.coturn.user",
                    "option_description": "<rendered-html><p>The username used by netbird to connect to the coturn server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"netbird\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/dashboard.nix",
                    "option_name": "services.netbird.server.dashboard.domain",
                    "option_description": "<rendered-html><p>The domain under which the dashboard runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/dashboard.nix",
                    "option_name": "services.netbird.server.dashboard.enable",
                    "option_description": "<rendered-html><p>Whether to enable the static netbird dashboard frontend.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/dashboard.nix",
                    "option_name": "services.netbird.server.dashboard.enableNginx",
                    "option_description": "<rendered-html><p>Whether to enable Nginx reverse-proxy to serve the dashboard.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/dashboard.nix",
                    "option_name": "services.netbird.server.dashboard.finalDrv",
                    "option_description": "<rendered-html><p>The derivation containing the final templated dashboard.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/dashboard.nix",
                    "option_name": "services.netbird.server.dashboard.managementServer",
                    "option_description": "<rendered-html><p>The address of the management server, used for the API endpoints.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/dashboard.nix",
                    "option_name": "services.netbird.server.dashboard.package",
                    "option_description": "<rendered-html><p>The netbird-dashboard package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.netbird-dashboard",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/dashboard.nix",
                    "option_name": "services.netbird.server.dashboard.settings",
                    "option_description": "<rendered-html><p>An attribute set that will be used to substitute variables when\nbuilding the dashboard. Any values set here will be templated into the\nfrontend and be public for anyone that can reach your website. The exact\nvalues sadly aren\u2019t documented anywhere. A starting point when searching\nfor valid values is this <a\nhref=\"https://github.com/netbirdio/dashboard/blob/main/docker/init_react_envs.sh\">script</a>\nThe only mandatory value is \u2018AUTH_AUTHORITY\u2019 as we cannot set a default\nvalue here.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or boolean)",
                    "option_default": "''\n  {\n    AUTH_AUDIENCE = \"netbird\";\n    AUTH_CLIENT_ID = \"netbird\";\n    AUTH_SUPPORTED_SCOPES = \"openid profile email\";\n    NETBIRD_TOKEN_SOURCE = \"idToken\";\n    USE_AUTH0 = false;\n  }\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/server.nix",
                    "option_name": "services.netbird.server.domain",
                    "option_description": "<rendered-html><p>The domain under which the netbird server runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/server.nix",
                    "option_name": "services.netbird.server.enable",
                    "option_description": "<rendered-html><p>Whether to enable Netbird Server stack, comprising the dashboard,\nmanagement API and signal service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/server.nix",
                    "option_name": "services.netbird.server.enableNginx",
                    "option_description": "<rendered-html><p>Whether to enable Nginx reverse-proxy for the netbird server\nservices.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.disableAnonymousMetrics",
                    "option_description": "<rendered-html><p>Disables push of anonymous usage metrics to NetBird.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.disableSingleAccountMode",
                    "option_description": "<rendered-html><p>If set to true, disables single account mode. The\n<code>singleAccountModeDomain</code> property will be ignored and every\nnew user will have a separate NetBird account.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.dnsDomain",
                    "option_description": "<rendered-html><p>Domain used for peer resolution.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"netbird.selfhosted\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.domain",
                    "option_description": "<rendered-html><p>The domain under which the management API runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.enable",
                    "option_description": "<rendered-html><p>Whether to enable Netbird Management Service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.enableNginx",
                    "option_description": "<rendered-html><p>Whether to enable Nginx reverse-proxy for the netbird management\nservice.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.extraOptions",
                    "option_description": "<rendered-html><p>Additional options given to netbird-mgmt as commandline\narguments.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.logLevel",
                    "option_description": "<rendered-html><p>Log level of the netbird services.</p>\n</rendered-html>",
                    "option_type": "one of \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\"",
                    "option_default": "\"INFO\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.oidcConfigEndpoint",
                    "option_description": "<rendered-html><p>The oidc discovery endpoint.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"https://example.eu.auth0.com/.well-known/openid-configuration\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.package",
                    "option_description": "<rendered-html><p>The netbird package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.netbird",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.port",
                    "option_description": "<rendered-html><p>Internal port of the management server.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8011",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.settings",
                    "option_description": "<rendered-html><p>Configuration of the netbird management server. Options containing\nsecret data should be set to an attribute set containing the attribute\n_secret</p>\n<ul>\n<li>a string pointing to a file containing the value the option should\nbe set to. See the example to get a better picture of this: in the\nresulting management.json file, the <code>DataStoreEncryptionKey</code>\nkey will be set to the contents of the\n/run/agenix/netbird_mgmt-data_store_encryption_key file.</li>\n</ul>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "defaultSettings = {\n  Stuns = [\n    {\n      Proto = \"udp\";\n      URI = \"stun:${cfg.turnDomain}:3478\";\n      Username = \"\";\n      Password = null;\n    }\n  ];\n\n  TURNConfig = {\n    Turns = [\n      {\n        Proto = \"udp\";\n        URI = \"turn:${cfg.turnDomain}:3478\";\n        Username = \"netbird\";\n        Password = \"netbird\";\n      }\n    ];\n\n    CredentialsTTL = \"12h\";\n    Secret = \"not-secure-secret\";\n    TimeBasedCredentials = false;\n  };\n\n  Signal = {\n    Proto = \"https\";\n    URI = \"${cfg.domain}:443\";\n    Username = \"\";\n    Password = null;\n  };\n\n  ReverseProxy = {\n    TrustedHTTPProxies = [ ];\n    TrustedHTTPProxiesCount = 0;\n    TrustedPeers = [ \"0.0.0.0/0\" ];\n  };\n\n  Datadir = \"${stateDir}/data\";\n  DataStoreEncryptionKey = \"genEVP6j/Yp2EeVujm0zgqXrRos29dQkpvX0hHdEUlQ=\";\n  StoreConfig = { Engine = \"sqlite\"; };\n\n  HttpConfig = {\n    Address = \"127.0.0.1:${builtins.toString cfg.port}\";\n    IdpSignKeyRefreshEnabled = true;\n    OIDCConfigEndpoint = cfg.oidcConfigEndpoint;\n  };\n\n  IdpManagerConfig = {\n    ManagerType = \"none\";\n    ClientConfig = {\n      Issuer = \"\";\n      TokenEndpoint = \"\";\n      ClientID = \"netbird\";\n      ClientSecret = \"\";\n      GrantType = \"client_credentials\";\n    };\n\n    ExtraConfig = { };\n    Auth0ClientCredentials = null;\n    AzureClientCredentials = null;\n    KeycloakClientCredentials = null;\n    ZitadelClientCredentials = null;\n  };\n\n  DeviceAuthorizationFlow = {\n    Provider = \"none\";\n    ProviderConfig = {\n      Audience = \"netbird\";\n      Domain = null;\n      ClientID = \"netbird\";\n      TokenEndpoint = null;\n      DeviceAuthEndpoint = \"\";\n      Scope = \"openid profile email offline_access api\";\n      UseIDToken = false;\n    };\n  };\n\n  PKCEAuthorizationFlow = {\n    ProviderConfig = {\n      Audience = \"netbird\";\n      ClientID = \"netbird\";\n      ClientSecret = \"\";\n      AuthorizationEndpoint = \"\";\n      TokenEndpoint = \"\";\n      Scope = \"openid profile email offline_access api\";\n      RedirectURLs = \"http://localhost:53000\";\n      UseIDToken = false;\n    };\n  };\n};\n",
                    "option_example": "{\n  DataStoreEncryptionKey = {\n    _secret = \"/run/agenix/netbird_mgmt-data_store_encryption_key\";\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.singleAccountModeDomain",
                    "option_description": "<rendered-html><p>Enables single account mode. This means that all the users will be\nunder the same account grouped by the specified domain. If the\ninstallation has more than one account, the property is ineffective.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"netbird.selfhosted\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.turnDomain",
                    "option_description": "<rendered-html><p>The domain of the TURN server to use.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/management.nix",
                    "option_name": "services.netbird.server.management.turnPort",
                    "option_description": "<rendered-html><p>The port of the TURN server to use.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3478",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/signal.nix",
                    "option_name": "services.netbird.server.signal.domain",
                    "option_description": "<rendered-html><p>The domain name for the signal service.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/signal.nix",
                    "option_name": "services.netbird.server.signal.enable",
                    "option_description": "<rendered-html><p>Whether to enable Netbird\u2019s Signal Service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/signal.nix",
                    "option_name": "services.netbird.server.signal.enableNginx",
                    "option_description": "<rendered-html><p>Whether to enable Nginx reverse-proxy for the netbird signal\nservice.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/signal.nix",
                    "option_name": "services.netbird.server.signal.logLevel",
                    "option_description": "<rendered-html><p>Log level of the netbird signal service.</p>\n</rendered-html>",
                    "option_type": "one of \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\"",
                    "option_default": "\"INFO\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/signal.nix",
                    "option_name": "services.netbird.server.signal.package",
                    "option_description": "<rendered-html><p>The netbird package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.netbird",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird/signal.nix",
                    "option_name": "services.netbird.server.signal.port",
                    "option_description": "<rendered-html><p>Internal port of the signal server.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8012",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird.nix",
                    "option_name": "services.netbird.tunnels",
                    "option_description": "<rendered-html><p>Attribute set of Netbird tunnels, each one will spawn a daemon\nlistening on \u2026</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird.nix",
                    "option_name": "services.netbird.tunnels.<name>.environment",
                    "option_description": "<rendered-html><p>Environment for the netbird service, used to pass configuration\noptions.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{\n  NB_CONFIG = \"/var/lib/${stateDir}/config.json\";\n  NB_LOG_FILE = \"console\";\n  NB_WIREGUARD_PORT = builtins.toString port;\n  NB_INTERFACE_NAME = name;\n  NB_DAMEON_ADDR = \"/var/run/${stateDir}\"\n}\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird.nix",
                    "option_name": "services.netbird.tunnels.<name>.port",
                    "option_description": "<rendered-html><p>Port for the \u2039name\u203a netbird interface.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "51820",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netbird.nix",
                    "option_name": "services.netbird.tunnels.<name>.stateDir",
                    "option_description": "<rendered-html><p>Directory storing the netbird configuration.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"netbird-\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.dataDir",
                    "option_description": "<rendered-html><p>Storage path of netbox.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/netbox\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.enable",
                    "option_description": "<rendered-html><p>Enable Netbox.</p>\n<p>This module requires a reverse proxy that serves <code>/static</code>\nseparately. See this <a\nhref=\"https://github.com/netbox-community/netbox/blob/develop/contrib/nginx.conf/\">example</a>\non how to configure this.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.enableLdap",
                    "option_description": "<rendered-html><p>Enable LDAP-Authentication for Netbox.</p>\n<p>This requires a configuration file being pass through\n<code>ldapConfigPath</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.extraConfig",
                    "option_description": "<rendered-html><p>Additional lines of configuration appended to the\n<code>configuration.py</code>. See the <a\nhref=\"https://docs.netbox.dev/en/stable/configuration/\">documentation</a>\nfor more possible options.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.keycloakClientSecret",
                    "option_description": "<rendered-html><p>File that contains the keycloak client secret.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.ldapConfigPath",
                    "option_description": "<rendered-html><p>Path to the Configuration-File for LDAP-Authentication, will be\nloaded as <code>ldap_config.py</code>. See the <a\nhref=\"https://netbox.readthedocs.io/en/stable/installation/6-ldap/#configuration\">documentation</a>\nfor possible options.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"\"",
                    "option_example": "''\n  import ldap\n  from django_auth_ldap.config import LDAPSearch, PosixGroupType\n  \n  AUTH_LDAP_SERVER_URI = \"ldaps://ldap.example.com/\"\n  \n  AUTH_LDAP_USER_SEARCH = LDAPSearch(\n      \"ou=accounts,ou=posix,dc=example,dc=com\",\n      ldap.SCOPE_SUBTREE,\n      \"(uid=%(user)s)\",\n  )\n  \n  AUTH_LDAP_GROUP_SEARCH = LDAPSearch(\n      \"ou=groups,ou=posix,dc=example,dc=com\",\n      ldap.SCOPE_SUBTREE,\n      \"(objectClass=posixGroup)\",\n  )\n  AUTH_LDAP_GROUP_TYPE = PosixGroupType()\n  \n  # Mirror LDAP group assignments.\n  AUTH_LDAP_MIRROR_GROUPS = True\n  \n  # For more granular permissions, we can map LDAP groups to Django groups.\n  AUTH_LDAP_FIND_GROUP_PERMS = True\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.listenAddress",
                    "option_description": "<rendered-html><p>Address the server will listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"[::1]\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.package",
                    "option_description": "<rendered-html><p>NetBox package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "if lib.versionAtLeast config.system.stateVersion \"24.05\"\nthen pkgs.netbox_3_7\nelse if lib.versionAtLeast config.system.stateVersion \"23.11\"\nthen pkgs.netbox_3_6\nelse if lib.versionAtLeast config.system.stateVersion \"23.05\"\nthen pkgs.netbox_3_5\nelse pkgs.netbox_3_3;\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.plugins",
                    "option_description": "<rendered-html><p>List of plugin packages to install.</p>\n</rendered-html>",
                    "option_type": "function that evaluates to a(n) list of package",
                    "option_default": "python3Packages: with python3Packages; [];\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHUqo",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.port",
                    "option_description": "<rendered-html><p>Port the server will listen on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8001",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.secretKeyFile",
                    "option_description": "<rendered-html><p>Path to a file containing the secret key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.settings",
                    "option_description": "<rendered-html><p>Configuration options to set in <code>configuration.py</code>. See\nthe <a\nhref=\"https://docs.netbox.dev/en/stable/configuration/\">documentation</a>\nfor more possible options.</p>\n</rendered-html>",
                    "option_type": "attribute set of (Python value)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/netbox.nix",
                    "option_name": "services.netbox.settings.ALLOWED_HOSTS",
                    "option_description": "<rendered-html><p>A list of valid fully-qualified domain names (FQDNs) and/or IP\naddresses that can be used to reach the NetBox service.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"*\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netclient.nix",
                    "option_name": "services.netclient.enable",
                    "option_description": "<rendered-html><p>Whether to enable Netclient Daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/netclient.nix",
                    "option_name": "services.netclient.package",
                    "option_description": "<rendered-html><p>The netclient package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.netclient",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.claimTokenFile",
                    "option_description": "<rendered-html><p>If set, automatically registers the agent using the given claim token\nfile.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.config",
                    "option_description": "<rendered-html><p>netdata.conf configuration as nix attributes. cannot be combined with\nconfigText.</p>\n</rendered-html>",
                    "option_type": "attribute set of (attribute set)",
                    "option_default": "{ }",
                    "option_example": "global = {\n  \"debug log\" = \"syslog\";\n  \"access log\" = \"syslog\";\n  \"error log\" = \"syslog\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.configDir",
                    "option_description": "<rendered-html><p>Complete netdata config directory except netdata.conf. The default\nconfiguration is merged with changes defined in this option. Each\ntop-level attribute denotes a path in the configuration directory as in\nenvironment.etc. Its value is the absolute path and must be readable by\nnetdata. Cannot be combined with configText.</p>\n</rendered-html>",
                    "option_type": "attribute set of path",
                    "option_default": "{ }",
                    "option_example": "\"health_alarm_notify.conf\" = pkgs.writeText \"health_alarm_notify.conf\" ''\n  sendmail=\"/path/to/sendmail\"\n'';\n\"health.d\" = \"/run/secrets/netdata/health.d\";\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.configText",
                    "option_description": "<rendered-html><p>Verbatim netdata.conf, cannot be combined with config.</p>\n</rendered-html>",
                    "option_type": "null or strings concatenated with \"\\n\"",
                    "option_default": "null",
                    "option_example": "''\n  [global]\n  debug log = syslog\n  access log = syslog\n  error log = syslog\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.deadlineBeforeStopSec",
                    "option_description": "<rendered-html><p>In order to detect when netdata is misbehaving, we run a concurrent\ntask pinging netdata (wait-for-netdata-up) in the systemd unit.</p>\n<p>If after a while, this task does not succeed, we stop the unit and\nmark it as failed.</p>\n<p>You can control this deadline in seconds with this option, it\u2019s\nuseful to bump it if you have (1) a lot of data (2) doing upgrades (3)\nhave low IOPS/throughput.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "120",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.enable",
                    "option_description": "<rendered-html><p>Whether to enable netdata.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.enableAnalyticsReporting",
                    "option_description": "<rendered-html><p>Enable reporting of anonymous usage statistics to Netdata Inc. via\neither Google Analytics (in versions prior to 1.29.4), or Netdata Inc.\u2019s\nself-hosted PostHog (in versions 1.29.4 and later). See: <a\nhref=\"https://learn.netdata.cloud/docs/agent/anonymous-statistics\">https://learn.netdata.cloud/docs/agent/anonymous-statistics</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.extraPluginPaths",
                    "option_description": "<rendered-html><p>Extra paths to add to the netdata global \u201cplugins directory\u201d option.\nUseful for when you want to include your own collection scripts.</p>\n<p>Details about writing a custom netdata plugin are available at: <a\nhref=\"https://docs.netdata.cloud/collectors/plugins.d/\">https://docs.netdata.cloud/collectors/plugins.d/</a></p>\n<p>Cannot be combined with configText.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "[ \"/path/to/plugins.d\" ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.group",
                    "option_description": "<rendered-html><p>Group under which netdata runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"netdata\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.package",
                    "option_description": "<rendered-html><p>The netdata package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.netdata",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.python.enable",
                    "option_description": "<rendered-html><p>Whether to enable python-based plugins</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.python.extraPackages",
                    "option_description": "<rendered-html><p>Extra python packages available at runtime to enable additional\npython plugins.</p>\n</rendered-html>",
                    "option_type": "function that evaluates to a(n) list of package",
                    "option_default": "ps: []",
                    "option_example": "ps: [\n  ps.psycopg2\n  ps.docker\n  ps.dnspython\n]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.python.recommendedPythonPackages",
                    "option_description": "<rendered-html><p>Whether to enable a set of recommended Python plugins by installing\nextra Python packages.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/netdata.nix",
                    "option_name": "services.netdata.user",
                    "option_description": "<rendered-html><p>User account under which netdata runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"netdata\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/networkaudiod.nix",
                    "option_name": "services.networkaudiod.enable",
                    "option_description": "<rendered-html><p>Whether to enable Networkaudiod (NAA).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/networkd-dispatcher.nix",
                    "option_name": "services.networkd-dispatcher.enable",
                    "option_description": "<rendered-html><p>Whether to enable Networkd-dispatcher service for systemd-networkd\nconnection status change. See [<a\nhref=\"https://gitlab.com/craftyguy/networkd-dispatcher](upstream\">https://gitlab.com/craftyguy/networkd-dispatcher](upstream</a>\ninstructions) for usage .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/networkd-dispatcher.nix",
                    "option_name": "services.networkd-dispatcher.rules",
                    "option_description": "<rendered-html><p>Declarative configuration of networkd-dispatcher rules. See [<a\nhref=\"https://gitlab.com/craftyguy/networkd-dispatcher](upstream\">https://gitlab.com/craftyguy/networkd-dispatcher](upstream</a>\ninstructions) for an introduction and example scripts.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{ \"restart-tor\" = {\n    onState = [\"routable\" \"off\"];\n    script = ''\n      #!${pkgs.runtimeShell}\n      if [[ $IFACE == \"wlan0\" && $AdministrativeState == \"configured\" ]]; then\n        echo \"Restarting Tor ...\"\n        systemctl restart tor\n      fi\n      exit 0\n    '';\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/networkd-dispatcher.nix",
                    "option_name": "services.networkd-dispatcher.rules.<name>.onState",
                    "option_description": "<rendered-html><p>List of names of the systemd-networkd operational states which should\ntrigger the script. See <a\nhref=\"https://www.freedesktop.org/software/systemd/man/networkctl.html\">https://www.freedesktop.org/software/systemd/man/networkctl.html</a>\nfor a description of the specific state type.</p>\n</rendered-html>",
                    "option_type": "list of (one of \"routable\", \"dormant\", \"no-carrier\", \"off\", \"carrier\", \"degraded\", \"configuring\", \"configured\")",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/networkd-dispatcher.nix",
                    "option_name": "services.networkd-dispatcher.rules.<name>.script",
                    "option_description": "<rendered-html><p>Shell commands executed on specified operational states.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/websockify.nix",
                    "option_name": "services.networking.websockify.enable",
                    "option_description": "<rendered-html><p>Whether to enable websockify to forward websocket connections to TCP\nconnections.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/websockify.nix",
                    "option_name": "services.networking.websockify.portMap",
                    "option_description": "<rendered-html><p>Ports to map by default.</p>\n</rendered-html>",
                    "option_type": "attribute set of signed integer",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/websockify.nix",
                    "option_name": "services.networking.websockify.sslCert",
                    "option_description": "<rendered-html><p>Path to the SSL certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/websockify.nix",
                    "option_name": "services.networking.websockify.sslKey",
                    "option_description": "<rendered-html><p>Path to the SSL key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "config.services.networking.websockify.sslCert",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.appstoreEnable",
                    "option_description": "<rendered-html><p>Allow the installation and updating of apps from the Nextcloud\nappstore. Enabled by default unless there are packages in <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.extraApps&amp;query=services.nextcloud.extraApps\">services.nextcloud.extraApps</a>.\nSet this to true to force enable the store even if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.extraApps&amp;query=services.nextcloud.extraApps\">services.nextcloud.extraApps</a>\nis used. Set this to false to disable the installation of apps from the\nglobal appstore. App management is always enabled regardless of this\nsetting.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.autoUpdateApps.enable",
                    "option_description": "<rendered-html><p>Run a regular auto-update of all apps installed from the Nextcloud\napp store.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.autoUpdateApps.startAt",
                    "option_description": "<rendered-html><p>When to run the update. See\n<code>systemd.services.&lt;name&gt;.startAt</code>.</p>\n</rendered-html>",
                    "option_type": "string or list of string",
                    "option_default": "\"05:00:00\"",
                    "option_example": "\"Sun 14:00:00\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.caching.apcu",
                    "option_description": "<rendered-html><p>Whether to load the APCu module into PHP.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.caching.memcached",
                    "option_description": "<rendered-html><p>Whether to load the Memcached module into PHP. You still need to\nenable Memcached in your config.php. See <a\nhref=\"https://docs.nextcloud.com/server/14/admin_manual/configuration_server/caching_configuration.html\">https://docs.nextcloud.com/server/14/admin_manual/configuration_server/caching_configuration.html</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.caching.redis",
                    "option_description": "<rendered-html><p>Whether to load the Redis module into PHP. You still need to enable\nRedis in your config.php. See <a\nhref=\"https://docs.nextcloud.com/server/14/admin_manual/configuration_server/caching_configuration.html\">https://docs.nextcloud.com/server/14/admin_manual/configuration_server/caching_configuration.html</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.cli.memoryLimit",
                    "option_description": "<rendered-html><p>The <code>memory_limit</code> of PHP is equal to <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.maxUploadSize&amp;query=services.nextcloud.maxUploadSize\">services.nextcloud.maxUploadSize</a>.\nThe value can be customized for <code>nextcloud-cron.service</code>\nusing this option.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"1G\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.adminpassFile",
                    "option_description": "<rendered-html><p>The full path to a file that contains the admin\u2019s password. Must be\nreadable by user <code>nextcloud</code>. The password is set only in the\ninitial setup of Nextcloud by the systemd service\n<code>nextcloud-setup.service</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.adminuser",
                    "option_description": "<rendered-html><p>Username for the admin account. The username is only set during the\ninitial setup of Nextcloud! Since the username also acts as unique ID\ninternally, it cannot be changed later!</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"root\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.dbhost",
                    "option_description": "<rendered-html><p>Database host (+port) or socket path. If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.database.createLocally&amp;query=services.nextcloud.database.createLocally\">services.nextcloud.database.createLocally</a>\nis true and <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.config.dbtype&amp;query=services.nextcloud.config.dbtype\">services.nextcloud.config.dbtype</a>\nis either <code>pgsql</code> or <code>mysql</code>, defaults to the\ncorrect Unix socket instead.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"localhost\"",
                    "option_example": "\"localhost:5000\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.dbname",
                    "option_description": "<rendered-html><p>Database name.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"nextcloud\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.dbpassFile",
                    "option_description": "<rendered-html><p>The full path to a file that contains the database password.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.dbtableprefix",
                    "option_description": "<rendered-html><p>Table prefix in Nextcloud\u2019s database.</p>\n<p><strong>Note:</strong> since Nextcloud 20 it\u2019s not an option anymore\nto create a database schema with a custom table prefix. This option only\nexists for backwards compatibility with installations that were\noriginally provisioned with Nextcloud &lt;20.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.dbtype",
                    "option_description": "<rendered-html><p>Database type.</p>\n</rendered-html>",
                    "option_type": "one of \"sqlite\", \"pgsql\", \"mysql\"",
                    "option_default": "\"sqlite\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.dbuser",
                    "option_description": "<rendered-html><p>Database user.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"nextcloud\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.autocreate",
                    "option_description": "<rendered-html><p>Create the objectstore if it does not exist.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.bucket",
                    "option_description": "<rendered-html><p>The name of the S3 bucket.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"nextcloud\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.enable",
                    "option_description": "<rendered-html><p>Whether to enable S3 object storage as primary storage.</p>\n<p>This mounts a bucket on an Amazon S3 object storage or compatible\nimplementation into the virtual filesystem.</p>\n<p>Further details about this feature can be found in the <a\nhref=\"https://docs.nextcloud.com/server/22/admin_manual/configuration_files/primary_storage.html\">upstream\ndocumentation</a> .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.hostname",
                    "option_description": "<rendered-html><p>Required for some non-Amazon implementations.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.key",
                    "option_description": "<rendered-html><p>The access key for the S3 bucket.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"EJ39ITYZEUH5BGWDRUFY\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.port",
                    "option_description": "<rendered-html><p>Required for some non-Amazon implementations.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.region",
                    "option_description": "<rendered-html><p>Required for some non-Amazon implementations.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"REGION\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.secretFile",
                    "option_description": "<rendered-html><p>The full path to a file that contains the access secret. Must be\nreadable by user <code>nextcloud</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"/var/nextcloud-objectstore-s3-secret\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.sseCKeyFile",
                    "option_description": "<rendered-html><p>If provided this is the full path to a file that contains the key to\nenable <a\nhref=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html\">server-side\nencryption with customer-provided keys</a> (SSE-C).</p>\n<p>The file must contain a random 32-byte key encoded as a base64\nstring, e.g. generated with the command</p>\n<pre><code>openssl rand 32 | base64</code></pre>\n<p>Must be readable by user <code>nextcloud</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/nextcloud-objectstore-s3-sse-c-key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.usePathStyle",
                    "option_description": "<rendered-html><p>Required for some non-Amazon S3 implementations.</p>\n<p>Ordinarily, requests will be made with\n<code>http://bucket.hostname.domain/</code>, but with path style enabled\nrequests are made with <code>http://hostname.domain/bucket</code>\ninstead.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.config.objectstore.s3.useSsl",
                    "option_description": "<rendered-html><p>Use SSL for objectstore access.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.configureRedis",
                    "option_description": "<rendered-html><p>Whether to configure Nextcloud to use the recommended Redis settings\nfor small instances.</p>\n<div class=\"note\">\n<p>The <code>notify_push</code> app requires Redis to be configured. If\nthis option is turned off, this must be configured manually.</p>\n</div>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.nextcloud.notify_push.enable",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.database.createLocally",
                    "option_description": "<rendered-html><p>Whether to create the database and database user locally.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.datadir",
                    "option_description": "<rendered-html><p>Nextcloud\u2019s data storage path. Will be <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.home&amp;query=services.nextcloud.home\">services.nextcloud.home</a>\nby default. This folder will be populated with a config.php file and a\ndata folder which contains the state of the instance (excluding the\ndatabase).\u201c;</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "config.services.nextcloud.home",
                    "option_example": "\"/mnt/nextcloud-file\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.enable",
                    "option_description": "<rendered-html><p>Whether to enable nextcloud.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.enableImagemagick",
                    "option_description": "<rendered-html><p>Whether to enable the ImageMagick module for PHP. This is used by the\ntheming app and for generating previews of certain images (e.g. SVG and\nHEIF). You may want to disable it for increased security. In that case,\npreviews will still be available for some images (e.g. JPEG and PNG).\nSee <a\nhref=\"https://github.com/nextcloud/server/issues/13099\">https://github.com/nextcloud/server/issues/13099</a>\n.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.extraApps",
                    "option_description": "<rendered-html><p>Extra apps to install. Should be an attrSet of appid to packages\ngenerated by fetchNextcloudApp. The appid must be identical to the \u201cid\u201d\nvalue in the apps appinfo/info.xml. Using this will disable the appstore\nto prevent Nextcloud from updating these apps (see <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.appstoreEnable&amp;query=services.nextcloud.appstoreEnable\">services.nextcloud.appstoreEnable</a>).</p>\n</rendered-html>",
                    "option_type": "attribute set of package",
                    "option_default": "{ }",
                    "option_example": "{\n  inherit (pkgs.nextcloud25Packages.apps) mail calendar contact;\n  phonetrack = pkgs.fetchNextcloudApp {\n    name = \"phonetrack\";\n    sha256 = \"0qf366vbahyl27p9mshfma1as4nvql6w75zy2zk5xwwbp343vsbc\";\n    url = \"https://gitlab.com/eneiluj/phonetrack-oc/-/wikis/uploads/931aaaf8dca24bf31a7e169a83c17235/phonetrack-0.6.9.tar.gz\";\n    version = \"0.6.9\";\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.extraAppsEnable",
                    "option_description": "<rendered-html><p>Automatically enable the apps in <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.extraApps&amp;query=services.nextcloud.extraApps\">services.nextcloud.extraApps</a>\nevery time Nextcloud starts. If set to false, apps need to be enabled in\nthe Nextcloud web user interface or with\n<code>nextcloud-occ app:enable</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.fastcgiTimeout",
                    "option_description": "<rendered-html><p>FastCGI timeout for database connection in seconds.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "120",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.home",
                    "option_description": "<rendered-html><p>Storage path of nextcloud.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/nextcloud\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.hostName",
                    "option_description": "<rendered-html><p>FQDN for the nextcloud instance.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.https",
                    "option_description": "<rendered-html><p>Use HTTPS for generated links.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.maxUploadSize",
                    "option_description": "<rendered-html><p>The upload limit for files. This changes the relevant options in\nphp.ini and nginx if enabled.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"512M\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.nginx.hstsMaxAge",
                    "option_description": "<rendered-html><p>Value for the <code>max-age</code> directive of the HTTP\n<code>Strict-Transport-Security</code> header.</p>\n<p>See section 6.1.1 of IETF RFC 6797 for detailed information on this\ndirective and header.</p>\n</rendered-html>",
                    "option_type": "positive integer, meaning >0",
                    "option_default": "15552000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.nginx.recommendedHttpHeaders",
                    "option_description": "<rendered-html><p>Enable additional recommended HTTP response headers</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.bendDomainToLocalhost",
                    "option_description": "<rendered-html><p>Whether to add an entry to <code>/etc/hosts</code> for the configured\nnextcloud domain to point to <code>localhost</code> and add\n<code>localhost </code>to nextcloud\u2019s <code>trusted_proxies</code>\nconfig option.</p>\n<p>This is useful when nextcloud\u2019s domain is not a static IP address and\nwhen the reverse proxy cannot be bypassed because the backend connection\nis done via unix socket.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.dbhost",
                    "option_description": "<rendered-html><p>Database host (+port) or socket path. If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.database.createLocally&amp;query=services.nextcloud.database.createLocally\">services.nextcloud.database.createLocally</a>\nis true and <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.config.dbtype&amp;query=services.nextcloud.config.dbtype\">services.nextcloud.config.dbtype</a>\nis either <code>pgsql</code> or <code>mysql</code>, defaults to the\ncorrect Unix socket instead.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"config.services.nextcloud.config.dbhost\"",
                    "option_example": "\"localhost:5000\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.dbname",
                    "option_description": "<rendered-html><p>Database name.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"config.services.nextcloud.config.dbname\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.dbpassFile",
                    "option_description": "<rendered-html><p>The full path to a file that contains the database password.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"config.services.nextcloud.config.dbpassFile\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHUqp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.dbtableprefix",
                    "option_description": "<rendered-html><p>Table prefix in Nextcloud\u2019s database.</p>\n<p><strong>Note:</strong> since Nextcloud 20 it\u2019s not an option anymore\nto create a database schema with a custom table prefix. This option only\nexists for backwards compatibility with installations that were\noriginally provisioned with Nextcloud &lt;20.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"config.services.nextcloud.config.dbtableprefix\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.dbtype",
                    "option_description": "<rendered-html><p>Database type.</p>\n</rendered-html>",
                    "option_type": "one of \"sqlite\", \"pgsql\", \"mysql\"",
                    "option_default": "\"config.services.nextcloud.config.dbtype\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.dbuser",
                    "option_description": "<rendered-html><p>Database user.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"config.services.nextcloud.config.dbuser\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.enable",
                    "option_description": "<rendered-html><p>Whether to enable Notify push.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.logLevel",
                    "option_description": "<rendered-html><p>Log level</p>\n</rendered-html>",
                    "option_type": "one of \"error\", \"warn\", \"info\", \"debug\", \"trace\"",
                    "option_default": "\"error\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.package",
                    "option_description": "<rendered-html><p>Which package to use for notify_push</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "<rendered-html><p>pkgs.nextcloud-notify_push</p>\n</rendered-html>",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud-notify_push.nix",
                    "option_name": "services.nextcloud.notify_push.socketPath",
                    "option_description": "<rendered-html><p>Socket path to use for notify_push</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/run/nextcloud-notify_push/sock\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.occ",
                    "option_description": "<rendered-html><p>The nextcloud-occ program preconfigured to target this Nextcloud\ninstance.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "<rendered-html><p>generated script</p>\n</rendered-html>",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.package",
                    "option_description": "<rendered-html><p>Which package to use for the Nextcloud instance.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.phpExtraExtensions",
                    "option_description": "<rendered-html><p>Additional PHP extensions to use for Nextcloud. By default, only\nextensions necessary for a vanilla Nextcloud installation are enabled,\nbut you may choose from the list of available extensions and add further\nones. This is sometimes necessary to be able to install a certain\nNextcloud app that has additional requirements.</p>\n</rendered-html>",
                    "option_type": "function that evaluates to a(n) list of package",
                    "option_default": "all: []",
                    "option_example": "all: [ all.pdlib all.bz2 ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.phpOptions",
                    "option_description": "<rendered-html><p>Options for PHP\u2019s php.ini file for nextcloud.</p>\n<p>Please note that this option is <em>additive</em> on purpose while\nthe attribute values inside the default are option defaults: that means\nthat</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode nix\"><code class=\"sourceCode nix\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"va\">services</span>.<span class=\"va\">nextcloud</span>.<span class=\"va\">phpOptions</span>.<span class=\"st\">&quot;</span>opcache.interned_strings_buffer<span class=\"st\">&quot;</span> <span class=\"op\">=</span> <span class=\"st\">&quot;23&quot;</span><span class=\"op\">;</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<p>will override the <code>php.ini</code> option\n<code>opcache.interned_strings_buffer</code> without discarding the rest\nof the defaults.</p>\n<p>Overriding all of <code>phpOptions</code> (including\n<code>upload_max_filesize</code>, <code>post_max_size</code> and\n<code>memory_limit</code> which all point to <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.maxUploadSize&amp;query=services.nextcloud.maxUploadSize\">services.nextcloud.maxUploadSize</a>\nby default) can be done like this:</p>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode nix\"><code class=\"sourceCode nix\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">{</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"va\">services</span>.<span class=\"va\">nextcloud</span>.<span class=\"va\">phpOptions</span> <span class=\"op\">=</span> lib.mkForce <span class=\"op\">{</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">/* ... */</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">};</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer)",
                    "option_default": "{\n  catch_workers_output = \"yes\";\n  display_errors = \"stderr\";\n  error_reporting = \"E_ALL & ~E_DEPRECATED & ~E_STRICT\";\n  expose_php = \"Off\";\n  \"opcache.fast_shutdown\" = \"1\";\n  \"opcache.interned_strings_buffer\" = \"8\";\n  \"opcache.max_accelerated_files\" = \"10000\";\n  \"opcache.memory_consumption\" = \"128\";\n  \"opcache.revalidate_freq\" = \"1\";\n  \"openssl.cafile\" = \"/etc/ssl/certs/ca-certificates.crt\";\n  output_buffering = \"0\";\n  short_open_tag = \"Off\";\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.phpPackage",
                    "option_description": "<rendered-html><p>The php package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.php",
                    "option_example": "php82",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.poolConfig",
                    "option_description": "<rendered-html><p>Options for Nextcloud\u2019s PHP pool. See the documentation on\n<code>php-fpm.conf</code> for details on configuration directives.</p>\n</rendered-html>",
                    "option_type": "null or strings concatenated with \"\\n\"",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.poolSettings",
                    "option_description": "<rendered-html><p>Options for nextcloud\u2019s PHP pool. See the documentation on\n<code>php-fpm.conf</code> for details on configuration directives.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer or boolean)",
                    "option_default": "{\n  pm = \"dynamic\";\n  \"pm.max_children\" = \"32\";\n  \"pm.max_requests\" = \"500\";\n  \"pm.max_spare_servers\" = \"4\";\n  \"pm.min_spare_servers\" = \"2\";\n  \"pm.start_servers\" = \"2\";\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.secretFile",
                    "option_description": "<rendered-html><p>Secret options which will be appended to Nextcloud\u2019s config.php file\n(written as JSON, in the same form as the <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nextcloud.settings&amp;query=services.nextcloud.settings\">services.nextcloud.settings</a>\noption), for example <code>{\"redis\":{\"password\":\"secret\"}}</code>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.settings",
                    "option_description": "<rendered-html><p>Extra options which should be appended to Nextcloud\u2019s config.php\nfile.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": "{\n       redis = {\n         host = \"/run/redis/redis.sock\";\n         port = 0;\n         dbindex = 0;\n         password = \"secret\";\n         timeout = 1.5;\n       };\n     } ",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.settings.default_phone_region",
                    "option_description": "<rendered-html><p>An <a href=\"https://www.iso.org/iso-3166-country-codes.html\">ISO\n3166-1</a> country code which replaces automatic phone-number detection\nwithout a country code.</p>\n<p>As an example, with <code>DE</code> set as the default phone region,\nthe <code>+49</code> prefix can be omitted for phone numbers.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"DE\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.settings.log_type",
                    "option_description": "<rendered-html><p>Logging backend to use. systemd requires the php-systemd package to\nbe added to services.nextcloud.phpExtraExtensions. See the <a\nhref=\"https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/logging_configuration.html\">nextcloud\ndocumentation</a> for details.</p>\n</rendered-html>",
                    "option_type": "one of \"errorlog\", \"file\", \"syslog\", \"systemd\"",
                    "option_default": "\"syslog\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.settings.loglevel",
                    "option_description": "<rendered-html><p>Log level value between 0 (DEBUG) and 4 (FATAL).</p>\n<ul>\n<li><p>0 (debug): Log all activity.</p></li>\n<li><p>1 (info): Log activity such as user logins and file activities,\nplus warnings, errors, and fatal errors.</p></li>\n<li><p>2 (warn): Log successful operations, as well as warnings of\npotential problems, errors and fatal errors.</p></li>\n<li><p>3 (error): Log failed operations and fatal errors.</p></li>\n<li><p>4 (fatal): Log only fatal errors that cause the server to\nstop.</p></li>\n</ul>\n</rendered-html>",
                    "option_type": "integer between 0 and 4 (both inclusive)",
                    "option_default": "2",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.settings.overwriteprotocol",
                    "option_description": "<rendered-html><p>Force Nextcloud to always use HTTP or HTTPS i.e. for link generation.\nNextcloud uses the currently used protocol by default, but when behind a\nreverse-proxy, it may use <code>http</code> for everything although\nNextcloud may be served via HTTPS.</p>\n</rendered-html>",
                    "option_type": "one of \"\", \"http\", \"https\"",
                    "option_default": "\"\"",
                    "option_example": "\"https\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.settings.\"profile.enabled\"",
                    "option_description": "<rendered-html><p>Makes user-profiles globally available under\n<code>nextcloud.tld/u/user.name</code>. Even though it\u2019s enabled by\ndefault in Nextcloud, it must be explicitly enabled here because it has\nthe side-effect that personal information is even accessible to\nunauthenticated users by default. By default, the following properties\nare set to \u201cShow to everyone\u201d if this flag is enabled:</p>\n<ul>\n<li>About</li>\n<li>Full name</li>\n<li>Headline</li>\n<li>Organisation</li>\n<li>Profile picture</li>\n<li>Role</li>\n<li>Twitter</li>\n<li>Website Only has an effect in Nextcloud 23 and later.</li>\n</ul>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.settings.skeletondirectory",
                    "option_description": "<rendered-html><p>The directory where the skeleton files are located. These files will\nbe copied to the data directory of new users. Leave empty to not copy\nany skeleton files.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.settings.trusted_domains",
                    "option_description": "<rendered-html><p>Trusted domains, from which the nextcloud installation will be\naccessible. You don\u2019t need to add\n<code>services.nextcloud.hostname</code> here.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.settings.trusted_proxies",
                    "option_description": "<rendered-html><p>Trusted proxies, to provide if the nextcloud installation is being\nproxied to secure against e.g. spoofing.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextcloud.nix",
                    "option_name": "services.nextcloud.webfinger",
                    "option_description": "<rendered-html><p>Enable this option if you plan on using the webfinger plugin. The\nappropriate nginx rewrite rules will be added to your configuration.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nextdns.nix",
                    "option_name": "services.nextdns.arguments",
                    "option_description": "<rendered-html><p>Additional arguments to be passed to nextdns run.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-config\"\n  \"10.0.3.0/24=abcdef\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nextdns.nix",
                    "option_name": "services.nextdns.enable",
                    "option_description": "<rendered-html><p>Whether to enable the NextDNS DNS/53 to DoH Proxy service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextjs-ollama-llm-ui.nix",
                    "option_name": "services.nextjs-ollama-llm-ui.enable",
                    "option_description": "<rendered-html><p>Whether to enable Simple Ollama web UI service; an easy to use web\nfrontend for a Ollama backend service. Run state-of-the-art AI large\nlanguage models (LLM) similar to ChatGPT locally with privacy on your\npersonal computer. This service is stateless and doesn\u2019t store any data\non the server; all data is kept locally in your web browser. See <a\nhref=\"https://github.com/jakobhoeg/nextjs-ollama-llm-ui\">https://github.com/jakobhoeg/nextjs-ollama-llm-ui</a>.</p>\n<p>Required: You need the Ollama backend service running by having\n\u201cservices.nextjs-ollama-llm-ui.ollamaUrl\u201d point to the correct url. You\ncan host such a backend service with NixOS through \u201cservices.ollama\u201d.\n.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextjs-ollama-llm-ui.nix",
                    "option_name": "services.nextjs-ollama-llm-ui.hostname",
                    "option_description": "<rendered-html><p>The hostname under which the Ollama UI interface should be\naccessible. By default it uses localhost/127.0.0.1 to be accessible only\nfrom the local machine. Change to \u201c0.0.0.0\u201d to make it directly\naccessible from the local network.</p>\n<p>Note: You should keep it at 127.0.0.1 and only serve to the local\nnetwork or internet from a (home) server behind a reverse-proxy and\nsecured encryption. See <a\nhref=\"https://wiki.nixos.org/wiki/Nginx\">https://wiki.nixos.org/wiki/Nginx</a>\nfor instructions on how to set up a reverse-proxy.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": "\"ui.example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextjs-ollama-llm-ui.nix",
                    "option_name": "services.nextjs-ollama-llm-ui.ollamaUrl",
                    "option_description": "<rendered-html><p>The address (including host and port) under which we can access the\nOllama backend server. !Note that if the the UI service is running under\na domain \u201c<a href=\"https://ui.example.org\">https://ui.example.org</a>\u201d,\nthe Ollama backend service must allow \u201cCORS\u201d requests from this domain,\ne.g. by adding \u201cservices.ollama.environment.OLLAMA_ORIGINS = [ \u2026 \u201c<a\nhref=\"https://ui.example.org\">https://ui.example.org</a>\u201d ];\u201d!</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1:11434\"",
                    "option_example": "\"https://ollama.example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextjs-ollama-llm-ui.nix",
                    "option_name": "services.nextjs-ollama-llm-ui.package",
                    "option_description": "<rendered-html><p>The nextjs-ollama-llm-ui package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nextjs-ollama-llm-ui",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nextjs-ollama-llm-ui.nix",
                    "option_name": "services.nextjs-ollama-llm-ui.port",
                    "option_description": "<rendered-html><p>The port under which the Ollama UI interface should be\naccessible.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3000",
                    "option_example": "3000",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nexus.nix",
                    "option_name": "services.nexus.enable",
                    "option_description": "<rendered-html><p>Whether to enable Sonatype Nexus3 OSS service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nexus.nix",
                    "option_name": "services.nexus.group",
                    "option_description": "<rendered-html><p>Group which runs Nexus3.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nexus\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nexus.nix",
                    "option_name": "services.nexus.home",
                    "option_description": "<rendered-html><p>Home directory of the Nexus3 instance.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/sonatype-work\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nexus.nix",
                    "option_name": "services.nexus.jdkPackage",
                    "option_description": "<rendered-html><p>The openjdk8 package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.openjdk8",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nexus.nix",
                    "option_name": "services.nexus.jvmOpts",
                    "option_description": "<rendered-html><p>Options for the JVM written to <code>nexus.jvmopts</code>. Please\nrefer to the docs (<a\nhref=\"https://help.sonatype.com/repomanager3/installation/configuring-the-runtime-environment\">https://help.sonatype.com/repomanager3/installation/configuring-the-runtime-environment</a>)\nfor further information.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "''\n  -Xms1200M\n  -Xmx1200M\n  -XX:MaxDirectMemorySize=2G\n  -XX:+UnlockDiagnosticVMOptions\n  -XX:+UnsyncloadClass\n  -XX:+LogVMOutput\n  -XX:LogFile=${home}/nexus3/log/jvm.log\n  -XX:-OmitStackTraceInFastThrow\n  -Djava.net.preferIPv4Stack=true\n  -Dkaraf.home=${package}\n  -Dkaraf.base=${package}\n  -Dkaraf.etc=${package}/etc/karaf\n  -Djava.util.logging.config.file=${package}/etc/karaf/java.util.logging.properties\n  -Dkaraf.data=${home}/nexus3\n  -Djava.io.tmpdir=${home}/nexus3/tmp\n  -Dkaraf.startLocalConsole=false\n  -Djava.endorsed.dirs=${package}/lib/endorsed\n''\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nexus.nix",
                    "option_name": "services.nexus.listenAddress",
                    "option_description": "<rendered-html><p>Address to listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nexus.nix",
                    "option_name": "services.nexus.listenPort",
                    "option_description": "<rendered-html><p>Port to listen on.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "8081",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nexus.nix",
                    "option_name": "services.nexus.package",
                    "option_description": "<rendered-html><p>The nexus package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nexus",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nexus.nix",
                    "option_name": "services.nexus.user",
                    "option_description": "<rendered-html><p>User which runs Nexus3.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nexus\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.debug",
                    "option_description": "<rendered-html><p>Whether to enable verbose log.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.disableCommandExecute",
                    "option_description": "<rendered-html><p>Disable executing the command from dashboard.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.enable",
                    "option_description": "<rendered-html><p>Whether to enable Agent of Nezha Monitoring.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.gpu",
                    "option_description": "<rendered-html><p>Enable GPU monitoring.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.package",
                    "option_description": "<rendered-html><p>The nezha-agent package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nezha-agent",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.passwordFile",
                    "option_description": "<rendered-html><p>Path to the file contained the password from dashboard.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.reportDelay",
                    "option_description": "<rendered-html><p>The interval between system status reportings. The value must be an\ninteger from 1 to 4</p>\n</rendered-html>",
                    "option_type": "one of 1, 2, 3, 4",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.server",
                    "option_description": "<rendered-html><p>Address to the dashboard</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.skipConnection",
                    "option_description": "<rendered-html><p>Do not monitor the number of connections.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.skipProcess",
                    "option_description": "<rendered-html><p>Do not monitor the number of processes.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/nezha-agent.nix",
                    "option_name": "services.nezha-agent.tls",
                    "option_description": "<rendered-html><p>Enable SSL/TLS encryption.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/filesystems/nfs.nix",
                    "option_name": "services.nfs.extraConfig",
                    "option_description": "<rendered-html><p>Extra nfs-utils configuration.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/filesystems/nfs.nix",
                    "option_name": "services.nfs.idmapd.settings",
                    "option_description": "<rendered-html><p>libnfsidmap configuration. Refer to <a\nhref=\"https://linux.die.net/man/5/idmapd.conf\">https://linux.die.net/man/5/idmapd.conf</a>\nfor details.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": "{ }",
                    "option_example": "{\n  Translation = {\n    GSS-Methods = \"static,nsswitch\";\n  };\n  Static = {\n    \"root/hostname.domain.com@REALM.COM\" = \"root\";\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/nfsd.nix",
                    "option_name": "services.nfs.server.createMountPoints",
                    "option_description": "<rendered-html><p>Whether to create the mount points in the exports file at startup\ntime.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/nfsd.nix",
                    "option_name": "services.nfs.server.enable",
                    "option_description": "<rendered-html><p>Whether to enable the kernel\u2019s NFS server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/nfsd.nix",
                    "option_name": "services.nfs.server.exports",
                    "option_description": "<rendered-html><p>Contents of the /etc/exports file. See <code class=\"interpreted-text\"\nrole=\"manpage\">exports(5)</code> for the format.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/nfsd.nix",
                    "option_name": "services.nfs.server.extraNfsdConfig",
                    "option_description": "<rendered-html><p>Extra configuration options for the [nfsd] section of\n/etc/nfs.conf.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/nfsd.nix",
                    "option_name": "services.nfs.server.hostName",
                    "option_description": "<rendered-html><p>Hostname or address on which NFS requests will be accepted. Default\nis all. See the <code class=\"interpreted-text\" role=\"option\">-H</code>\noption in <code class=\"interpreted-text\"\nrole=\"manpage\">nfsd(8)</code>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/nfsd.nix",
                    "option_name": "services.nfs.server.lockdPort",
                    "option_description": "<rendered-html><p>Use a fixed port for the NFS lock manager kernel module\n(<code>lockd/nlockmgr</code>). This is useful if the NFS server is\nbehind a firewall.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "4001",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/nfsd.nix",
                    "option_name": "services.nfs.server.mountdPort",
                    "option_description": "<rendered-html><p>Use fixed port for rpc.mountd, useful if server is behind\nfirewall.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "4002",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/nfsd.nix",
                    "option_name": "services.nfs.server.nproc",
                    "option_description": "<rendered-html><p>Number of NFS server threads. Defaults to the recommended value of\n8.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "8",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/nfsd.nix",
                    "option_name": "services.nfs.server.statdPort",
                    "option_description": "<rendered-html><p>Use a fixed port for <code class=\"interpreted-text\"\nrole=\"command\">rpc.statd</code>. This is useful if the NFS server is\nbehind a firewall.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "4000",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/filesystems/nfs.nix",
                    "option_name": "services.nfs.settings",
                    "option_description": "<rendered-html><p>General configuration for NFS daemons and tools. See nfs.conf(5) and\nrelated man pages for details.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": "{ }",
                    "option_example": "{\n  mountd.manage-gids = true;\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backend-address-family",
                    "option_description": "<rendered-html><p>Specify address family of backend connections. If \u201cauto\u201d is given,\nboth IPv4 and IPv6 are considered. If \u201cIPv4\u201d is given, only IPv4 address\nis considered. If \u201cIPv6\u201d is given, only IPv6 address is considered.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--backend-address-family\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--backend-address-family</a></p>\n</rendered-html>",
                    "option_type": "one of \"auto\", \"IPv4\", \"IPv6\"",
                    "option_default": "\"auto\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends",
                    "option_description": "<rendered-html><p>A list of backend specifications.</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": null,
                    "option_example": "[\n  {\n    params = {\n      proto = \"http/1.1\";\n      redirect-if-not-tls = true;\n    };\n    patterns = [\n      \"/\"\n    ];\n    server = {\n      host = \"172.16.0.22\";\n      port = 8443;\n    };\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.params",
                    "option_description": "<rendered-html><p>Parameters to configure a backend.</p>\n</rendered-html>",
                    "option_type": "null or (submodule)",
                    "option_default": "null",
                    "option_example": "{\n  proto = \"h2\";\n  tls = true;\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.params.affinity",
                    "option_description": "<rendered-html><p>If \u201cip\u201d is given, client IP based session affinity is enabled. If\n\u201cnone\u201d is given, session affinity is disabled.</p>\n<p>Session affinity is enabled (by nghttpx) per-backend pattern. If at\nleast one backend has a non-\u201cnone\u201d affinity, then session affinity is\nenabled for all backend servers sharing the same pattern.</p>\n<p>It is advised to set affinity on all backends explicitly if session\naffinity is desired. The session affinity may break if one of the\nbackend gets unreachable, or backend settings are reloaded or replaced\nby API.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "one of \"ip\", \"none\"",
                    "option_default": "\"none\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.params.dns",
                    "option_description": "<rendered-html><p>Name resolution of a backends host name is done at start up, or\nconfiguration reload. If \u201cdns\u201d is true, name resolution takes place\ndynamically.</p>\n<p>This is useful if a backends address changes frequently. If \u201cdns\u201d is\ntrue, name resolution of a backend\u2019s host name at start up, or\nconfiguration reload is skipped.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.params.fall",
                    "option_description": "<rendered-html><p>If nghttpx cannot connect to the backend N times in a row, the\nbackend is assumed to be offline and is excluded from load balancing. If\nN is 0 the backend is never excluded from load balancing.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.params.proto",
                    "option_description": "<rendered-html><p>This option configures the protocol the backend server expects to\nuse.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "one of \"h2\", \"http/1.1\"",
                    "option_default": "\"http/1.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.params.redirect-if-not-tls",
                    "option_description": "<rendered-html><p>If true, a backend match requires the frontend connection be TLS\nencrypted. If it is not, nghttpx responds to the request with a 308\nstatus code and https URI the client should use instead in the Location\nheader.</p>\n<p>The port number in the redirect URI is 443 by default and can be\nchanged using \u2018services.nghttpx.redirect-https-port\u2019 option.</p>\n<p>If at least one backend has \u201credirect-if-not-tls\u201d set to true, this\nfeature is enabled for all backend servers with the same pattern. It is\nadvised to set \u201credirect-if-no-tls\u201d parameter to all backends explicitly\nif this feature is desired.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.params.rise",
                    "option_description": "<rendered-html><p>If the backend is excluded from load balancing, nghttpx will\nperiodically attempt to make a connection to the backend. If the\nconnection is successful N times in a row the backend is re-included in\nload balancing. If N is 0 a backend is never reconsidered for load\nbalancing once it falls.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.params.sni",
                    "option_description": "<rendered-html><p>Override the TLS SNI field value. This value (in nghttpx) defaults to\nthe host value of the backend configuration.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.params.tls",
                    "option_description": "<rendered-html><p>This option determines whether nghttpx will negotiate its connection\nwith a backend server using TLS or not. The burden is on the backend\nserver to provide the TLS certificate!</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.patterns",
                    "option_description": "<rendered-html><p>List of nghttpx backend patterns.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b</a>\nfor more information on the pattern syntax and nghttpxs behavior.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"*.host.net/v1/\"\n  \"host.org/v2/mypath\"\n  \"/somepath\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backends.*.server",
                    "option_description": "<rendered-html><p>Backend server location specified as either a host:port pair or a\nunix domain docket.</p>\n</rendered-html>",
                    "option_type": "(submodule) or path",
                    "option_default": "{\n  host = \"127.0.0.1\";\n  port = 80;\n}",
                    "option_example": "{\n  host = \"127.0.0.1\";\n  port = 8888;\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.backlog",
                    "option_description": "<rendered-html><p>Listen backlog size.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--backlog\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--backlog</a></p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "65536",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.enable",
                    "option_description": "<rendered-html><p>Whether to enable nghttpx.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration options to be appended to the generated\nconfiguration file.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.frontends",
                    "option_description": "<rendered-html><p>A list of frontend listener specifications.</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": null,
                    "option_example": "[\n  {\n    params = {\n      tls = \"no-tls\";\n    };\n    server = {\n      host = \"*\";\n      port = 80;\n    };\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.frontends.*.params",
                    "option_description": "<rendered-html><p>Parameters to configure a backend.</p>\n</rendered-html>",
                    "option_type": "null or (submodule)",
                    "option_default": "null",
                    "option_example": "{\n  tls = \"tls\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.frontends.*.params.api",
                    "option_description": "<rendered-html><p>Enable API access for this frontend. This enables you to dynamically\nmodify nghttpx at run-time therefore this feature is disabled by default\nand should be turned on with care.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.frontends.*.params.healthmon",
                    "option_description": "<rendered-html><p>Make this frontend a health monitor endpoint. Any request received on\nthis frontend is responded to with a 200 OK.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.frontends.*.params.proxyproto",
                    "option_description": "<rendered-html><p>Accept PROXY protocol version 1 on frontend connection.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.frontends.*.params.sni-fwd",
                    "option_description": "<rendered-html><p>When performing a match to select a backend server, SNI host name\nreceived from the client is used instead of the request host. See\n\u2013backend option about the pattern match.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.frontends.*.params.tls",
                    "option_description": "<rendered-html><p>Enable or disable TLS. If true (enabled) the key and certificate must\nbe configured for nghttpx.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f</a>\nfor more detail.</p>\n</rendered-html>",
                    "option_type": "one of \"tls\", \"no-tls\"",
                    "option_default": "\"tls\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.frontends.*.server",
                    "option_description": "<rendered-html><p>Frontend server interface binding specification as either a host:port\npair or a unix domain docket.</p>\n<p>NB: a host of \u201c*\u201d listens on all interfaces and includes IPv6\naddresses.</p>\n</rendered-html>",
                    "option_type": "(submodule) or path",
                    "option_default": "{\n  host = \"127.0.0.1\";\n  port = 80;\n}",
                    "option_example": "{\n  host = \"127.0.0.1\";\n  port = 8888;\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.rlimit-nofile",
                    "option_description": "<rendered-html><p>Set maximum number of open files (RLIMIT_NOFILE) to &lt;N&gt;. If 0\nis given, nghttpx does not set the limit.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--rlimit-nofile\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--rlimit-nofile</a></p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.single-process",
                    "option_description": "<rendered-html><p>Run this program in a single process mode for debugging purpose.\nWithout this option, nghttpx creates at least 2 processes: master and\nworker processes. If this option is used, master and worker are unified\ninto a single process. nghttpx still spawns additional process if\nneverbleed is used. In the single process mode, the signal handling\nfeature is disabled.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--single-process\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--single-process</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.single-thread",
                    "option_description": "<rendered-html><p>Run everything in one thread inside the worker process. This feature\nis provided for better debugging experience, or for the platforms which\nlack thread support. If threading is disabled, this option is always\nenabled.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--single-thread\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--single-thread</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.tls",
                    "option_description": "<rendered-html><p>TLS certificate and key paths. Note that this does not enable TLS for\na frontend listener, to do so, a frontend specification must set\n<code>params.tls</code> to true.</p>\n</rendered-html>",
                    "option_type": "null or (submodule)",
                    "option_default": "null",
                    "option_example": "{\n  crt = \"/etc/ssl/certs/server.crt\";\n  key = \"/etc/ssl/keys/server.key\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.tls.crt",
                    "option_description": "<rendered-html><p>Path to the TLS certificate file.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/etc/ssl/certs/server.crt\"",
                    "option_example": "\"/etc/ssl/certs/mycert.crt\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.tls.key",
                    "option_description": "<rendered-html><p>Path to the TLS key file.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/etc/ssl/keys/server.key\"",
                    "option_example": "\"/etc/ssl/keys/mykeyfile.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nghttpx/nghttpx-options.nix",
                    "option_name": "services.nghttpx.workers",
                    "option_description": "<rendered-html><p>Set the number of worker threads.</p>\n<p>Please see <a\nhref=\"https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-n\">https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-n</a></p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.additionalModules",
                    "option_description": "<rendered-html><p>Additional <a\nhref=\"https://www.nginx.com/resources/wiki/modules/\">third-party nginx\nmodules</a> to install. Packaged modules are available in\n<code>pkgs.nginxModules</code>.</p>\n</rendered-html>",
                    "option_type": "list of attribute set of anything",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.nginxModules.echo ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.appendConfig",
                    "option_description": "<rendered-html><p>Configuration lines appended to the generated Nginx configuration\nfile. Commonly used by different modules providing http snippets. <code\nclass=\"interpreted-text\" role=\"option\">appendConfig</code> can be\nspecified more than once and its value will be concatenated (contrary to\n<code class=\"interpreted-text\" role=\"option\">config</code> which can be\nset only once).</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.appendHttpConfig",
                    "option_description": "<rendered-html><p>Configuration lines to be appended to the generated http block. This\nis mutually exclusive with using config and httpConfig for specifying\nthe whole http block verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.clientMaxBodySize",
                    "option_description": "<rendered-html><p>Set nginx global client_max_body_size.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"10m\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.commonHttpConfig",
                    "option_description": "<rendered-html><p>With nginx you must provide common http context definitions before\nthey are used, e.g. log_format, resolver, etc. inside of server or\nlocation contexts. Use this attribute to set these definitions at the\nappropriate location.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  resolver 127.0.0.1 valid=5s;\n  \n  log_format myformat '$remote_addr - $remote_user [$time_local] '\n                      '\"$request\" $status $body_bytes_sent '\n                      '\"$http_referer\" \"$http_user_agent\"';\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.config",
                    "option_description": "<rendered-html><p>Verbatim <code class=\"interpreted-text\" role=\"file\">nginx.conf</code>\nconfiguration. This is mutually exclusive to any other config option for\n<code class=\"interpreted-text\" role=\"file\">nginx.conf</code> except\nfor</p>\n<ul>\n<li><a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.appendConfig&amp;query=services.nginx.appendConfig\">services.nginx.appendConfig</a></li>\n<li><a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.httpConfig&amp;query=services.nginx.httpConfig\">services.nginx.httpConfig</a></li>\n<li><a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.logError&amp;query=services.nginx.logError\">services.nginx.logError</a></li>\n</ul>\n<p>If additional verbatim config in addition to other options is needed,\n<a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.appendConfig&amp;query=services.nginx.appendConfig\">services.nginx.appendConfig</a>\nshould be used instead.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultHTTPListenPort",
                    "option_description": "<rendered-html><p>If vhosts do not specify listen.port, use these ports for HTTP by\ndefault.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "80",
                    "option_example": "8080",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultListen",
                    "option_description": "<rendered-html><p>If vhosts do not specify listen, use these addresses by default. This\noption takes precedence over <code class=\"interpreted-text\"\nrole=\"option\">defaultListenAddresses</code> and other listen-related\ndefaults options.</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": "[ ]",
                    "option_example": "[\n  { addr = \"10.0.0.12\"; proxyProtocol = true; ssl = true; }\n  { addr = \"0.0.0.0\"; }\n  { addr = \"[::0]\"; }\n]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultListen.*.addr",
                    "option_description": "<rendered-html><p>IP address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultListen.*.extraParameters",
                    "option_description": "<rendered-html><p>Extra parameters of this listen directive.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"backlog=1024\"\n  \"deferred\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultListen.*.port",
                    "option_description": "<rendered-html><p>Port number.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultListen.*.proxyProtocol",
                    "option_description": "<rendered-html><p>Enable PROXY protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultListen.*.ssl",
                    "option_description": "<rendered-html><p>Enable SSL.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultListenAddresses",
                    "option_description": "<rendered-html><p>If vhosts do not specify listenAddresses, use these addresses by\ndefault. This is akin to writing\n<code>defaultListen = [ { addr = \"0.0.0.0\" } ]</code>.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ \"0.0.0.0\" ] ++ lib.optional config.networking.enableIPv6 \"[::0]\"",
                    "option_example": "[ \"10.0.0.12\" \"[2002:a00:1::]\" ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultMimeTypes",
                    "option_description": "<rendered-html><p>Default MIME types for NGINX, as MIME types definitions from NGINX\nare very incomplete, we use by default the ones bundled in the mailcap\npackage, used by most of the other Linux distributions.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "$''{pkgs.mailcap}/etc/nginx/mime.types",
                    "option_example": "$''{pkgs.nginx}/conf/mime.types",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.defaultSSLListenPort",
                    "option_description": "<rendered-html><p>If vhosts do not specify listen.port, use these ports for SSL by\ndefault.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "443",
                    "option_example": "8443",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.enable",
                    "option_description": "<rendered-html><p>Whether to enable Nginx Web Server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.enableQuicBPF",
                    "option_description": "<rendered-html><p>Enables routing of QUIC packets using eBPF. When enabled, this allows\nto support QUIC connection migration. The directive is only supported on\nLinux 5.7+. Note that enabling this option will make nginx run with\nextended capabilities that are usually limited to processes running as\nroot namely <code>CAP_SYS_ADMIN</code> and\n<code>CAP_NET_ADMIN</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.enableReload",
                    "option_description": "<rendered-html><p>Reload nginx when configuration file changes (instead of restart).\nThe configuration file is exposed at <code class=\"interpreted-text\"\nrole=\"file\">/etc/nginx/nginx.conf</code>. See also\n<code>systemd.services.*.restartIfChanged</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.eventsConfig",
                    "option_description": "<rendered-html><p>Configuration lines to be set inside the events block.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/gitweb.nix",
                    "option_name": "services.nginx.gitweb.enable",
                    "option_description": "<rendered-html><p>If true, enable gitweb in nginx.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/gitweb.nix",
                    "option_name": "services.nginx.gitweb.group",
                    "option_description": "<rendered-html><p>Group that the CGI process will belong to. (Set to\n<code>config.services.gitolite.group</code> if you are using\ngitolite.)</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nginx\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/gitweb.nix",
                    "option_name": "services.nginx.gitweb.location",
                    "option_description": "<rendered-html><p>Location to serve gitweb on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/gitweb\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/gitweb.nix",
                    "option_name": "services.nginx.gitweb.user",
                    "option_description": "<rendered-html><p>Existing user that the CGI process will belong to. (Default almost\nsurely will do.)</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nginx\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/gitweb.nix",
                    "option_name": "services.nginx.gitweb.virtualHost",
                    "option_description": "<rendered-html><p>VirtualHost to serve gitweb on. Default is catch-all.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"_\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.group",
                    "option_description": "<rendered-html><p>Group account under which nginx runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nginx\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.httpConfig",
                    "option_description": "<rendered-html><p>Configuration lines to be set inside the http block. This is mutually\nexclusive with the structured configuration via virtualHosts and the\nrecommendedXyzSettings configuration options. See appendHttpConfig for\nappending to the generated http block.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.logError",
                    "option_description": "<rendered-html><p>Configures logging. The first parameter defines a file that will\nstore the log. The special value stderr selects the standard error file.\nLogging to syslog can be configured by specifying the \u201csyslog:\u201d prefix.\nThe second parameter determines the level of logging, and can be one of\nthe following: debug, info, notice, warn, error, crit, alert, or emerg.\nLog levels above are listed in the order of increasing severity. Setting\na certain log level will cause all messages of the specified and more\nsevere log levels to be logged. If this parameter is omitted then error\nis used.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"stderr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.mapHashBucketSize",
                    "option_description": "<rendered-html><p>Sets the bucket size for the map variables hash tables. Default value\ndepends on the processor\u2019s cache line size.</p>\n</rendered-html>",
                    "option_type": "null or one of 32, 64, 128",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.mapHashMaxSize",
                    "option_description": "<rendered-html><p>Sets the maximum size of the map variables hash tables.</p>\n</rendered-html>",
                    "option_type": "null or (positive integer, meaning >0)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.package",
                    "option_description": "<rendered-html><p>Nginx package to use. This defaults to the stable version. Note that\nthe nginx team recommends to use the mainline version which available in\nnixpkgs as <code>nginxMainline</code>. Supported Nginx forks include\n<code>angie</code>, <code>openresty</code> and <code>tengine</code>. For\nHTTP/3 support use <code>nginxQuic</code> or <code>angieQuic</code>.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nginxStable",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.preStart",
                    "option_description": "<rendered-html><p>Shell commands executed before the service\u2019s nginx is started.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyCachePath",
                    "option_description": "<rendered-html><p>Configure a proxy cache path entry. See <a\nhref=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path\">https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path</a>\nfor documentation.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyCachePath.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable this proxy cache path entry.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyCachePath.<name>.inactive",
                    "option_description": "<rendered-html><p>Cached data that has not been accessed for the time specified by the\ninactive parameter is removed from the cache, regardless of its\nfreshness.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"10m\"",
                    "option_example": "\"1d\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyCachePath.<name>.keysZoneName",
                    "option_description": "<rendered-html><p>Set name to shared memory zone.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"cache\"",
                    "option_example": "\"my_cache\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyCachePath.<name>.keysZoneSize",
                    "option_description": "<rendered-html><p>Set size to shared memory zone.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"10m\"",
                    "option_example": "\"32m\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyCachePath.<name>.levels",
                    "option_description": "<rendered-html><p>The levels parameter defines structure of subdirectories in cache:\nfrom 1 to 3, each level accepts values 1 or 2. \u0421an be used any\ncombination of 1 and 2 in these formats: x, x:x and x:x:x.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"1:2\"",
                    "option_example": "\"1:2:2\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyCachePath.<name>.maxSize",
                    "option_description": "<rendered-html><p>Set maximum cache size</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"1g\"",
                    "option_example": "\"2048m\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyCachePath.<name>.useTempPath",
                    "option_description": "<rendered-html><p>Nginx first writes files that are destined for the cache to a\ntemporary storage area, and the use_temp_path=off directive instructs\nNginx to write them to the same directories where they will be cached.\nRecommended that you set this parameter to off to avoid unnecessary\ncopying of data between file systems.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyResolveWhileRunning",
                    "option_description": "<rendered-html><p>Resolves domains of proxyPass targets at runtime and not only at\nstart, you have to set services.nginx.resolver, too.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.proxyTimeout",
                    "option_description": "<rendered-html><p>Change the proxy related timeouts in recommendedProxySettings.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"60s\"",
                    "option_example": "\"20s\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.recommendedBrotliSettings",
                    "option_description": "<rendered-html><p>Enable recommended brotli settings. Learn more about compression in\nBrotli format <a\nhref=\"https://github.com/google/ngx_brotli/\">here</a>.</p>\n<p>This adds <code>pkgs.nginxModules.brotli</code> to\n<code>services.nginx.additionalModules</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.recommendedGzipSettings",
                    "option_description": "<rendered-html><p>Enable recommended gzip settings. Learn more about compression in\nGzip format <a\nhref=\"https://docs.nginx.com/nginx/admin-guide/web-server/compression/\">here</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.recommendedOptimisation",
                    "option_description": "<rendered-html><p>Enable recommended optimisation settings.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.recommendedProxySettings",
                    "option_description": "<rendered-html><p>Whether to enable recommended proxy settings if a vhost does not\nspecify the option manually.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.recommendedTlsSettings",
                    "option_description": "<rendered-html><p>Enable recommended TLS settings.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.recommendedZstdSettings",
                    "option_description": "<rendered-html><p>Enable recommended zstd settings. Learn more about compression in\nZstd format <a\nhref=\"https://github.com/tokers/zstd-nginx-module\">here</a>.</p>\n<p>This adds <code>pkgs.nginxModules.zstd</code> to\n<code>services.nginx.additionalModules</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.resolver",
                    "option_description": "<rendered-html><p>Configures name servers used to resolve names of upstream servers\ninto addresses</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.resolver.addresses",
                    "option_description": "<rendered-html><p>List of resolvers to use</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[ \"[::1]\" \"127.0.0.1:5353\" ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.resolver.ipv4",
                    "option_description": "<rendered-html><p>By default, nginx will look up both IPv4 and IPv6 addresses while\nresolving. If looking up of IPv4 addresses is not desired, the ipv4=off\nparameter can be specified.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.resolver.ipv6",
                    "option_description": "<rendered-html><p>By default, nginx will look up both IPv4 and IPv6 addresses while\nresolving. If looking up of IPv6 addresses is not desired, the ipv6=off\nparameter can be specified.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.resolver.valid",
                    "option_description": "<rendered-html><p>By default, nginx caches answers using the TTL value of a response.\nAn optional valid parameter allows overriding it</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"30s\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.serverNamesHashBucketSize",
                    "option_description": "<rendered-html><p>Sets the bucket size for the server names hash tables. Default value\ndepends on the processor\u2019s cache line size.</p>\n</rendered-html>",
                    "option_type": "null or (positive integer, meaning >0)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.serverNamesHashMaxSize",
                    "option_description": "<rendered-html><p>Sets the maximum size of the server names hash tables.</p>\n</rendered-html>",
                    "option_type": "null or (positive integer, meaning >0)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.serverTokens",
                    "option_description": "<rendered-html><p>Show nginx version in headers and error pages.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.sslCiphers",
                    "option_description": "<rendered-html><p>Ciphers to choose from when negotiating TLS handshakes.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.sslDhparam",
                    "option_description": "<rendered-html><p>Path to DH parameters file.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/path/to/dhparams.pem\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.sslProtocols",
                    "option_description": "<rendered-html><p>Allowed TLS protocol versions.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"TLSv1.2 TLSv1.3\"",
                    "option_example": "\"TLSv1 TLSv1.1 TLSv1.2 TLSv1.3\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/nginx-sso.nix",
                    "option_name": "services.nginx.sso.configuration",
                    "option_description": "<rendered-html><p>nginx-sso configuration (<a\nhref=\"https://github.com/Luzifer/nginx-sso/wiki/Main-Configuration\">documentation</a>)\nas a Nix attribute set.</p>\n</rendered-html>",
                    "option_type": "attribute set of unspecified value",
                    "option_default": "{ }",
                    "option_example": "{\n  listen = { addr = \"127.0.0.1\"; port = 8080; };\n\n  providers.token.tokens = {\n    myuser = \"MyToken\";\n  };\n\n  acl = {\n    rule_sets = [\n      {\n        rules = [ { field = \"x-application\"; equals = \"MyApp\"; } ];\n        allow = [ \"myuser\" ];\n      }\n    ];\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/nginx-sso.nix",
                    "option_name": "services.nginx.sso.enable",
                    "option_description": "<rendered-html><p>Whether to enable nginx-sso service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/nginx-sso.nix",
                    "option_name": "services.nginx.sso.package",
                    "option_description": "<rendered-html><p>The nginx-sso package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nginx-sso",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.statusPage",
                    "option_description": "<rendered-html><p>Enable status page reachable from localhost on <a\nhref=\"http://127.0.0.1/nginx_status\">http://127.0.0.1/nginx_status</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.streamConfig",
                    "option_description": "<rendered-html><p>Configuration lines to be set inside the stream block.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  server {\n    listen 127.0.0.1:53 udp reuseport;\n    proxy_timeout 20s;\n    proxy_pass 192.168.0.1:53535;\n  }\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/tailscale-auth.nix",
                    "option_name": "services.nginx.tailscaleAuth.enable",
                    "option_description": "<rendered-html><p>Whether to enable tailscale.nginx-auth, to authenticate nginx users\nvia tailscale.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/tailscale-auth.nix",
                    "option_name": "services.nginx.tailscaleAuth.expectedTailnet",
                    "option_description": "<rendered-html><p>If you want to prevent node sharing from allowing users to access\nservices across tailnets, declare your expected tailnets domain\nhere.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"\"",
                    "option_example": "\"tailnet012345.ts.net\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/tailscale-auth.nix",
                    "option_name": "services.nginx.tailscaleAuth.group",
                    "option_description": "<rendered-html><p>Alias of <code class=\"interpreted-text\"\nrole=\"option\">services.tailscaleAuth.group</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/tailscale-auth.nix",
                    "option_name": "services.nginx.tailscaleAuth.package",
                    "option_description": "<rendered-html><p>Alias of <code class=\"interpreted-text\"\nrole=\"option\">services.tailscaleAuth.package</code>.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/tailscale-auth.nix",
                    "option_name": "services.nginx.tailscaleAuth.socketPath",
                    "option_description": "<rendered-html><p>Alias of <code class=\"interpreted-text\"\nrole=\"option\">services.tailscaleAuth.socketPath</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/tailscale-auth.nix",
                    "option_name": "services.nginx.tailscaleAuth.user",
                    "option_description": "<rendered-html><p>Alias of <code class=\"interpreted-text\"\nrole=\"option\">services.tailscaleAuth.user</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/tailscale-auth.nix",
                    "option_name": "services.nginx.tailscaleAuth.virtualHosts",
                    "option_description": "<rendered-html><p>A list of nginx virtual hosts to put behind tailscale.nginx-auth</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.upstreams",
                    "option_description": "<rendered-html><p>Defines a group of servers to use as proxy target.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  backend = {\n    extraConfig = ''\n      keepalive 16;\n    '';\n    servers = {\n      \"backend1.example.com:8080\" = {\n        weight = 5;\n      };\n      \"backend2.example.com\" = {\n        fail_timeout = \"30s\";\n        max_fails = 3;\n      };\n      \"backend3.example.com\" = { };\n      \"backup1.example.com\" = {\n        backup = true;\n      };\n      \"backup2.example.com\" = {\n        backup = true;\n      };\n    };\n  };\n  memcached = {\n    servers = {\n      \"unix:/run//memcached/memcached.sock\" = { };\n    };\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.upstreams.<name>.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the upstream verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.upstreams.<name>.servers",
                    "option_description": "<rendered-html><p>Defines the address and other parameters of the upstream servers. See\n<a\nhref=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\">the\ndocumentation</a> for the available parameters.</p>\n</rendered-html>",
                    "option_type": "attribute set of (attribute set of (boolean or signed integer or string))",
                    "option_default": "{ }",
                    "option_example": "<rendered-html><p>see <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.upstreams&amp;query=services.nginx.upstreams\">services.nginx.upstreams</a></p>\n</rendered-html>",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.upstreams.<name>.servers.<name>.backup",
                    "option_description": "<rendered-html><p>Marks the server as a backup server. It will be passed requests when\nthe primary servers are unavailable.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.user",
                    "option_description": "<rendered-html><p>User account under which nginx runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nginx\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.validateConfigFile",
                    "option_description": "<rendered-html><p>Whether to enable validating configuration with\npkgs.writeNginxConfig.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts",
                    "option_description": "<rendered-html><p>Declarative vhost config</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{\n  localhost = { };\n}",
                    "option_example": "{\n  \"hydra.example.com\" = {\n    forceSSL = true;\n    enableACME = true;\n    locations.\"/\" = {\n      proxyPass = \"http://localhost:3000\";\n    };\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.acmeFallbackHost",
                    "option_description": "<rendered-html><p>Host which to proxy requests to if ACME challenge is not found.\nUseful if you want multiple hosts to be able to verify the same domain\nname.</p>\n<p>With this option, you could request certificates for the present\ndomain with an ACME client that is running on another host, which you\nwould specify here.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.acmeRoot",
                    "option_description": "<rendered-html><p>Directory for the ACME challenge, which is <strong>public</strong>.\nDon\u2019t put certs or keys in here. Set to null to inherit from\nconfig.security.acme.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"/var/lib/acme/acme-challenge\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.addSSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS in addition to plain HTTP. This will set\ndefaults for <code>listen</code> to listen on all interfaces on the\nrespective default ports (80, 443).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.default",
                    "option_description": "<rendered-html><p>Makes this vhost the default.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.enableACME",
                    "option_description": "<rendered-html><p>Whether to ask Let\u2019s Encrypt to sign a certificate for this vhost.\nAlternately, you can use an existing certificate through <code\nclass=\"interpreted-text\" role=\"option\">useACMEHost</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the vhost verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.forceSSL",
                    "option_description": "<rendered-html><p>Whether to add a separate nginx server block that redirects (defaults\nto 301, configurable with <code>redirectCode</code>) all plain HTTP\ntraffic to HTTPS. This will set defaults for <code>listen</code> to\nlisten on all interfaces on the respective default ports (80, 443),\nwhere the non-SSL listens are used for the redirect vhosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.globalRedirect",
                    "option_description": "<rendered-html><p>If set, all requests for this host are redirected (defaults to 301,\nconfigurable with <code>redirectCode</code>) to the given hostname.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"newserver.example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.http2",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/2 protocol. Note that (as of writing) due\nto nginx\u2019s implementation, to disable HTTP/2 you have to disable it on\nall vhosts that use a given IP address / port. If there is one server\nblock configured to enable http2, then it is enabled for all server\nblocks on this IP. See <a\nhref=\"https://stackoverflow.com/a/39466948/263061\">https://stackoverflow.com/a/39466948/263061</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.http3",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/3 protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat HTTP/3 support is experimental and <em>not</em> yet recommended for\nproduction. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a> HTTP/3\navailability must be manually advertised, preferably in each location\nblock.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.http3_hq",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/0.9 protocol negotiation used in QUIC\ninteroperability tests. This requires using <code>pkgs.nginxQuic</code>\npackage which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat special application protocol support is experimental and\n<em>not</em> yet recommended for production. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.kTLS",
                    "option_description": "<rendered-html><p>Whether to enable kTLS support. Implementing TLS in the kernel (kTLS)\nimproves performance by significantly reducing the need for copying\noperations between user space and the kernel. Required Nginx version\n1.21.4 or later.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.listen",
                    "option_description": "<rendered-html><p>Listen addresses and ports for this virtual host. IPv6 addresses must\nbe enclosed in square brackets. Note: this option overrides\n<code>addSSL</code> and <code>onlySSL</code>.</p>\n<p>If you only want to set the addresses manually and not the ports,\ntake a look at <code>listenAddresses</code>.</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    addr = \"195.154.1.1\";\n    port = 443;\n    ssl = true;\n  }\n  {\n    addr = \"192.154.1.1\";\n    port = 80;\n  }\n  {\n    addr = \"unix:/var/run/nginx.sock\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.listen.*.addr",
                    "option_description": "<rendered-html><p>Listen address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.listen.*.extraParameters",
                    "option_description": "<rendered-html><p>Extra parameters of this listen directive.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"backlog=1024\"\n  \"deferred\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.listen.*.port",
                    "option_description": "<rendered-html><p>Port number to listen on. If unset and the listen address is not a\nsocket then nginx defaults to 80.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.listen.*.proxyProtocol",
                    "option_description": "<rendered-html><p>Enable PROXY protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.listen.*.ssl",
                    "option_description": "<rendered-html><p>Enable SSL.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.listenAddresses",
                    "option_description": "<rendered-html><p>Listen addresses for this virtual host. Compared to\n<code>listen</code> this only sets the addresses and the ports are\nchosen automatically.</p>\n<p>Note: This option overrides <code>enableIPv6</code></p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"127.0.0.1\"\n  \"[::1]\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations",
                    "option_description": "<rendered-html><p>Declarative location config</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  \"/\" = {\n    proxyPass = \"http://localhost:3000\";\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.alias",
                    "option_description": "<rendered-html><p>Alias directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/alias/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the location verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.fastcgiParams",
                    "option_description": "<rendered-html><p>FastCGI parameters to override. Unlike in the Nginx configuration\nfile, overriding only some default parameters won\u2019t unset the default\nvalues for other parameters.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or path)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.index",
                    "option_description": "<rendered-html><p>Adds index directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"index.php index.html\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.priority",
                    "option_description": "<rendered-html><p>Order of this location block in relation to the others in the vhost.\nThe semantics are the same as with <code>lib.mkOrder</code>. Smaller\nvalues have a greater priority.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.proxyPass",
                    "option_description": "<rendered-html><p>Adds proxy_pass directive and sets recommended proxy headers if\nrecommendedProxySettings is enabled.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"http://www.example.org/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.proxyWebsockets",
                    "option_description": "<rendered-html><p>Whether to support proxying websocket connections with HTTP/1.1.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.recommendedProxySettings",
                    "option_description": "<rendered-html><p>Enable recommended proxy settings.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.nginx.recommendedProxySettings",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.return",
                    "option_description": "<rendered-html><p>Adds a return directive, for e.g. redirections.</p>\n</rendered-html>",
                    "option_type": "null or string or signed integer",
                    "option_default": "null",
                    "option_example": "\"301 http://example.com$request_uri\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.root",
                    "option_description": "<rendered-html><p>Root directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/root/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.locations.<name>.tryFiles",
                    "option_description": "<rendered-html><p>Adds try_files directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"$uri =404\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.onlySSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS and reject plain HTTP connections. This will\nset defaults for <code>listen</code> to listen on all interfaces on port\n443.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.quic",
                    "option_description": "<rendered-html><p>Whether to enable the QUIC transport protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code>. Note that QUIC\nsupport is experimental and <em>not</em> yet recommended for production.\nRead more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.redirectCode",
                    "option_description": "<rendered-html><p>HTTP status used by <code>globalRedirect</code> and\n<code>forceSSL</code>. Possible usecases include temporary (302, 307)\nredirects, keeping the request method and body (307, 308), or explicitly\nresetting the method to GET (303). See <a\nhref=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections</a>.</p>\n</rendered-html>",
                    "option_type": "integer between 300 and 399 (both inclusive)",
                    "option_default": "301",
                    "option_example": "308",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.rejectSSL",
                    "option_description": "<rendered-html><p>Whether to listen for and reject all HTTPS connections to this vhost.\nUseful in <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.virtualHosts.&lt;name&gt;.default&amp;query=services.nginx.virtualHosts.&lt;name&gt;.default\">default</a>\nserver blocks to avoid serving the certificate for another vhost. Uses\nthe <code>ssl_reject_handshake</code> directive available in nginx\nversions 1.19.4 and above.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.reuseport",
                    "option_description": "<rendered-html><p>Create an individual listening socket . It is required to specify\nonly once on one of the hosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.root",
                    "option_description": "<rendered-html><p>The path of the web root directory.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/data/webserver/docs\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.serverAliases",
                    "option_description": "<rendered-html><p>Additional names of virtual hosts served by this virtual host\nconfiguration.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"www.example.org\"\n  \"example.org\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.serverName",
                    "option_description": "<rendered-html><p>Name of this virtual host. Defaults to attribute name in\nvirtualHosts.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.sslCertificate",
                    "option_description": "<rendered-html><p>Path to server SSL certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.cert\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.sslCertificateKey",
                    "option_description": "<rendered-html><p>Path to server SSL certificate key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.sslTrustedCertificate",
                    "option_description": "<rendered-html><p>Path to root SSL certificate for stapling and client\ncertificates.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/nginx/default.nix",
                    "option_name": "services.nginx.virtualHosts.<name>.useACMEHost",
                    "option_description": "<rendered-html><p>A host of an existing Let\u2019s Encrypt certificate to use. This is\nuseful if you have many subdomains and want to avoid hitting the <a\nhref=\"https://letsencrypt.org/docs/rate-limits\">rate limit</a>.\nAlternately, you can generate a certificate through <code\nclass=\"interpreted-text\" role=\"option\">enableACME</code>. <em>Note that\nthis option does not create any certificates, nor it does add subdomains\nto existing ones \u2013 you will need to create them manually using <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=security.acme.certs&amp;query=security.acme.certs\">security.acme.certs</a>.</em></p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ngircd.nix",
                    "option_name": "services.ngircd.config",
                    "option_description": "<rendered-html><p>The ngircd configuration (see ngircd.conf(5)).</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ngircd.nix",
                    "option_name": "services.ngircd.enable",
                    "option_description": "<rendered-html><p>Whether to enable the ngircd IRC server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ngircd.nix",
                    "option_name": "services.ngircd.package",
                    "option_description": "<rendered-html><p>The ngircd package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ngircd",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.enable",
                    "option_description": "<rendered-html><p>Whether to enable Apache NiFi.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.enableHTTPS",
                    "option_description": "<rendered-html><p>Enable HTTPS protocol. Don`t use in production.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.group",
                    "option_description": "<rendered-html><p>Group account where Apache NiFi runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nifi\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.initJavaHeapSize",
                    "option_description": "<rendered-html><p>Set the initial heap size for the JVM in MB.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "1024",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.initPasswordFile",
                    "option_description": "<rendered-html><p>nitial password for Apache NiFi. Password must be at least 12\ncharacters.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/nifi/password-nifi\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.initUser",
                    "option_description": "<rendered-html><p>Initial user account for Apache NiFi. Username must be at least 4\ncharacters.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.listenHost",
                    "option_description": "<rendered-html><p>Bind to an ip for Apache NiFi web-ui.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "if config.services.nifi.enableHTTPS\nthen \"0.0.0.0\"\nelse \"127.0.0.1\"\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.listenPort",
                    "option_description": "<rendered-html><p>Bind to a port for Apache NiFi web-ui.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "if config.services.nifi.enableHTTPS\nthen \"8443\"\nelse \"8000\"\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.maxJavaHeapSize",
                    "option_description": "<rendered-html><p>Set the initial heap size for the JVM in MB.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "2048",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.package",
                    "option_description": "<rendered-html><p>Apache NiFi package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nifi",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.proxyHost",
                    "option_description": "<rendered-html><p>Allow requests from a specific host.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "if config.services.nifi.enableHTTPS\nthen \"0.0.0.0\"\nelse null\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.proxyPort",
                    "option_description": "<rendered-html><p>Allow requests from a specific port.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "if config.services.nifi.enableHTTPS\nthen \"8443\"\nelse null\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/nifi.nix",
                    "option_name": "services.nifi.user",
                    "option_description": "<rendered-html><p>User account where Apache NiFi runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nifi\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.cache.listMinutes",
                    "option_description": "<rendered-html><p>How long to cache list info (not the tweets, so keep it high).</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "240",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.cache.redisConnections",
                    "option_description": "<rendered-html><p>Redis connection pool size.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "20",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.cache.redisHost",
                    "option_description": "<rendered-html><p>Redis host.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.cache.redisMaxConnections",
                    "option_description": "<rendered-html><p>Maximum number of connections to Redis.</p>\n<p>New connections are opened when none are available, but if the pool\nsize goes above this, they are closed when released, do not worry about\nthis unless you receive tons of requests per second.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "30",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.cache.redisPort",
                    "option_description": "<rendered-html><p>Redis port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "6379",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.cache.rssMinutes",
                    "option_description": "<rendered-html><p>How long to cache RSS queries.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "10",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.config.base64Media",
                    "option_description": "<rendered-html><p>Use base64 encoding for proxied media URLs.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.config.enableDebug",
                    "option_description": "<rendered-html><p>Whether to enable request logs and debug endpoints.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.config.enableRSS",
                    "option_description": "<rendered-html><p>Whether to enable RSS feeds.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.config.proxy",
                    "option_description": "<rendered-html><p>URL to a HTTP/HTTPS proxy.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.config.proxyAuth",
                    "option_description": "<rendered-html><p>Credentials for proxy.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.config.tokenCount",
                    "option_description": "<rendered-html><p>Minimum amount of usable tokens.</p>\n<p>Tokens are used to authorize API requests, but they expire after ~1\nhour, and have a limit of 187 requests. The limit gets reset every 15\nminutes, and the pool is filled up so there is always at least\ntokenCount usable tokens. Only increase this if you receive major bursts\nall the time.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "10",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.enable",
                    "option_description": "<rendered-html><p>Whether to enable Nitter, an alternative Twitter front-end.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.guestAccounts",
                    "option_description": "<rendered-html><p>Path to the guest accounts file.</p>\n<p>This file contains a list of guest accounts that can be used to\naccess the instance without logging in. The file is in JSONL format,\nwhere each line is a JSON object with the following fields:</p>\n<p>{\u201coauth_token\u201d:\u201csome_token\u201d,\u201coauth_token_secret\u201d:\u201csome_secret_key\u201d}</p>\n<p>See <a\nhref=\"https://github.com/zedeus/nitter/wiki/Guest-Account-Branch-Deployment\">https://github.com/zedeus/nitter/wiki/Guest-Account-Branch-Deployment</a>\nfor more information on guest accounts and how to generate them.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/nitter/guest_accounts.jsonl\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for Nitter web interface.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.package",
                    "option_description": "<rendered-html><p>The nitter package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nitter",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.autoplayGifs",
                    "option_description": "<rendered-html><p>Autoplay GIFs.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.bidiSupport",
                    "option_description": "<rendered-html><p>Support bidirectional text (makes clicking on tweets harder).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.hideBanner",
                    "option_description": "<rendered-html><p>Hide profile banner.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.hidePins",
                    "option_description": "<rendered-html><p>Hide pinned tweets.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHUup",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.hideReplies",
                    "option_description": "<rendered-html><p>Hide tweet replies.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.hideTweetStats",
                    "option_description": "<rendered-html><p>Hide tweet stats (replies, retweets, likes).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.hlsPlayback",
                    "option_description": "<rendered-html><p>Enable HLS video streaming (requires JavaScript).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.infiniteScroll",
                    "option_description": "<rendered-html><p>Infinite scrolling (requires JavaScript, experimental!).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.mp4Playback",
                    "option_description": "<rendered-html><p>Enable MP4 video playback.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.muteVideos",
                    "option_description": "<rendered-html><p>Mute videos by default.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.proxyVideos",
                    "option_description": "<rendered-html><p>Proxy video streaming through the server (might be slow).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.replaceReddit",
                    "option_description": "<rendered-html><p>Replace Reddit links with links to this instance (blank to\ndisable).</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"teddit.net\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.replaceTwitter",
                    "option_description": "<rendered-html><p>Replace Twitter links with links to this instance (blank to\ndisable).</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"nitter.net\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.replaceYouTube",
                    "option_description": "<rendered-html><p>Replace YouTube links with links to this instance (blank to\ndisable).</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"piped.kavin.rocks\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.squareAvatars",
                    "option_description": "<rendered-html><p>Square profile pictures.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.stickyProfile",
                    "option_description": "<rendered-html><p>Make profile sidebar stick to top.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.preferences.theme",
                    "option_description": "<rendered-html><p>Instance theme.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"Nitter\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.redisCreateLocally",
                    "option_description": "<rendered-html><p>Configure local Redis server for Nitter.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.server.address",
                    "option_description": "<rendered-html><p>The address to listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": "\"127.0.0.1\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.server.hostname",
                    "option_description": "<rendered-html><p>Hostname of the instance.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": "\"nitter.net\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.server.httpMaxConnections",
                    "option_description": "<rendered-html><p>Maximum number of HTTP connections.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "100",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.server.https",
                    "option_description": "<rendered-html><p>Set secure attribute on cookies. Keep it disabled to enable cookies\nwhen not using HTTPS.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.server.port",
                    "option_description": "<rendered-html><p>The port to listen on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8080",
                    "option_example": "8000",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.server.staticDir",
                    "option_description": "<rendered-html><p>Path to the static files directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.nitter.package}/share/nitter/public\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.server.title",
                    "option_description": "<rendered-html><p>Title of the instance.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nitter\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nitter.nix",
                    "option_name": "services.nitter.settings",
                    "option_description": "<rendered-html><p>Add settings here to override NixOS module generated settings.</p>\n<p>Check the official repository for the available settings: <a\nhref=\"https://github.com/zedeus/nitter/blob/master/nitter.example.conf\">https://github.com/zedeus/nitter/blob/master/nitter.example.conf</a></p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-serve.nix",
                    "option_name": "services.nix-serve.bindAddress",
                    "option_description": "<rendered-html><p>IP address where nix-serve will bind its listening socket.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-serve.nix",
                    "option_name": "services.nix-serve.enable",
                    "option_description": "<rendered-html><p>Whether to enable nix-serve, the standalone Nix binary cache\nserver.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-serve.nix",
                    "option_name": "services.nix-serve.extraParams",
                    "option_description": "<rendered-html><p>Extra command line parameters for nix-serve.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \" \"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-serve.nix",
                    "option_name": "services.nix-serve.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for nix-serve.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-serve.nix",
                    "option_name": "services.nix-serve.package",
                    "option_description": "<rendered-html><p>The nix-serve package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nix-serve",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-serve.nix",
                    "option_name": "services.nix-serve.port",
                    "option_description": "<rendered-html><p>Port number where nix-serve will listen on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-serve.nix",
                    "option_name": "services.nix-serve.secretKeyFile",
                    "option_description": "<rendered-html><p>The path to the file used for signing derivation data. Generate\nwith:</p>\n<pre><code>nix-store --generate-binary-cache-key key-name secret-key-file public-key-file</code></pre>\n<p>For more details see <code class=\"interpreted-text\"\nrole=\"manpage\">nix-store(1)</code>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-store-gcs-proxy.nix",
                    "option_name": "services.nix-store-gcs-proxy",
                    "option_description": "<rendered-html><p>An attribute set describing an HTTP to GCS proxy that allows us to\nuse GCS bucket via HTTP protocol.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-store-gcs-proxy.nix",
                    "option_name": "services.nix-store-gcs-proxy.<name>.address",
                    "option_description": "<rendered-html><p>The address of the proxy.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"localhost:3000\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-store-gcs-proxy.nix",
                    "option_name": "services.nix-store-gcs-proxy.<name>.bucketName",
                    "option_description": "<rendered-html><p>Name of Google storage bucket</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a\"",
                    "option_example": "\"my-bucket-name\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nix-store-gcs-proxy.nix",
                    "option_name": "services.nix-store-gcs-proxy.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable proxy for this bucket</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nixops-dns.nix",
                    "option_name": "services.nixops-dns.dnsmasq",
                    "option_description": "<rendered-html><p>Enable dnsmasq forwarding to nixops-dns. This allows to use\nnixops-dns for <code>services.nixops-dns.domain</code> resolution while\nforwarding the rest of the queries to original resolvers.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nixops-dns.nix",
                    "option_name": "services.nixops-dns.domain",
                    "option_description": "<rendered-html><p>Fake domain name to resolve to NixOps virtual machines.</p>\n<p>For example \u201cops\u201d will resolve \u201cvm.ops\u201d.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ops\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nixops-dns.nix",
                    "option_name": "services.nixops-dns.enable",
                    "option_description": "<rendered-html><p>Whether to enable the nixops-dns resolution of NixOps virtual\nmachines via dnsmasq and fake domain name.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nixops-dns.nix",
                    "option_name": "services.nixops-dns.user",
                    "option_description": "<rendered-html><p>The user the nixops-dns daemon should run as. This should be the\nuser, which is also used for nixops and have the .nixops directory in\nits home.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/nixseparatedebuginfod.nix",
                    "option_name": "services.nixseparatedebuginfod.allowOldNix",
                    "option_description": "<rendered-html><p>Do not fail evaluation when <code class=\"interpreted-text\"\nrole=\"option\">services.nixseparatedebuginfod.nixPackage</code> is older\nthan nix 2.18.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/nixseparatedebuginfod.nix",
                    "option_name": "services.nixseparatedebuginfod.enable",
                    "option_description": "<rendered-html><p>Whether to enable separatedebuginfod, a debuginfod server providing\nsource and debuginfo for nix packages.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/nixseparatedebuginfod.nix",
                    "option_name": "services.nixseparatedebuginfod.nixPackage",
                    "option_description": "<rendered-html><p>The version of nix that nixseparatedebuginfod should use as client\nfor the nix daemon. It is strongly advised to use nix version &gt;=\n2.18, otherwise some debug info may go missing.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nix",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/nixseparatedebuginfod.nix",
                    "option_name": "services.nixseparatedebuginfod.port",
                    "option_description": "<rendered-html><p>port to listen</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "1949",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nncp.nix",
                    "option_name": "services.nncp.caller.enable",
                    "option_description": "<rendered-html><p>Whether to enable cron\u2019ed NNCP TCP daemon caller. The daemon will\ntake configuration from <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=programs.nncp.settings&amp;query=programs.nncp.settings\">programs.nncp.settings</a>\n.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nncp.nix",
                    "option_name": "services.nncp.caller.extraArgs",
                    "option_description": "<rendered-html><p>Extra command-line arguments to pass to caller.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-autotoss\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nncp.nix",
                    "option_name": "services.nncp.daemon.enable",
                    "option_description": "<rendered-html><p>Whether to enable NNCP TCP synronization daemon. The daemon will take\nconfiguration from <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=programs.nncp.settings&amp;query=programs.nncp.settings\">programs.nncp.settings</a>\n.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nncp.nix",
                    "option_name": "services.nncp.daemon.extraArgs",
                    "option_description": "<rendered-html><p>Extra command-line arguments to pass to daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-autotoss\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nncp.nix",
                    "option_name": "services.nncp.daemon.socketActivation.enable",
                    "option_description": "<rendered-html><p>Whether to enable socket activation for nncp-daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nncp.nix",
                    "option_name": "services.nncp.daemon.socketActivation.listenStreams",
                    "option_description": "<rendered-html><p>TCP sockets to bind to. See <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=systemd.sockets.&lt;name&gt;.listenStreams&amp;query=systemd.sockets.&lt;name&gt;.listenStreams\">systemd.sockets.&lt;name&gt;.listenStreams</a>.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"5400\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.enable",
                    "option_description": "<rendered-html><p>Whether to enable NNTP-Proxy.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.listenAddress",
                    "option_description": "<rendered-html><p>Proxy listen address (IPv6 literal addresses need to be enclosed in\n\u201c[\u201d and \u201c]\u201d characters)</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": "\"[::]\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.port",
                    "option_description": "<rendered-html><p>Proxy listen port</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5555",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.prohibitPosting",
                    "option_description": "<rendered-html><p>Whether to prohibit posting to the upstream server</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.sslCert",
                    "option_description": "<rendered-html><p>Proxy ssl certificate path</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"cert.pem\"",
                    "option_example": "\"/path/to/your/cert.file\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.sslKey",
                    "option_description": "<rendered-html><p>Proxy ssl key path</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"key.pem\"",
                    "option_example": "\"/path/to/your/key.file\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.upstreamMaxConnections",
                    "option_description": "<rendered-html><p>Upstream server maximum allowed concurrent connections</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "20",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.upstreamPassword",
                    "option_description": "<rendered-html><p>Upstream server password</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.upstreamPort",
                    "option_description": "<rendered-html><p>Upstream server port</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "563",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.upstreamServer",
                    "option_description": "<rendered-html><p>Upstream server address</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"ssl-eu.astraweb.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.upstreamUser",
                    "option_description": "<rendered-html><p>Upstream server username</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.users",
                    "option_description": "<rendered-html><p>NNTP-Proxy user configuration</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  \"user1\" = {\n    passwordHash = \"$6$1l0t5Kn2Dk$appzivc./9l/kjq57eg5UCsBKlcfyCr0zNWYNerKoPsI1d7eAwiT0SVsOVx/CTgaBNT/u4fi2vN.iGlPfv1ek0\";\n    maxConnections = 5;\n  };\n  \"anotheruser\" = {\n    passwordHash = \"$6$6lwEsWB.TmsS$W7m1riUx4QrA8pKJz8hvff0dnF1NwtZXgdjmGqA1Dx2MDPj07tI9GNcb0SWlMglE.2/hBgynDdAd/XqqtRqVQ0\";\n    maxConnections = 7;\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.users.<name>.maxConnections",
                    "option_description": "<rendered-html><p>Maximum number of concurrent connections to the proxy for this\nuser</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.users.<name>.passwordHash",
                    "option_description": "<rendered-html><p>SHA-512 password hash (can be generated by\n<code>mkpasswd -m sha-512 &lt;password&gt;</code>)</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"$6$GtzE7FrpE$wwuVgFYU.TZH4Rz.Snjxk9XGua89IeVwPQ/fEUD8eujr40q5Y021yhn0aNcsQ2Ifw.BLclyzvzgegopgKcneL0\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.users.<name>.username",
                    "option_description": "<rendered-html><p>Username</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nntp-proxy.nix",
                    "option_name": "services.nntp-proxy.verbosity",
                    "option_description": "<rendered-html><p>Verbosity level</p>\n</rendered-html>",
                    "option_type": "one of \"error\", \"warning\", \"notice\", \"info\", \"debug\"",
                    "option_default": "\"info\"",
                    "option_example": "\"error\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.configFile",
                    "option_description": "<rendered-html><p>Path to the JavaScript configuration file. See <a\nhref=\"https://github.com/node-red/node-red/blob/master/packages/node_modules/node-red/settings.js\">https://github.com/node-red/node-red/blob/master/packages/node_modules/node-red/settings.js</a>\nfor a configuration example.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${package}/lib/node_modules/node-red/settings.js\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.define",
                    "option_description": "<rendered-html><p>List of settings.js overrides to pass via -D to Node-RED.</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": "{\n  \"logging.console.level\" = \"trace\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Node-RED service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.group",
                    "option_description": "<rendered-html><p>Group under which Node-RED runs.If left as the default value this\ngroup will automatically be created on system activation, otherwise the\nsysadmin is responsible for ensuring the group exists.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"node-red\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for the server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.package",
                    "option_description": "<rendered-html><p>The node-red package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nodePackages.node-red",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.port",
                    "option_description": "<rendered-html><p>Listening port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "1880",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.safe",
                    "option_description": "<rendered-html><p>Whether to launch Node-RED in \u2013safe mode.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.user",
                    "option_description": "<rendered-html><p>User under which Node-RED runs.If left as the default value this user\nwill automatically be created on system activation, otherwise the\nsysadmin is responsible for ensuring the user exists.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"node-red\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.userDir",
                    "option_description": "<rendered-html><p>The directory to store all user data, such as flow and credential\nfiles and all library data. If left as the default value this directory\nwill automatically be created before the node-red service starts,\notherwise the sysadmin is responsible for ensuring the directory exists\nwith appropriate ownership and permissions.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/node-red\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/node-red.nix",
                    "option_name": "services.node-red.withNpmAndGcc",
                    "option_description": "<rendered-html><p>Give Node-RED access to NPM and GCC at runtime, so \u2018Nodes\u2019 can be\ndownloaded and managed imperatively via the \u2018Palette Manager\u2019.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nomad.nix",
                    "option_name": "services.nomad.credentials",
                    "option_description": "<rendered-html><p>Credentials envs used to configure nomad secrets.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  logs_remote_write_password = \"/run/keys/nomad_write_password\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nomad.nix",
                    "option_name": "services.nomad.dropPrivileges",
                    "option_description": "<rendered-html><p>Whether the nomad agent should be run as a non-root nomad user.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nomad.nix",
                    "option_name": "services.nomad.enable",
                    "option_description": "<rendered-html><p>Whether to enable Nomad, a distributed, highly available,\ndatacenter-aware scheduler.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nomad.nix",
                    "option_name": "services.nomad.enableDocker",
                    "option_description": "<rendered-html><p>Enable Docker support. Needed for Nomad\u2019s docker driver.</p>\n<p>Note that the docker group membership is effectively equivalent to\nbeing root, see <a\nhref=\"https://github.com/moby/moby/issues/9976\">https://github.com/moby/moby/issues/9976</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nomad.nix",
                    "option_name": "services.nomad.extraPackages",
                    "option_description": "<rendered-html><p>Extra packages to add to <code class=\"interpreted-text\"\nrole=\"env\">PATH</code> for the Nomad agent process.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "with pkgs; [ cni-plugins ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nomad.nix",
                    "option_name": "services.nomad.extraSettingsPaths",
                    "option_description": "<rendered-html><p>Additional settings paths used to configure nomad. These can be files\nor directories.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "[ \"/etc/nomad-mutable.json\" \"/run/keys/nomad-with-secrets.json\" \"/etc/nomad/config.d\" ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nomad.nix",
                    "option_name": "services.nomad.extraSettingsPlugins",
                    "option_description": "<rendered-html><p>Additional plugins dir used to configure nomad.</p>\n</rendered-html>",
                    "option_type": "list of (package or path)",
                    "option_default": "[ ]",
                    "option_example": "[ \"<pluginDir>\" pkgs.nomad-driver-nix pkgs.nomad-driver-podman  ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nomad.nix",
                    "option_name": "services.nomad.package",
                    "option_description": "<rendered-html><p>The nomad package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nomad",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nomad.nix",
                    "option_name": "services.nomad.settings",
                    "option_description": "<rendered-html><p>Configuration for Nomad. See the <a\nhref=\"https://www.nomadproject.io/docs/configuration\">documentation</a>\nfor supported values.</p>\n<p>Notes about <code>data_dir</code>:</p>\n<p>If <code>data_dir</code> is set to a value other than the default\nvalue of <code>\"/var/lib/nomad\"</code> it is the Nomad cluster manager\u2019s\nresponsibility to make sure that this directory exists and has the\nappropriate permissions.</p>\n<p>Additionally, if <code>dropPrivileges</code> is <code>true</code>\nthen <code>data_dir</code> <em>cannot</em> be customized. Setting\n<code>dropPrivileges</code> to <code>true</code> enables the\n<code>DynamicUser</code> feature of systemd which directly manages and\noperates on <code>StateDirectory</code>.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": "{\n  # A minimal config example:\n  server = {\n    enabled = true;\n    bootstrap_expect = 1; # for demo; no fault tolerance\n  };\n  client = {\n    enabled = true;\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/novacomd.nix",
                    "option_name": "services.novacomd.enable",
                    "option_description": "<rendered-html><p>Whether to enable Novacom service for connecting to WebOS\ndevices.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/nscd.nix",
                    "option_name": "services.nscd.config",
                    "option_description": "<rendered-html><p>Configuration to use for Name Service Cache Daemon. Only used in case\nglibc-nscd is used.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "''\n  # We basically use nscd as a proxy for forwarding nss requests to appropriate\n  # nss modules, as we run nscd with LD_LIBRARY_PATH set to the directory\n  # containing all such modules\n  # Note that we can not use `enable-cache no` As this will actually cause nscd\n  # to just reject the nss requests it receives, which then causes glibc to\n  # fallback to trying to handle the request by itself. Which won't work as glibc\n  # is not aware of the path in which the nss modules live.  As a workaround, we\n  # have `enable-cache yes` with an explicit ttl of 0\n  server-user             nscd\n  \n  enable-cache            passwd          yes\n  positive-time-to-live   passwd          0\n  negative-time-to-live   passwd          0\n  shared                  passwd          yes\n  \n  enable-cache            group           yes\n  positive-time-to-live   group           0\n  negative-time-to-live   group           0\n  shared                  group           yes\n  \n  enable-cache            netgroup        yes\n  positive-time-to-live   netgroup        0\n  negative-time-to-live   netgroup        0\n  shared                  netgroup        yes\n  \n  enable-cache            hosts           yes\n  positive-time-to-live   hosts           0\n  negative-time-to-live   hosts           0\n  shared                  hosts           yes\n  \n  enable-cache            services        yes\n  positive-time-to-live   services        0\n  negative-time-to-live   services        0\n  shared                  services        yes\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/nscd.nix",
                    "option_name": "services.nscd.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Name Service Cache Daemon. Disabling this is\nstrongly discouraged, as this effectively disables NSS Lookups from all\nnon-glibc NSS modules, including the ones provided by systemd.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/nscd.nix",
                    "option_name": "services.nscd.enableNsncd",
                    "option_description": "<rendered-html><p>Whether to use nsncd instead of nscd from glibc. This is a\nnscd-compatible daemon, that proxies lookups, without any caching. Using\nnscd from glibc is discouraged.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/nscd.nix",
                    "option_name": "services.nscd.group",
                    "option_description": "<rendered-html><p>User group under which nscd runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nscd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/nscd.nix",
                    "option_name": "services.nscd.package",
                    "option_description": "<rendered-html><p>package containing the nscd binary to be used by the service. Ignored\nwhen enableNsncd is set to true.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "if pkgs.stdenv.hostPlatform.libc == \"glibc\"\n  then pkgs.stdenv.cc.libc.bin\n  else pkgs.glibc.bin;\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/nscd.nix",
                    "option_name": "services.nscd.user",
                    "option_description": "<rendered-html><p>User account under which nscd runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nscd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.bind8Stats",
                    "option_description": "<rendered-html><p>Whether to enable BIND8 like statistics.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.dnssecInterval",
                    "option_description": "<rendered-html><p>How often to check whether dnssec key rollover is required</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"1h\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.enable",
                    "option_description": "<rendered-html><p>Whether to enable NSD authoritative DNS server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.extraConfig",
                    "option_description": "<rendered-html><p>Extra nsd config.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.hideVersion",
                    "option_description": "<rendered-html><p>Whether NSD should answer VERSION.BIND and VERSION.SERVER CHAOS class\nqueries.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.identity",
                    "option_description": "<rendered-html><p>Identify the server (CH TXT ID.SERVER entry).</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"unidentified server\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.interfaces",
                    "option_description": "<rendered-html><p>What addresses the server should listen to.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"127.0.0.0\"\n  \"::1\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ipFreebind",
                    "option_description": "<rendered-html><p>Whether to bind to nonlocal addresses and interfaces that are down.\nSimilar to ip-transparent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ipTransparent",
                    "option_description": "<rendered-html><p>Allow binding to non local addresses.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ipv4",
                    "option_description": "<rendered-html><p>Whether to listen on IPv4 connections.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ipv4EDNSSize",
                    "option_description": "<rendered-html><p>Preferred EDNS buffer size for IPv4.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "4096",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ipv6",
                    "option_description": "<rendered-html><p>Whether to listen on IPv6 connections.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ipv6EDNSSize",
                    "option_description": "<rendered-html><p>Preferred EDNS buffer size for IPv6.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "4096",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.keys",
                    "option_description": "<rendered-html><p>Define your TSIG keys here.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{ \"tsig.example.org\" = {\n    algorithm = \"hmac-md5\";\n    keyFile = \"/path/to/my/key\";\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.keys.<name>.algorithm",
                    "option_description": "<rendered-html><p>Authentication algorithm for this key.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"hmac-sha256\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.keys.<name>.keyFile",
                    "option_description": "<rendered-html><p>Path to the file which contains the actual base64 encoded key. The\nkey will be copied into \u201c/var/lib/nsd/private\u201d before NSD starts. The\ncopied file is only accessibly by the NSD user.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.logTimeAscii",
                    "option_description": "<rendered-html><p>Log time in ascii, if false then in unix epoch seconds.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.nsid",
                    "option_description": "<rendered-html><p>NSID identity (hex string, or \u201cascii_somestring\u201d).</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.port",
                    "option_description": "<rendered-html><p>Port the service should bind do.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "53",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ratelimit.enable",
                    "option_description": "<rendered-html><p>Whether to enable ratelimit capabilities.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ratelimit.ipv4PrefixLength",
                    "option_description": "<rendered-html><p>IPv4 prefix length. Addresses are grouped by netblock.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ratelimit.ipv6PrefixLength",
                    "option_description": "<rendered-html><p>IPv6 prefix length. Addresses are grouped by netblock.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ratelimit.ratelimit",
                    "option_description": "<rendered-html><p>Max qps allowed from any query source. 0 means unlimited. With an\nverbosity of 2 blocked and unblocked subnets will be logged.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "200",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ratelimit.size",
                    "option_description": "<rendered-html><p>Size of the hashtable. More buckets use more memory but lower the\nchance of hash hash collisions.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1000000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ratelimit.slip",
                    "option_description": "<rendered-html><p>Number of packets that get discarded before replying a SLIP response.\n0 disables SLIP responses. 1 will make every response a SLIP\nresponse.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.ratelimit.whitelistRatelimit",
                    "option_description": "<rendered-html><p>Max qps allowed from whitelisted sources. 0 means unlimited. Set the\nrrl-whitelist option for specific queries to apply this limit instead of\nthe default to them.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "2000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.remoteControl.controlCertFile",
                    "option_description": "<rendered-html><p>Path to the client certificate signed with the server certificate.\nThis file is used by nsd-control and generated by nsd-control-setup.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/etc/nsd/nsd_control.pem\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.remoteControl.controlKeyFile",
                    "option_description": "<rendered-html><p>Path to the client private key, which is used by nsd-control but not\nby the server. This file is generated by nsd-control-setup.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/etc/nsd/nsd_control.key\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.remoteControl.enable",
                    "option_description": "<rendered-html><p>Whether to enable remote control via nsd-control.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.remoteControl.interfaces",
                    "option_description": "<rendered-html><p>Which interfaces NSD should bind to for remote control.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"127.0.0.1\"\n  \"::1\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.remoteControl.port",
                    "option_description": "<rendered-html><p>Port number for remote control operations (uses TLS over TCP).</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8952",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.remoteControl.serverCertFile",
                    "option_description": "<rendered-html><p>Path to the server self signed certificate, which is used by the\nserver but and by nsd-control. This file is generated by\nnsd-control-setup.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/etc/nsd/nsd_server.pem\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.remoteControl.serverKeyFile",
                    "option_description": "<rendered-html><p>Path to the server private key, which is used by the server but not\nby nsd-control. This file is generated by nsd-control-setup.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/etc/nsd/nsd_server.key\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.reuseport",
                    "option_description": "<rendered-html><p>Whether to enable SO_REUSEPORT on all used sockets. This lets\nmultiple processes bind to the same port. This speeds up operation\nespecially if the server count is greater than one and makes fast\nrestarts less prone to fail</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "pkgs.stdenv.isLinux",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.rootServer",
                    "option_description": "<rendered-html><p>Whether this server will be a root server (a DNS root server, you\nusually don\u2019t want that).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.roundRobin",
                    "option_description": "<rendered-html><p>Whether to enable round robin rotation of records.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.serverCount",
                    "option_description": "<rendered-html><p>Number of NSD servers to fork. Put the number of CPUs to use\nhere.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.statistics",
                    "option_description": "<rendered-html><p>Statistics are produced every number of seconds. Prints to log. If\nnull no statistics are logged.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.tcpCount",
                    "option_description": "<rendered-html><p>Maximum number of concurrent TCP connections per server.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "100",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.tcpQueryCount",
                    "option_description": "<rendered-html><p>Maximum number of queries served on a single TCP connection. 0 means\nno maximum.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.tcpTimeout",
                    "option_description": "<rendered-html><p>TCP timeout in seconds.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "120",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.verbosity",
                    "option_description": "<rendered-html><p>Verbosity level.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.version",
                    "option_description": "<rendered-html><p>The version string replied for CH TXT version.server and version.bind\nqueries. Will use the compiled package version on null. See hideVersion\nfor enabling/disabling this responses.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.xfrdReloadTimeout",
                    "option_description": "<rendered-html><p>Number of seconds between reloads triggered by xfrd.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHUyp",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zonefilesCheck",
                    "option_description": "<rendered-html><p>Whether to check mtime of all zone files on start and sighup.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zonefilesWrite",
                    "option_description": "<rendered-html><p>Write changed secondary zones to their zonefile every N seconds. If\nthe zone (pattern) configuration has \u201c\u201c zonefile, it is not written.\nZones that have received zone transfer updates are written to their\nzonefile. 0 disables writing to zone files.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones",
                    "option_description": "<rendered-html><p>Define your zones here. Zones can cascade other zones and therefore\ninherit settings from parent zones. Look at the definition of children\nto learn about inheritance and child zones. The given example will\ndefine 3 zones (example.(com|org|net).). Both example.com. and\nexample.org. inherit their configuration from serverGroup1.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{ \"serverGroup1\" = {\n    provideXFR = [ \"10.1.2.3 NOKEY\" ];\n    children = {\n      \"example.com.\" = {\n        data = ''\n          $ORIGIN example.com.\n          $TTL    86400\n          @ IN SOA a.ns.example.com. admin.example.com. (\n          ...\n        '';\n      };\n      \"example.org.\" = {\n        data = ''\n          $ORIGIN example.org.\n          $TTL    86400\n          @ IN SOA a.ns.example.com. admin.example.com. (\n          ...\n        '';\n      };\n    };\n  };\n\n  \"example.net.\" = {\n    provideXFR = [ \"10.3.2.1 NOKEY\" ];\n    data = ''\n      ...\n    '';\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.allowAXFRFallback",
                    "option_description": "<rendered-html><p>If NSD as secondary server should be allowed to AXFR if the primary\nserver does not allow IXFR.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.allowNotify",
                    "option_description": "<rendered-html><p>Listed primary servers are allowed to notify this secondary\nserver.</p>\n<p>Format:\n<code>&lt;ip&gt; &lt;key-name | NOKEY | BLOCKED&gt;</code></p>\n<p><code>&lt;ip&gt;</code> either a plain IPv4/IPv6 address or range.\nValid patters for ranges:</p>\n<ul>\n<li><code>10.0.0.0/24</code>: via subnet size</li>\n<li><code>10.0.0.0&amp;255.255.255.0</code>: via subnet mask</li>\n<li><code>10.0.0.1-10.0.0.254</code>: via range</li>\n</ul>\n<p>A optional port number could be added with a \u2018@\u2019:</p>\n<ul>\n<li><code>2001:1234::1@1234</code></li>\n</ul>\n<p><code>&lt;key-name | NOKEY | BLOCKED&gt;</code></p>\n<ul>\n<li><code>&lt;key-name&gt;</code> will use the specified TSIG key</li>\n<li><code>NOKEY</code> no TSIG signature is required</li>\n<li><code>BLOCKED</code>notifies from non-listed or blocked IPs will be\nignored</li>\n</ul>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"192.0.2.0/24 NOKEY\"\n  \"10.0.0.1-10.0.0.5 my_tsig_key_name\"\n  \"10.0.3.4&255.255.0.0 BLOCKED\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.children",
                    "option_description": "<rendered-html><p>Children zones inherit all options of their parents. Attributes\ndefined in a child will overwrite the ones of its parent. Only leaf\nzones will be actually served. This way it\u2019s possible to define maybe\nzones which share most attributes without duplicating everything. This\nmechanism replaces nsd\u2019s patterns in a save and functional way.</p>\n</rendered-html>",
                    "option_type": "attribute set of anything",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.data",
                    "option_description": "<rendered-html><p>The actual zone data. This is the content of your zone file. Use\nimports or pkgs.lib.readFile if you don\u2019t want this data in your config\nfile.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssec",
                    "option_description": "<rendered-html><p>Whether to enable DNSSEC.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.algorithm",
                    "option_description": "<rendered-html><p>Which algorithm to use for DNSSEC</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"RSASHA256\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.coverage",
                    "option_description": "<rendered-html><p>The length of time to ensure that keys will be correct; no action\nwill be taken to create new keys to be activated after this time.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"1y\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.keyttl",
                    "option_description": "<rendered-html><p>TTL for dnssec records</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"1h\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.ksk",
                    "option_description": "<rendered-html><p>Key policy for key signing keys</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{\n  keySize = 4096;\n  postPublish = \"1mo\";\n  prePublish = \"1mo\";\n  rollPeriod = \"0\";\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.ksk.keySize",
                    "option_description": "<rendered-html><p>Key size in bits</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.ksk.postPublish",
                    "option_description": "<rendered-html><p>How long after deactivation to keep a key in the zone</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.ksk.prePublish",
                    "option_description": "<rendered-html><p>How long in advance to publish new keys</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.ksk.rollPeriod",
                    "option_description": "<rendered-html><p>How frequently to change keys</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.zsk",
                    "option_description": "<rendered-html><p>Key policy for zone signing keys</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{\n  keySize = 2048;\n  postPublish = \"1w\";\n  prePublish = \"1w\";\n  rollPeriod = \"1mo\";\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.zsk.keySize",
                    "option_description": "<rendered-html><p>Key size in bits</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.zsk.postPublish",
                    "option_description": "<rendered-html><p>How long after deactivation to keep a key in the zone</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.zsk.prePublish",
                    "option_description": "<rendered-html><p>How long in advance to publish new keys</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.dnssecPolicy.zsk.rollPeriod",
                    "option_description": "<rendered-html><p>How frequently to change keys</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.maxRefreshSecs",
                    "option_description": "<rendered-html><p>Limit refresh time for secondary zones. This is the timer which\nchecks to see if the zone has to be refetched when it expires. Normally\nthe value from the SOA record is used, but this option restricts that\nvalue.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.maxRetrySecs",
                    "option_description": "<rendered-html><p>Limit retry time for secondary zones. This is the timeout after a\nfailed fetch attempt for the zone. Normally the value from the SOA\nrecord is used, but this option restricts that value.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.minRefreshSecs",
                    "option_description": "<rendered-html><p>Limit refresh time for secondary zones.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.minRetrySecs",
                    "option_description": "<rendered-html><p>Limit retry time for secondary zones.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.multiMasterCheck",
                    "option_description": "<rendered-html><p>If enabled, checks all masters for the last zone version. It uses the\nhigher version from all configured masters. Useful if you have multiple\nmasters that have different version numbers served.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.notify",
                    "option_description": "<rendered-html><p>This primary server will notify all given secondary servers about\nzone changes.</p>\n<p>Format: <code>&lt;ip&gt; &lt;key-name | NOKEY&gt;</code></p>\n<p><code>&lt;ip&gt;</code> a plain IPv4/IPv6 address with on optional\nport number (ip@port)</p>\n<p><code>&lt;key-name | NOKEY&gt;</code></p>\n<ul>\n<li><code>&lt;key-name&gt;</code> sign notifies with the specified\nkey</li>\n<li><code>NOKEY</code> don\u2019t sign notifies</li>\n</ul>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"10.0.0.1@3721 my_key\"\n  \"::5 NOKEY\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.notifyRetry",
                    "option_description": "<rendered-html><p>Specifies the number of retries for failed notifies. Set this along\nwith notify.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "5",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.outgoingInterface",
                    "option_description": "<rendered-html><p>This address will be used for zone-transfer requests if configured as\na secondary server or notifications in case of a primary server. Supply\neither a plain IPv4 or IPv6 address with an optional port number\n(ip@port).</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"2000::1@1234\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.provideXFR",
                    "option_description": "<rendered-html><p>Allow these IPs and TSIG to transfer zones, addr TSIG|NOKEY|BLOCKED\naddress range 192.0.2.0/24, 1.2.3.4&amp;255.255.0.0,\n3.0.2.20-3.0.2.40</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"192.0.2.0/24 NOKEY\"\n  \"192.0.2.0/24 my_tsig_key_name\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.requestXFR",
                    "option_description": "<rendered-html><p>Format:\n<code>[AXFR|UDP] &lt;ip-address&gt; &lt;key-name | NOKEY&gt;</code></p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.rrlWhitelist",
                    "option_description": "<rendered-html><p>Whitelists the given rrl-types.</p>\n</rendered-html>",
                    "option_type": "list of (one of \"nxdomain\", \"error\", \"referral\", \"any\", \"rrsig\", \"wildcard\", \"nodata\", \"dnskey\", \"positive\", \"all\")",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nsd.nix",
                    "option_name": "services.nsd.zones.<name>.zoneStats",
                    "option_description": "<rendered-html><p>When set to something distinct to null NSD is able to collect\nstatistics per zone. All statistics of this zone(s) will be added to the\ngroup specified by this given name. Use \u201c%s\u201d to use the zones name as\nthe group. The groups are output from nsd-control stats and\nstats_noreset.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"%s\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/ntfy-sh.nix",
                    "option_name": "services.ntfy-sh.enable",
                    "option_description": "<rendered-html><p>Whether to enable <a href=\"https://ntfy.sh\">ntfy-sh</a>, a push\nnotification service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/ntfy-sh.nix",
                    "option_name": "services.ntfy-sh.group",
                    "option_description": "<rendered-html><p>Primary group of ntfy-sh user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ntfy-sh\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/ntfy-sh.nix",
                    "option_name": "services.ntfy-sh.package",
                    "option_description": "<rendered-html><p>The ntfy-sh package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ntfy-sh",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/ntfy-sh.nix",
                    "option_name": "services.ntfy-sh.settings",
                    "option_description": "<rendered-html><p>Configuration for ntfy.sh, supported values are <a\nhref=\"https://ntfy.sh/docs/config/#config-options\">here</a>.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": "{\n  listen-http = \":8080\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/ntfy-sh.nix",
                    "option_name": "services.ntfy-sh.settings.base-url",
                    "option_description": "<rendered-html><p>Public facing base URL of the service</p>\n<p>This setting is required for any of the following features:</p>\n<ul>\n<li>attachments (to return a download URL)</li>\n<li>e-mail sending (for the topic URL in the email footer)</li>\n<li>iOS push notifications for self-hosted servers (to calculate the\nFirebase poll_request topic)</li>\n<li>Matrix Push Gateway (to validate that the pushkey is correct)</li>\n</ul>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"https://ntfy.example\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/ntfy-sh.nix",
                    "option_name": "services.ntfy-sh.user",
                    "option_description": "<rendered-html><p>User the ntfy-sh server runs under.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ntfy-sh\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntopng.nix",
                    "option_name": "services.ntopng.configText",
                    "option_description": "<rendered-html><p>Overridable configuration file contents to use for ntopng. By\ndefault, use the contents automatically generated by NixOS.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  --interface=any\n  --http-port=3000\n  --disable-login\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntopng.nix",
                    "option_name": "services.ntopng.enable",
                    "option_description": "<rendered-html><p>Enable ntopng, a high-speed web-based traffic analysis and flow\ncollection tool.</p>\n<p>With the default configuration, ntopng monitors all network\ninterfaces and displays its findings at http://localhost:${toString\nconfig.services.ntopng.http-port}. Default username and password is\nadmin/admin.</p>\n<p>See the ntopng(8) manual page and <a\nhref=\"http://www.ntop.org/products/ntop/\">http://www.ntop.org/products/ntop/</a>\nfor more info.</p>\n<p>Note that enabling ntopng will also enable redis (key-value database\nserver) for persistent data storage.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntopng.nix",
                    "option_name": "services.ntopng.extraConfig",
                    "option_description": "<rendered-html><p>Configuration lines that will be appended to the generated ntopng\nconfiguration file. Note that this mechanism does not work when the\nmanual <code class=\"interpreted-text\" role=\"option\">configText</code>\noption is used.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntopng.nix",
                    "option_name": "services.ntopng.httpPort",
                    "option_description": "<rendered-html><p>Sets the HTTP port of the embedded web server.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntopng.nix",
                    "option_name": "services.ntopng.interfaces",
                    "option_description": "<rendered-html><p>List of interfaces to monitor. Use \u201cany\u201d to monitor all\ninterfaces.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"any\"\n]",
                    "option_example": "[\n  \"eth0\"\n  \"wlan0\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntopng.nix",
                    "option_name": "services.ntopng.redis.address",
                    "option_description": "<rendered-html><p>Redis address - may be a Unix socket or a network host and port.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "config.services.redis.ntopng.unixSocket",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntopng.nix",
                    "option_name": "services.ntopng.redis.createInstance",
                    "option_description": "<rendered-html><p>Local Redis instance name. Set to <code>null</code> to disable local\nRedis instance. Defaults to <code>\"\"</code> for\n<code>system.stateVersion</code> older than 22.05.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"ntopng\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd.nix",
                    "option_name": "services.ntp.enable",
                    "option_description": "<rendered-html><p>Whether to synchronise your machine\u2019s time using ntpd, as a peer in\nthe NTP network.</p>\n<p>Disables <code>systemd.timesyncd</code> if enabled.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd.nix",
                    "option_name": "services.ntp.extraConfig",
                    "option_description": "<rendered-html><p>Additional text appended to <code class=\"interpreted-text\"\nrole=\"file\">ntp.conf</code>.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  fudge 127.127.1.0 stratum 10\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd.nix",
                    "option_name": "services.ntp.extraFlags",
                    "option_description": "<rendered-html><p>Extra flags passed to the ntpd command.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[ \"--interface=eth0\" ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd.nix",
                    "option_name": "services.ntp.restrictDefault",
                    "option_description": "<rendered-html><p>The restriction flags to be set by default.</p>\n<p>The default flags prevent external hosts from using ntpd as a DDoS\nreflector, setting system time, and querying OS/ntpd version. As\nrecommended in section 6.5.1.1.3, answer \u201cNo\u201d of <a\nhref=\"https://support.ntp.org/Support/AccessRestrictions\">https://support.ntp.org/Support/AccessRestrictions</a></p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"limited\"\n  \"kod\"\n  \"nomodify\"\n  \"notrap\"\n  \"noquery\"\n  \"nopeer\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd.nix",
                    "option_name": "services.ntp.restrictSource",
                    "option_description": "<rendered-html><p>The restriction flags to be set on source.</p>\n<p>The default flags allow peers to be added by ntpd from configured\npool(s), but not by other means.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"limited\"\n  \"kod\"\n  \"nomodify\"\n  \"notrap\"\n  \"noquery\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd.nix",
                    "option_name": "services.ntp.servers",
                    "option_description": "<rendered-html><p>The set of NTP servers from which to synchronise.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "config.networking.timeServers",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd-rs.nix",
                    "option_name": "services.ntpd-rs.enable",
                    "option_description": "<rendered-html><p>Whether to enable Network Time Service (ntpd-rs).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd-rs.nix",
                    "option_name": "services.ntpd-rs.metrics.enable",
                    "option_description": "<rendered-html><p>Whether to enable ntpd-rs Prometheus Metrics Exporter.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd-rs.nix",
                    "option_name": "services.ntpd-rs.package",
                    "option_description": "<rendered-html><p>The ntpd-rs package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ntpd-rs",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd-rs.nix",
                    "option_name": "services.ntpd-rs.settings",
                    "option_description": "<rendered-html><p>Settings to write to <code class=\"interpreted-text\"\nrole=\"file\">ntp.toml</code></p>\n<p>See <a\nhref=\"https://docs.ntpd-rs.pendulum-project.org/man/ntp.toml.5\">https://docs.ntpd-rs.pendulum-project.org/man/ntp.toml.5</a>\nfor more information about available options.</p>\n</rendered-html>",
                    "option_type": "TOML value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ntp/ntpd-rs.nix",
                    "option_name": "services.ntpd-rs.useNetworkingTimeServers",
                    "option_description": "<rendered-html><p>Use source time servers from <code class=\"interpreted-text\"\nrole=\"var\">networking.timeServers</code> in config.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nullidentdmod.nix",
                    "option_name": "services.nullidentdmod.enable",
                    "option_description": "<rendered-html><p>Whether to enable the nullidentdmod identd daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nullidentdmod.nix",
                    "option_name": "services.nullidentdmod.userid",
                    "option_description": "<rendered-html><p>User ID to return. Set to null to return a random string each\ntime.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"alice\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.adminaddr",
                    "option_description": "<rendered-html><p>If set, all recipients to users at either \u201clocalhost\u201d (the literal\nstring) or the canonical host name (from the me control attribute) are\nremapped to this address. This is provided to allow local daemons to be\nable to send email to \u201csomebody@localhost\u201d and have it go somewhere\nsensible instead of being bounced by your relay host. To send to\nmultiple addresses, put them all on one line separated by a comma.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.allmailfrom",
                    "option_description": "<rendered-html><p>If set, content will override the envelope sender on all\nmessages.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.defaultdomain",
                    "option_description": "<rendered-html><p>The content of this attribute is appended to any host name that does\nnot contain a period (except localhost), including defaulthost and\nidhost. Defaults to the value of the me attribute, if it exists,\notherwise the literal name defauldomain.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.defaulthost",
                    "option_description": "<rendered-html><p>The content of this attribute is appended to any address that is\nmissing a host name. Defaults to the value of the me control attribute,\nif it exists, otherwise the literal name defaulthost.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.doublebounceto",
                    "option_description": "<rendered-html><p>If the original sender was empty (the original message was a delivery\nstatus or disposition notification), the double bounce is sent to the\naddress in this attribute.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.helohost",
                    "option_description": "<rendered-html><p>Sets the environment variable $HELOHOST which is used by the SMTP\nprotocol module to set the parameter given to the HELO command. Defaults\nto the value of the me configuration attribute.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.idhost",
                    "option_description": "<rendered-html><p>The content of this attribute is used when building the message-id\nstring for the message. Defaults to the canonicalized value of\ndefaulthost.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.maxpause",
                    "option_description": "<rendered-html><p>The maximum time to pause between successive queue runs, in seconds.\nDefaults to 24 hours (86400).</p>\n</rendered-html>",
                    "option_type": "null or string or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.me",
                    "option_description": "<rendered-html><p>The fully-qualifiled host name of the computer running nullmailer.\nDefaults to the literal name me.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.pausetime",
                    "option_description": "<rendered-html><p>The minimum time to pause between successive queue runs when there\nare messages in the queue, in seconds. Defaults to 1 minute (60). Each\ntime this timeout is reached, the timeout is doubled to a maximum of\nmaxpause. After new messages are injected, the timeout is reset. If this\nis set to 0, nullmailer-send will exit immediately after going through\nthe queue once (one-shot mode).</p>\n</rendered-html>",
                    "option_type": "null or string or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.remotes",
                    "option_description": "<rendered-html><p>A list of remote servers to which to send each message. Each line\ncontains a remote host name or address followed by an optional protocol\nstring, separated by white space.</p>\n<p>See <code>man 8 nullmailer-send</code> for syntax and available\noptions.</p>\n<p>WARNING: This is stored world-readable in the nix store. If you need\nto specify any secret credentials here, consider using the\n<code>remotesFile</code> option instead.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.config.sendtimeout",
                    "option_description": "<rendered-html><p>The time to wait for a remote module listed above to complete sending\na message before killing it and trying again, in seconds. Defaults to 1\nhour (3600). If this is set to 0, nullmailer-send will wait forever for\nmessages to complete sending.</p>\n</rendered-html>",
                    "option_type": "null or string or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.enable",
                    "option_description": "<rendered-html><p>Whether to enable nullmailer daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.group",
                    "option_description": "<rendered-html><p>Group to use to run nullmailer-send.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nullmailer\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.remotesFile",
                    "option_description": "<rendered-html><p>Path to the <code>remotes</code> control file. This file contains a\nlist of remote servers to which to send each message.</p>\n<p>See <code>man 8 nullmailer-send</code> for syntax and available\noptions.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.setSendmail",
                    "option_description": "<rendered-html><p>Whether to set the system sendmail to nullmailer\u2019s.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/nullmailer.nix",
                    "option_name": "services.nullmailer.user",
                    "option_description": "<rendered-html><p>User to use to run nullmailer-send.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nullmailer\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.acceptInterface",
                    "option_description": "<rendered-html><p>Tell nylon which interface to listen for client requests on, default\nis \u201clo\u201d.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"lo\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.allowedIPRanges",
                    "option_description": "<rendered-html><p>Allowed client IP ranges are evaluated first, defaults to ARIN IPv4\nprivate ranges: [ \u201c192.168.0.0/16\u201d \u201c127.0.0.0/8\u201d \u201c172.16.0.0/12\u201d\n\u201c10.0.0.0/8\u201d ]</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"192.168.0.0/16\"\n  \"127.0.0.1/8\"\n  \"172.16.0.1/12\"\n  \"10.0.0.0/8\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.bindInterface",
                    "option_description": "<rendered-html><p>Tell nylon which interface to use as an uplink, default is\n\u201cenp3s0f0\u201d.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"enp3s0f0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.deniedIPRanges",
                    "option_description": "<rendered-html><p>Denied client IP ranges, these gets evaluated after the allowed IP\nranges, defaults to all IPv4 addresses: [ \u201c0.0.0.0/0\u201d ] To block all\nother access than the allowed.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"0.0.0.0/0\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.enable",
                    "option_description": "<rendered-html><p>Enables nylon as a running service upon activation.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.logging",
                    "option_description": "<rendered-html><p>Enable logging, default is no logging.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.name",
                    "option_description": "<rendered-html><p>The name of this nylon instance.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.nrConnections",
                    "option_description": "<rendered-html><p>The number of allowed simultaneous connections to the daemon, default\n10.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "10",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.port",
                    "option_description": "<rendered-html><p>What port to listen for client requests, default is 1080.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "1080",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/nylon.nix",
                    "option_name": "services.nylon.<name>.verbosity",
                    "option_description": "<rendered-html><p>Enable verbose output, default is to not be verbose.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nzbget.nix",
                    "option_name": "services.nzbget.enable",
                    "option_description": "<rendered-html><p>Whether to enable NZBGet, for downloading files from news\nservers.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nzbget.nix",
                    "option_name": "services.nzbget.group",
                    "option_description": "<rendered-html><p>Group under which NZBGet runs</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nzbget\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nzbget.nix",
                    "option_name": "services.nzbget.settings",
                    "option_description": "<rendered-html><p>NZBGet configuration, passed via command line using switch -o. Refer\nto <a\nhref=\"https://github.com/nzbget/nzbget/blob/master/nzbget.conf\">https://github.com/nzbget/nzbget/blob/master/nzbget.conf</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "attribute set of (boolean or signed integer or string)",
                    "option_default": "{ }",
                    "option_example": "{\n  MainDir = \"/data\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nzbget.nix",
                    "option_name": "services.nzbget.user",
                    "option_description": "<rendered-html><p>User account under which NZBGet runs</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nzbget\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nzbhydra2.nix",
                    "option_name": "services.nzbhydra2.dataDir",
                    "option_description": "<rendered-html><p>The directory where NZBHydra2 stores its data files.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/nzbhydra2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nzbhydra2.nix",
                    "option_name": "services.nzbhydra2.enable",
                    "option_description": "<rendered-html><p>Whether to enable NZBHydra2, Usenet meta search.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nzbhydra2.nix",
                    "option_name": "services.nzbhydra2.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for the NZBHydra2 web interface.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHUyq",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/nzbhydra2.nix",
                    "option_name": "services.nzbhydra2.package",
                    "option_description": "<rendered-html><p>The nzbhydra2 package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.nzbhydra2",
                    "option_example": null,
                    "option_flake": null
                }
            }
        ]
    }
}