{
    "took": 8,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 584,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.assets",
                    "option_description": "<rendered-html><p>Assets required to run dae.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "with pkgs; [ v2ray-geoip v2ray-domain-list-community ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.assetsPath",
                    "option_description": "<rendered-html><p>The path which contains geolocation database. This option will\noverride <code>assets</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "(symlinkJoin {\n    name = \"dae-assets\";\n    paths = assets;\n})/share/v2ray\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.config",
                    "option_description": "<rendered-html><p>WARNING: This option will expose store your config unencrypted\nworld-readable in the nix store. Config text for dae.</p>\n<p>See <a\nhref=\"https://github.com/daeuniverse/dae/blob/main/example.dae\">https://github.com/daeuniverse/dae/blob/main/example.dae</a>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.configFile",
                    "option_description": "<rendered-html><p>The path of dae config file, end with <code>.dae</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/path/to/your/config.dae\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.disableTxChecksumIpGeneric",
                    "option_description": "<rendered-html><p>See <a\nhref=\"https://github.com/daeuniverse/dae/issues/43\">https://github.com/daeuniverse/dae/issues/43</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.enable",
                    "option_description": "<rendered-html><p>Whether to enable dae, a Linux high-performance transparent proxy\nsolution based on eBPF.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.openFirewall",
                    "option_description": "<rendered-html><p>Open the firewall port.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{\n  enable = true;\n  port = 12345;\n}\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.openFirewall.enable",
                    "option_description": "<rendered-html><p>Whether to enable opening <code class=\"interpreted-text\"\nrole=\"option\">port</code> in the firewall.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.openFirewall.port",
                    "option_description": "<rendered-html><p>Port to be opened. Consist with field <code>tproxy_port</code> in\nconfig file.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dae.nix",
                    "option_name": "services.dae.package",
                    "option_description": "<rendered-html><p>The dae package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.dae",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dante.nix",
                    "option_name": "services.dante.config",
                    "option_description": "<rendered-html><p>Contents of Dante\u2019s configuration file. NOTE: user.privileged,\nuser.unprivileged and logoutput are set by the service.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dante.nix",
                    "option_name": "services.dante.enable",
                    "option_description": "<rendered-html><p>Whether to enable Dante SOCKS proxy.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/darkhttpd.nix",
                    "option_name": "services.darkhttpd.address",
                    "option_description": "<rendered-html><p>Address to listen on. Pass <code>all</code> to listen on all\ninterfaces.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/darkhttpd.nix",
                    "option_name": "services.darkhttpd.enable",
                    "option_description": "<rendered-html><p>Whether to enable DarkHTTPd web server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/darkhttpd.nix",
                    "option_name": "services.darkhttpd.extraArgs",
                    "option_description": "<rendered-html><p>Additional configuration passed to the executable.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/darkhttpd.nix",
                    "option_name": "services.darkhttpd.hideServerId",
                    "option_description": "<rendered-html><p>Don\u2019t identify the server type in headers or directory listings.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/darkhttpd.nix",
                    "option_name": "services.darkhttpd.port",
                    "option_description": "<rendered-html><p>Port to listen on. Pass 0 to let the system choose any free port for\nyou.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "80",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/darkhttpd.nix",
                    "option_name": "services.darkhttpd.rootDir",
                    "option_description": "<rendered-html><p>Path from which to serve files.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/das_watchdog.nix",
                    "option_name": "services.das_watchdog.enable",
                    "option_description": "<rendered-html><p>Whether to enable realtime watchdog.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.apiKeyFile",
                    "option_description": "<rendered-html><p>Path to a file containing the Datadog API key to associate the agent\nwith your account.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/run/keys/datadog_api_key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.checks",
                    "option_description": "<rendered-html><p>Configuration for all Datadog checks. Keys of this attribute set will\nbe used as the name of the check to create the appropriate configuration\nin <code>conf.d/$check.d/conf.yaml</code>.</p>\n<p>The configuration is converted into JSON from the plain Nix language\nconfiguration, meaning that you should write configuration adhering to\nDatadog\u2019s documentation - but in Nix language.</p>\n<p>Refer to the implementation of this module (specifically the\ndefinition of <code>defaultChecks</code>) for an example.</p>\n<p>Note: The \u2018disk\u2019 and \u2018network\u2019 check are configured in separate\noptions because they exist by default. Attempting to override their\nconfiguration here will have no effect.</p>\n</rendered-html>",
                    "option_type": "attribute set of (attribute set)",
                    "option_default": "{ }",
                    "option_example": "{\n  http_check = {\n    init_config = null;\n    instances = [\n      {\n        name = \"some-service\";\n        tags = [\n          \"some-service\"\n        ];\n        url = \"http://localhost:1337/healthz\";\n      }\n    ];\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.ddUrl",
                    "option_description": "<rendered-html><p>Custom dd_url to configure the agent with. Useful if traffic to\ndatadog needs to go through a proxy. Don\u2019t use this to point to another\ndatadog site (EU) - use site instead.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"http://haproxy.example.com:3834\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.diskCheck",
                    "option_description": "<rendered-html><p>Disk check config</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{\n  init_config = { };\n  instances = [\n    {\n      use_mount = \"false\";\n    }\n  ];\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.enable",
                    "option_description": "<rendered-html><p>Whether to enable Datadog-agent v7 monitoring service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.enableLiveProcessCollection",
                    "option_description": "<rendered-html><p>Whether to enable the live process collection agent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.enableTraceAgent",
                    "option_description": "<rendered-html><p>Whether to enable the trace agent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration options that will be merged into the main config\nfile <code class=\"interpreted-text\" role=\"file\">datadog.yaml</code>.</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.extraIntegrations",
                    "option_description": "<rendered-html><p>Extra integrations from the Datadog core-integrations repository that\nshould be built and included.</p>\n<p>By default the included integrations are disk, mongo, network, nginx\nand postgres.</p>\n<p>To include additional integrations the name of the derivation and a\nfunction to filter its dependencies from the Python package set must be\nprovided.</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": "{\n  ntp = pythonPackages: [ pythonPackages.ntplib ];\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.hostname",
                    "option_description": "<rendered-html><p>The hostname to show in the Datadog dashboard (optional)</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"mymachine.mydomain\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.logLevel",
                    "option_description": "<rendered-html><p>Logging verbosity.</p>\n</rendered-html>",
                    "option_type": "null or one of \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\"",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.networkCheck",
                    "option_description": "<rendered-html><p>Network check config</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{\n  init_config = { };\n  instances = [\n    {\n      collect_connection_state = false;\n      excluded_interfaces = [\n        \"lo\"\n        \"lo0\"\n      ];\n    }\n  ];\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.package",
                    "option_description": "<rendered-html><p>The datadog-agent package to use. :::<span class=\"note\"> </span> The\nprovided package is expected to have an overridable\n<code>pythonPackages</code>-attribute which configures the Python\nenvironment with the Datadog checks. :::</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.datadog-agent",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.processAgentPackage",
                    "option_description": "<rendered-html><p>Which DataDog v7 agent package to use. Note that the provided package\nis expected to have an overridable <code>pythonPackages</code>-attribute\nwhich configures the Python environment with the Datadog checks.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.datadog-process-agent",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.site",
                    "option_description": "<rendered-html><p>The datadog site to point the agent towards. Set to datadoghq.eu to\npoint it to their EU site.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"datadoghq.eu\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/datadog-agent.nix",
                    "option_name": "services.datadog-agent.tags",
                    "option_description": "<rendered-html><p>The tags to mark this Datadog agent</p>\n</rendered-html>",
                    "option_type": "null or (list of string)",
                    "option_default": "null",
                    "option_example": "[\n  \"test\"\n  \"service\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/davfs2.nix",
                    "option_name": "services.davfs2.davGroup",
                    "option_description": "<rendered-html><p>The group of the running mount.davfs daemon. Ordinary users must be\nmember of this group in order to mount a davfs2 file system. Value must\nbe given as name, not as numerical id.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"davfs2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/davfs2.nix",
                    "option_name": "services.davfs2.davUser",
                    "option_description": "<rendered-html><p>When invoked by root the mount.davfs daemon will run as this user.\nValue must be given as name, not as numerical id.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"davfs2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/davfs2.nix",
                    "option_name": "services.davfs2.enable",
                    "option_description": "<rendered-html><p>Whether to enable davfs2.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/davfs2.nix",
                    "option_name": "services.davfs2.settings",
                    "option_description": "<rendered-html><p>Extra settings appended to the configuration of davfs2. See <code\nclass=\"interpreted-text\" role=\"manpage\">davfs2.conf(5)</code> for\navailable settings.</p>\n</rendered-html>",
                    "option_type": "attribute set of attribute set of (boolean or signed integer or string or attribute set of (boolean or signed integer or string))",
                    "option_default": "{ }",
                    "option_example": "{\n  globalSection = {\n    proxy = \"foo.bar:8080\";\n    use_locks = false;\n  };\n  sections = {\n    \"/media/dav\" = {\n      use_locks = true;\n    };\n    \"/home/otto/mywebspace\" = {\n      gui_optimize = true;\n    };\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.adminLogin",
                    "option_description": "<rendered-html><p>Username for the admin account.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"root\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.adminPasswordFile",
                    "option_description": "<rendered-html><p>The full path to a file that contains the admin\u2019s password. Must be\nreadable by the user.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/run/secrets/davis-admin-pass\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.appSecretFile",
                    "option_description": "<rendered-html><p>A file containing the Symfony APP_SECRET - Its value should be a\nseries of characters, numbers and symbols chosen randomly and the\nrecommended length is around 32 characters. Can be generated with\n<code>cat /dev/urandom | tr -dc a-zA-Z0-9 | fold -w 48 | head -n\n1</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/run/secrets/davis-appsecret\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.config",
                    "option_description": "<rendered-html>\n</rendered-html>",
                    "option_type": "attribute set of (null or boolean or signed integer or 16 bit unsigned integer; between 0 and 65535 (both inclusive) or path or string or (submodule))",
                    "option_default": "{ }",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.dataDir",
                    "option_description": "<rendered-html><p>Davis data directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/davis\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.database.createLocally",
                    "option_description": "<rendered-html><p>Create the database and database user locally.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.database.driver",
                    "option_description": "<rendered-html><p>Database type, required in all circumstances.</p>\n</rendered-html>",
                    "option_type": "one of \"sqlite\", \"postgresql\", \"mysql\"",
                    "option_default": "\"sqlite\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.database.name",
                    "option_description": "<rendered-html><p>Database name, only used when the databse is created locally.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"davis\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.database.urlFile",
                    "option_description": "<rendered-html><p>A file containing the database connection url. If set then it\noverrides all other database settings (except driver). This is mandatory\nif you want to use an external database, that is when\n<code>services.davis.database.createLocally</code> is\n<code>false</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/secrets/davis-db-url\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.enable",
                    "option_description": "<rendered-html><p>Whether to enable Davis is a caldav and carddav server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.group",
                    "option_description": "<rendered-html><p>Group davis runs as.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"davis\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.hostname",
                    "option_description": "<rendered-html><p>Domain of the host to serve davis under. You may want to change it if\nyou run Davis on a different URL than davis.yourdomain.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"davis.yourdomain.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.mail.dsn",
                    "option_description": "<rendered-html><p>Mail DSN for sending emails. Mutually exclusive with\n<code>services.davis.mail.dsnFile</code>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"smtp://username:password@example.com:25\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.mail.dsnFile",
                    "option_description": "<rendered-html><p>A file containing the mail DSN for sending emails. Mutually exclusive\nwith <code>servies.davis.mail.dsn</code>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"/run/secrets/davis-mail-dsn\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.mail.inviteFromAddress",
                    "option_description": "<rendered-html><p>Email address to send invitations from.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"no-reply@dav.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx",
                    "option_description": "<rendered-html><p>With this option, you can customize the nginx virtualHost\nsettings.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "null",
                    "option_example": "''\n  {\n    serverAliases = [\n      \"dav.''${config.networking.domain}\"\n    ];\n    # To enable encryption and let let's encrypt take care of certificate\n    forceSSL = true;\n    enableACME = true;\n  }\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.acmeFallbackHost",
                    "option_description": "<rendered-html><p>Host which to proxy requests to if ACME challenge is not found.\nUseful if you want multiple hosts to be able to verify the same domain\nname.</p>\n<p>With this option, you could request certificates for the present\ndomain with an ACME client that is running on another host, which you\nwould specify here.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.acmeRoot",
                    "option_description": "<rendered-html><p>Directory for the ACME challenge, which is <strong>public</strong>.\nDon\u2019t put certs or keys in here. Set to null to inherit from\nconfig.security.acme.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"/var/lib/acme/acme-challenge\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.addSSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS in addition to plain HTTP. This will set\ndefaults for <code>listen</code> to listen on all interfaces on the\nrespective default ports (80, 443).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHTSc",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.default",
                    "option_description": "<rendered-html><p>Makes this vhost the default.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.enableACME",
                    "option_description": "<rendered-html><p>Whether to ask Let\u2019s Encrypt to sign a certificate for this vhost.\nAlternately, you can use an existing certificate through <code\nclass=\"interpreted-text\" role=\"option\">useACMEHost</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the vhost verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.forceSSL",
                    "option_description": "<rendered-html><p>Whether to add a separate nginx server block that redirects (defaults\nto 301, configurable with <code>redirectCode</code>) all plain HTTP\ntraffic to HTTPS. This will set defaults for <code>listen</code> to\nlisten on all interfaces on the respective default ports (80, 443),\nwhere the non-SSL listens are used for the redirect vhosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.globalRedirect",
                    "option_description": "<rendered-html><p>If set, all requests for this host are redirected (defaults to 301,\nconfigurable with <code>redirectCode</code>) to the given hostname.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"newserver.example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.http2",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/2 protocol. Note that (as of writing) due\nto nginx\u2019s implementation, to disable HTTP/2 you have to disable it on\nall vhosts that use a given IP address / port. If there is one server\nblock configured to enable http2, then it is enabled for all server\nblocks on this IP. See <a\nhref=\"https://stackoverflow.com/a/39466948/263061\">https://stackoverflow.com/a/39466948/263061</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.http3",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/3 protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat HTTP/3 support is experimental and <em>not</em> yet recommended for\nproduction. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a> HTTP/3\navailability must be manually advertised, preferably in each location\nblock.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.http3_hq",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/0.9 protocol negotiation used in QUIC\ninteroperability tests. This requires using <code>pkgs.nginxQuic</code>\npackage which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat special application protocol support is experimental and\n<em>not</em> yet recommended for production. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.kTLS",
                    "option_description": "<rendered-html><p>Whether to enable kTLS support. Implementing TLS in the kernel (kTLS)\nimproves performance by significantly reducing the need for copying\noperations between user space and the kernel. Required Nginx version\n1.21.4 or later.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.listen",
                    "option_description": "<rendered-html><p>Listen addresses and ports for this virtual host. IPv6 addresses must\nbe enclosed in square brackets. Note: this option overrides\n<code>addSSL</code> and <code>onlySSL</code>.</p>\n<p>If you only want to set the addresses manually and not the ports,\ntake a look at <code>listenAddresses</code>.</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    addr = \"195.154.1.1\";\n    port = 443;\n    ssl = true;\n  }\n  {\n    addr = \"192.154.1.1\";\n    port = 80;\n  }\n  {\n    addr = \"unix:/var/run/nginx.sock\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.listen.*.addr",
                    "option_description": "<rendered-html><p>Listen address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.listen.*.extraParameters",
                    "option_description": "<rendered-html><p>Extra parameters of this listen directive.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"backlog=1024\"\n  \"deferred\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.listen.*.port",
                    "option_description": "<rendered-html><p>Port number to listen on. If unset and the listen address is not a\nsocket then nginx defaults to 80.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.listen.*.proxyProtocol",
                    "option_description": "<rendered-html><p>Enable PROXY protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.listen.*.ssl",
                    "option_description": "<rendered-html><p>Enable SSL.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.listenAddresses",
                    "option_description": "<rendered-html><p>Listen addresses for this virtual host. Compared to\n<code>listen</code> this only sets the addresses and the ports are\nchosen automatically.</p>\n<p>Note: This option overrides <code>enableIPv6</code></p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"127.0.0.1\"\n  \"[::1]\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations",
                    "option_description": "<rendered-html><p>Declarative location config</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  \"/\" = {\n    proxyPass = \"http://localhost:3000\";\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.alias",
                    "option_description": "<rendered-html><p>Alias directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/alias/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the location verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.fastcgiParams",
                    "option_description": "<rendered-html><p>FastCGI parameters to override. Unlike in the Nginx configuration\nfile, overriding only some default parameters won\u2019t unset the default\nvalues for other parameters.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or path)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.index",
                    "option_description": "<rendered-html><p>Adds index directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"index.php index.html\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.priority",
                    "option_description": "<rendered-html><p>Order of this location block in relation to the others in the vhost.\nThe semantics are the same as with <code>lib.mkOrder</code>. Smaller\nvalues have a greater priority.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.proxyPass",
                    "option_description": "<rendered-html><p>Adds proxy_pass directive and sets recommended proxy headers if\nrecommendedProxySettings is enabled.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"http://www.example.org/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.proxyWebsockets",
                    "option_description": "<rendered-html><p>Whether to support proxying websocket connections with HTTP/1.1.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.recommendedProxySettings",
                    "option_description": "<rendered-html><p>Enable recommended proxy settings.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.nginx.recommendedProxySettings",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.return",
                    "option_description": "<rendered-html><p>Adds a return directive, for e.g. redirections.</p>\n</rendered-html>",
                    "option_type": "null or string or signed integer",
                    "option_default": "null",
                    "option_example": "\"301 http://example.com$request_uri\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.root",
                    "option_description": "<rendered-html><p>Root directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/root/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.locations.<name>.tryFiles",
                    "option_description": "<rendered-html><p>Adds try_files directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"$uri =404\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.onlySSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS and reject plain HTTP connections. This will\nset defaults for <code>listen</code> to listen on all interfaces on port\n443.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.quic",
                    "option_description": "<rendered-html><p>Whether to enable the QUIC transport protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code>. Note that QUIC\nsupport is experimental and <em>not</em> yet recommended for production.\nRead more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.redirectCode",
                    "option_description": "<rendered-html><p>HTTP status used by <code>globalRedirect</code> and\n<code>forceSSL</code>. Possible usecases include temporary (302, 307)\nredirects, keeping the request method and body (307, 308), or explicitly\nresetting the method to GET (303). See <a\nhref=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections</a>.</p>\n</rendered-html>",
                    "option_type": "integer between 300 and 399 (both inclusive)",
                    "option_default": "301",
                    "option_example": "308",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.rejectSSL",
                    "option_description": "<rendered-html><p>Whether to listen for and reject all HTTPS connections to this vhost.\nUseful in <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.virtualHosts.&lt;name&gt;.default&amp;query=services.nginx.virtualHosts.&lt;name&gt;.default\">default</a>\nserver blocks to avoid serving the certificate for another vhost. Uses\nthe <code>ssl_reject_handshake</code> directive available in nginx\nversions 1.19.4 and above.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.reuseport",
                    "option_description": "<rendered-html><p>Create an individual listening socket . It is required to specify\nonly once on one of the hosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.root",
                    "option_description": "<rendered-html><p>The path of the web root directory.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/data/webserver/docs\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.serverAliases",
                    "option_description": "<rendered-html><p>Additional names of virtual hosts served by this virtual host\nconfiguration.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"www.example.org\"\n  \"example.org\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.serverName",
                    "option_description": "<rendered-html><p>Name of this virtual host. Defaults to attribute name in\nvirtualHosts.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.sslCertificate",
                    "option_description": "<rendered-html><p>Path to server SSL certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.cert\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.sslCertificateKey",
                    "option_description": "<rendered-html><p>Path to server SSL certificate key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.sslTrustedCertificate",
                    "option_description": "<rendered-html><p>Path to root SSL certificate for stapling and client\ncertificates.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.nginx.useACMEHost",
                    "option_description": "<rendered-html><p>A host of an existing Let\u2019s Encrypt certificate to use. This is\nuseful if you have many subdomains and want to avoid hitting the <a\nhref=\"https://letsencrypt.org/docs/rate-limits\">rate limit</a>.\nAlternately, you can generate a certificate through <code\nclass=\"interpreted-text\" role=\"option\">enableACME</code>. <em>Note that\nthis option does not create any certificates, nor it does add subdomains\nto existing ones \u2013 you will need to create them manually using <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=security.acme.certs&amp;query=security.acme.certs\">security.acme.certs</a>.</em></p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.package",
                    "option_description": "<rendered-html><p>The davis package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.davis",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.poolConfig",
                    "option_description": "<rendered-html><p>Options for the davis PHP pool. See the documentation on\n<literal>php-fpm.conf</literal> for details on configuration\ndirectives.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer or boolean)",
                    "option_default": "{\n  pm = \"dynamic\";\n  \"pm.max_children\" = 32;\n  \"pm.max_requests\" = 500;\n  \"pm.max_spare_servers\" = 4;\n  \"pm.min_spare_servers\" = 2;\n  \"pm.start_servers\" = 2;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/davis.nix",
                    "option_name": "services.davis.user",
                    "option_description": "<rendered-html><p>User davis runs as.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"davis\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/davmail.nix",
                    "option_name": "services.davmail.config",
                    "option_description": "<rendered-html><p>Davmail configuration. Refer to <a\nhref=\"http://davmail.sourceforge.net/serversetup.html\">http://davmail.sourceforge.net/serversetup.html</a>\nand <a\nhref=\"http://davmail.sourceforge.net/advanced.html\">http://davmail.sourceforge.net/advanced.html</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "davmail config type (str, int, bool or attribute set thereof)",
                    "option_default": "{ }",
                    "option_example": "{\n  davmail.allowRemote = true;\n  davmail.imapPort = 55555;\n  davmail.bindAddress = \"10.0.1.2\";\n  davmail.smtpSaveInSent = true;\n  davmail.folderSizeLimit = 10;\n  davmail.caldavAutoSchedule = false;\n  log4j.logger.rootLogger = \"DEBUG\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/davmail.nix",
                    "option_name": "services.davmail.enable",
                    "option_description": "<rendered-html><p>Whether to enable davmail, an MS Exchange gateway.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/davmail.nix",
                    "option_name": "services.davmail.url",
                    "option_description": "<rendered-html><p>Outlook Web Access URL to access the exchange server, i.e. the base\nwebmail URL.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"https://outlook.office365.com/EWS/Exchange.asmx\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.enable",
                    "option_description": "<rendered-html><p>Whether to enable db-rest service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.group",
                    "option_description": "<rendered-html><p>Group under which db-rest runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"db-rest\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.host",
                    "option_description": "<rendered-html><p>The host address the db-rest server should listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.package",
                    "option_description": "<rendered-html><p>The db-rest package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.db-rest",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.port",
                    "option_description": "<rendered-html><p>The port the db-rest server should listen on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.redis.createLocally",
                    "option_description": "<rendered-html><p>Configure a local redis server for db-rest.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.redis.enable",
                    "option_description": "<rendered-html><p>Enable caching with redis for db-rest.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.redis.host",
                    "option_description": "<rendered-html><p>Redis host.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.redis.passwordFile",
                    "option_description": "<rendered-html><p>Path to a file containing the redis password.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/db-rest/pasword-redis-db\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.redis.port",
                    "option_description": "<rendered-html><p>Redis port.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.redis.useSSL",
                    "option_description": "<rendered-html><p>Use SSL if using a redis network connection.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.redis.user",
                    "option_description": "<rendered-html><p>Optional username used for authentication with redis.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/db-rest.nix",
                    "option_name": "services.db-rest.user",
                    "option_description": "<rendered-html><p>User account under which db-rest runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"db-rest\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/dbus.nix",
                    "option_name": "services.dbus.apparmor",
                    "option_description": "<rendered-html><p>AppArmor mode for dbus.</p>\n<p><code>enabled</code> enables mediation when it\u2019s supported in the\nkernel, <code>disabled</code> always disables AppArmor even with kernel\nsupport, and <code>required</code> fails when AppArmor was not found in\nthe kernel.</p>\n</rendered-html>",
                    "option_type": "one of \"enabled\", \"disabled\", \"required\"",
                    "option_default": "\"disabled\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/dbus.nix",
                    "option_name": "services.dbus.implementation",
                    "option_description": "<rendered-html><p>The implementation to use for the message bus defined by the D-Bus\nspecification. Can be either the classic dbus daemon or dbus-broker,\nwhich aims to provide high performance and reliability, while keeping\ncompatibility to the D-Bus reference implementation.</p>\n</rendered-html>",
                    "option_type": "one of \"dbus\", \"broker\"",
                    "option_default": "\"dbus\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/dbus.nix",
                    "option_name": "services.dbus.packages",
                    "option_description": "<rendered-html><p>Packages whose D-Bus configuration files should be included in the\nconfiguration of the D-Bus system-wide or session-wide message bus.\nSpecifically, files in the following directories will be included into\ntheir respective DBus configuration paths: <code\nclass=\"interpreted-text\" role=\"file\">\u00abpkg\u00bb/etc/dbus-1/system.d</code>\n<code class=\"interpreted-text\"\nrole=\"file\">\u00abpkg\u00bb/share/dbus-1/system.d</code> <code\nclass=\"interpreted-text\"\nrole=\"file\">\u00abpkg\u00bb/share/dbus-1/system-services</code> <code\nclass=\"interpreted-text\" role=\"file\">\u00abpkg\u00bb/etc/dbus-1/session.d</code>\n<code class=\"interpreted-text\"\nrole=\"file\">\u00abpkg\u00bb/share/dbus-1/session.d</code> <code\nclass=\"interpreted-text\"\nrole=\"file\">\u00abpkg\u00bb/share/dbus-1/services</code></p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/ddccontrol.nix",
                    "option_name": "services.ddccontrol.enable",
                    "option_description": "<rendered-html><p>Whether to enable ddccontrol for controlling displays.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.configFile",
                    "option_description": "<rendered-html><p>Path to configuration file. When set this overrides the generated\nconfiguration from module options.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/root/nixos/secrets/ddclient.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.domains",
                    "option_description": "<rendered-html><p>Domain name(s) to synchronize.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.enable",
                    "option_description": "<rendered-html><p>Whether to synchronise your machine\u2019s IP address with a dynamic DNS\nprovider (e.g. dyndns.org).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration. Contents will be added verbatim to the\nconfiguration file.</p>\n<div class=\"note\">\n<p><code>daemon</code> should not be added here because it does not work\ngreat with the systemd-timer approach the service uses.</p>\n</div>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.interval",
                    "option_description": "<rendered-html><p>The interval at which to run the check and update. See <code\nclass=\"interpreted-text\" role=\"command\">man 7 systemd.time</code> for\nthe format.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"10min\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.package",
                    "option_description": "<rendered-html><p>The ddclient executable package run by the service.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ddclient",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.passwordFile",
                    "option_description": "<rendered-html><p>A file containing the password or a TSIG key in named format when\nusing the nsupdate protocol.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.protocol",
                    "option_description": "<rendered-html><p>Protocol to use with dynamic DNS provider (see <a\nhref=\"https://ddclient.net/protocols.html\">https://ddclient.net/protocols.html</a>\n).</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dyndns2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.quiet",
                    "option_description": "<rendered-html><p>Print no messages for unnecessary updates.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.script",
                    "option_description": "<rendered-html><p>script as required by some providers.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.server",
                    "option_description": "<rendered-html><p>Server address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.ssl",
                    "option_description": "<rendered-html><p>Whether to use SSL/TLS to connect to dynamic DNS provider.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.use",
                    "option_description": "<rendered-html><p>Method to determine the IP address to send to the dynamic DNS\nprovider.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.username",
                    "option_description": "<rendered-html><p>User name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.usev4",
                    "option_description": "<rendered-html><p>Method to determine the IPv4 address to send to the dynamic DNS\nprovider. Only used if <code>use</code> is not set.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"webv4, webv4=checkip.dyndns.com/, webv4-skip='Current IP Address: '\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.usev6",
                    "option_description": "<rendered-html><p>Method to determine the IPv6 address to send to the dynamic DNS\nprovider. Only used if <code>use</code> is not set.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"webv6, webv6=checkipv6.dyndns.com/, webv6-skip='Current IP Address: '\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.verbose",
                    "option_description": "<rendered-html><p>Print verbose information.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ddclient.nix",
                    "option_name": "services.ddclient.zone",
                    "option_description": "<rendered-html><p>zone as required by some providers.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.allowRebootSystem",
                    "option_description": "<rendered-html><p>Whether to enable rebooting the system.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.allowRestartService",
                    "option_description": "<rendered-html><p>Whether to enable killing/restarting processes.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.allowSetSystemTime",
                    "option_description": "<rendered-html><p>Whether to enable setting the system time.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.device",
                    "option_description": "<rendered-html><p>Force deCONZ to use a specific USB device (e.g. /dev/ttyACM0). By\ndefault it does a search.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.enable",
                    "option_description": "<rendered-html><p>Whether to enable deCONZ, a Zigbee gateway for use with ConBee\nhardware (<a\nhref=\"https://phoscon.de/en/conbee2\">https://phoscon.de/en/conbee2</a>).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.extraArgs",
                    "option_description": "<rendered-html><p>Extra command line arguments for deCONZ, see <a\nhref=\"https://github.com/dresden-elektronik/deconz-rest-plugin/wiki/deCONZ-command-line-parameters\">https://github.com/dresden-elektronik/deconz-rest-plugin/wiki/deCONZ-command-line-parameters</a>.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--dbg-info=1\"\n  \"--dbg-err=2\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.httpPort",
                    "option_description": "<rendered-html><p>TCP port for the web server.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "80",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.listenAddress",
                    "option_description": "<rendered-html><p>Pin deCONZ to the network interface specified through the provided IP\naddress. This applies for the webserver as well as the websocket\nnotifications.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.openFirewall",
                    "option_description": "<rendered-html><p>Whether to enable opening up the service ports in the firewall.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.package",
                    "option_description": "<rendered-html><p>Which deCONZ package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.deconz",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/deconz.nix",
                    "option_name": "services.deconz.wsPort",
                    "option_description": "<rendered-html><p>TCP port for the WebSocket.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "443",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/deepin/app-services.nix",
                    "option_name": "services.deepin.app-services.enable",
                    "option_description": "<rendered-html><p>Whether to enable service collection of DDE applications, including\ndconfig-center.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/deepin/dde-api.nix",
                    "option_name": "services.deepin.dde-api.enable",
                    "option_description": "<rendered-html><p>Whether to enable the DDE API, which provides some dbus interfaces\nthat is used for screen zone detecting, thumbnail generating, and sound\nplaying in Deepin Desktop Environment .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/deepin/dde-daemon.nix",
                    "option_name": "services.deepin.dde-daemon.enable",
                    "option_description": "<rendered-html><p>Whether to enable daemon for handling the deepin session\nsettings.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/deepin/deepin-anything.nix",
                    "option_name": "services.deepin.deepin-anything.enable",
                    "option_description": "<rendered-html><p>Whether to enable deepin anything file search tool.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/deliantra-server.nix",
                    "option_name": "services.deliantra-server.configFiles",
                    "option_description": "<rendered-html><p>Contents of the server configuration files. These will be appended to\nthe example configurations the server comes with and overwrite any\ndefault settings defined therein.</p>\n<p>The example here is not comprehensive. See the files in\n/etc/deliantra-server after enabling this module for full\ndocumentation.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{\n  motd = \"\";\n}",
                    "option_example": "{\n  dm_file = ''\n    admin:secret_password:localhost\n    alice:xyzzy:*\n  '';\n  motd = \"Welcome to Deliantra!\";\n  settings = ''\n    # Settings for game mechanics.\n    stat_loss_on_death true\n    armor_max_enchant 7\n  '';\n  config = ''\n    # Settings for the server daemon.\n    hiscore_url https://deliantra.example.net/scores/\n    max_map_reset 86400\n  '';\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/deliantra-server.nix",
                    "option_name": "services.deliantra-server.dataDir",
                    "option_description": "<rendered-html><p>Where to store readonly data (maps, archetypes, sprites, etc). Note\nthat if you plan to use the live map editor (rather than editing the\nmaps offline and then nixos-rebuilding), THIS MUST BE WRITEABLE \u2013 copy\nthe deliantra-data someplace writeable (say, /var/lib/deliantra/data)\nand update this option accordingly.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${pkgs.deliantra-data}\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/deliantra-server.nix",
                    "option_name": "services.deliantra-server.enable",
                    "option_description": "<rendered-html><p>If enabled, the Deliantra game server will be started at boot.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/deliantra-server.nix",
                    "option_name": "services.deliantra-server.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open ports in the firewall for the server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/deliantra-server.nix",
                    "option_name": "services.deliantra-server.package",
                    "option_description": "<rendered-html><p>The deliantra-server package to use. :::<span class=\"note\"> </span>\nThis will also be used for map/arch data, if you don\u2019t change <code\nclass=\"interpreted-text\" role=\"option\">dataDir</code> :::</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.deliantra-server",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/deliantra-server.nix",
                    "option_name": "services.deliantra-server.stateDir",
                    "option_description": "<rendered-html><p>Where to store runtime data (save files, persistent items, etc).</p>\n<p>If left at the default, this will be automatically created on server\nstartup if it does not already exist. If changed, it is the admin\u2019s\nresponsibility to make sure that the directory exists and is writeable\nby the <code>crossfire</code> user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/deliantra\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.authFile",
                    "option_description": "<rendered-html><p>The file managing the authentication for deluge, the format of this\nfile is straightforward, each line contains a username:password:level\ntuple in plaintext. It only has an effect when <code\nclass=\"interpreted-text\"\nrole=\"option\">services.deluge.declarative</code> is set to\n<code>true</code>. See <a\nhref=\"https://dev.deluge-torrent.org/wiki/UserGuide/Authentication\">https://dev.deluge-torrent.org/wiki/UserGuide/Authentication</a>\nfor more information.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/run/keys/deluge-auth\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.config",
                    "option_description": "<rendered-html><p>Deluge core configuration for the core.conf file. Only has an effect\nwhen <code class=\"interpreted-text\"\nrole=\"option\">services.deluge.declarative</code> is set to\n<code>true</code>. String values must be quoted, integer and boolean\nvalues must not. See <a\nhref=\"https://git.deluge-torrent.org/deluge/tree/deluge/core/preferencesmanager.py#n41\">https://git.deluge-torrent.org/deluge/tree/deluge/core/preferencesmanager.py#n41</a>\nfor the available options.</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": "{\n  download_location = \"/srv/torrents/\";\n  max_upload_speed = \"1000.0\";\n  share_ratio_limit = \"2.0\";\n  allow_remote = true;\n  daemon_port = 58846;\n  listen_ports = [ 6881 6889 ];\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.dataDir",
                    "option_description": "<rendered-html><p>The directory where deluge will create files.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/deluge\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.declarative",
                    "option_description": "<rendered-html><p>Whether to use a declarative deluge configuration. Only if set to\n<code>true</code>, the options <code class=\"interpreted-text\"\nrole=\"option\">services.deluge.config</code>, <code\nclass=\"interpreted-text\"\nrole=\"option\">services.deluge.openFirewall</code> and <code\nclass=\"interpreted-text\" role=\"option\">services.deluge.authFile</code>\nwill be applied.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.enable",
                    "option_description": "<rendered-html><p>Whether to enable Deluge daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.extraPackages",
                    "option_description": "<rendered-html><p>Extra packages available at runtime to enable Deluge\u2019s plugins. For\nexample, extraction utilities are required for the built-in \u201cExtractor\u201d\nplugin. This always contains unzip, gnutar, xz and bzip2.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.group",
                    "option_description": "<rendered-html><p>Group under which deluge runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"deluge\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.openFilesLimit",
                    "option_description": "<rendered-html><p>Number of files to allow deluged to open.</p>\n</rendered-html>",
                    "option_type": "signed integer or string",
                    "option_default": "4096",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open the firewall for the ports in <code\nclass=\"interpreted-text\"\nrole=\"option\">services.deluge.config.listen_ports</code>. It only takes\neffet if <code class=\"interpreted-text\"\nrole=\"option\">services.deluge.declarative</code> is set to\n<code>true</code>.</p>\n<p>It does NOT apply to the daemon port nor the web UI port. To access\nthose ports securely check the documentation <a\nhref=\"https://dev.deluge-torrent.org/wiki/UserGuide/ThinClient#CreateSSHTunnel\">https://dev.deluge-torrent.org/wiki/UserGuide/ThinClient#CreateSSHTunnel</a>\nor use a VPN or configure certificates for deluge.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.package",
                    "option_description": "<rendered-html><p>The deluge-2_x package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.deluge-2_x",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.user",
                    "option_description": "<rendered-html><p>User account under which deluge runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"deluge\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.web.enable",
                    "option_description": "<rendered-html><p>Whether to enable Deluge Web daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.web.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for deluge web daemon</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/deluge.nix",
                    "option_name": "services.deluge.web.port",
                    "option_description": "<rendered-html><p>Deluge web UI port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8112",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.enable",
                    "option_description": "<rendered-html><p>Whether to enable matrix.org dendrite.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.environmentFile",
                    "option_description": "<rendered-html><p>Environment file as defined in <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.exec.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.exec(5)</code></a>.\nSecrets may be passed to the service without adding them to the\nworld-readable Nix store, by specifying placeholder variables as the\noption value in Nix and setting these variables accordingly in the\nenvironment file. Currently only used for the registration secret to\nallow secure registration when client_api.registration_disabled is\ntrue.</p>\n<pre><code>  # snippet of dendrite-related config\n  services.dendrite.settings.client_api.registration_shared_secret = &quot;$REGISTRATION_SHARED_SECRET&quot;;</code></pre>\n<pre><code>  # content of the environment file\n  REGISTRATION_SHARED_SECRET=verysecretpassword</code></pre>\n<p>Note that this file needs to be available on the host on which\n<code>dendrite</code> is running.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/lib/dendrite/registration_secret\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.httpPort",
                    "option_description": "<rendered-html><p>The port to listen for HTTP requests on.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8008",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.httpsPort",
                    "option_description": "<rendered-html><p>The port to listen for HTTPS requests on.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.loadCredential",
                    "option_description": "<rendered-html><p>This can be used to pass secrets to the systemd service without\nadding them to the nix store. To use the example setting, see the\nexample of <code class=\"interpreted-text\"\nrole=\"option\">services.dendrite.settings.global.private_key</code>. See\nthe LoadCredential section of systemd.exec manual for more\ninformation.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"private_key:/path/to/my_private_key\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.openRegistration",
                    "option_description": "<rendered-html><p>Allow open registration without secondary verification\n(reCAPTCHA).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings",
                    "option_description": "<rendered-html><p>Configuration for dendrite, see: <a\nhref=\"https://github.com/matrix-org/dendrite/blob/master/dendrite-config.yaml\">https://github.com/matrix-org/dendrite/blob/master/dendrite-config.yaml</a>\nfor available options with which to populate settings.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.app_service_api.database.connection_string",
                    "option_description": "<rendered-html><p>Database for the Appservice API.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:federationapi.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.client_api.registration_disabled",
                    "option_description": "<rendered-html><p>Whether to disable user registration to the server without the shared\nsecret.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.federation_api.database.connection_string",
                    "option_description": "<rendered-html><p>Database for the Federation API.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:federationapi.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.global.private_key",
                    "option_description": "<rendered-html><p>The path to the signing private key file, used to sign requests and\nevents.</p>\n<pre><code>  nix-shell -p dendrite --command &quot;generate-keys --private-key matrix_key.pem&quot;</code></pre>\n</rendered-html>",
                    "option_type": "path or string matching the pattern ^\\$CREDENTIALS_DIRECTORY/.+",
                    "option_default": null,
                    "option_example": "\"$CREDENTIALS_DIRECTORY/private_key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.global.server_name",
                    "option_description": "<rendered-html><p>The domain name of the server, with optional explicit port. This is\nused by remote servers to connect to this server. This is also the last\npart of your UserID.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.global.trusted_third_party_id_servers",
                    "option_description": "<rendered-html><p>Lists of domains that the server will trust as identity servers to\nverify third party identifiers such as phone numbers and email\naddresses</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"matrix.org\"\n  \"vector.im\"\n]",
                    "option_example": "[\n  \"matrix.org\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.key_server.database.connection_string",
                    "option_description": "<rendered-html><p>Database for the Key Server (for end-to-end encryption).</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:keyserver.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.media_api.base_path",
                    "option_description": "<rendered-html><p>Storage path for uploaded media.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/dendrite/media_store\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.media_api.database.connection_string",
                    "option_description": "<rendered-html><p>Database for the Media API.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:mediaapi.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.mscs.database.connection_string",
                    "option_description": "<rendered-html><p>Database for exerimental MSC\u2019s.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:mscs.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.relay_api.database.connection_string",
                    "option_description": "<rendered-html><p>Database for the Relay Server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:relayapi.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.room_server.database.connection_string",
                    "option_description": "<rendered-html><p>Database for the Room Server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:roomserver.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.sync_api.database.connection_string",
                    "option_description": "<rendered-html><p>Database for the Sync API.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:syncserver.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.sync_api.search.enable",
                    "option_description": "<rendered-html><p>Whether to enable Dendrite\u2019s full-text search engine.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.sync_api.search.index_path",
                    "option_description": "<rendered-html><p>The path the search index will be created in.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/dendrite/searchindex\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.sync_api.search.language",
                    "option_description": "<rendered-html><p>The language most likely to be used on the server - used when\nindexing, to ensure the returned results match expectations. A full list\nof possible languages can be found at <a\nhref=\"https://github.com/blevesearch/bleve/tree/master/analysis/lang\">https://github.com/blevesearch/bleve/tree/master/analysis/lang</a></p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"en\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.user_api.account_database.connection_string",
                    "option_description": "<rendered-html><p>Database for the User API, accounts.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:userapi_accounts.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.settings.user_api.device_database.connection_string",
                    "option_description": "<rendered-html><p>Database for the User API, devices.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"file:userapi_devices.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.tlsCert",
                    "option_description": "<rendered-html><p>The path to the TLS certificate.</p>\n<pre><code>  nix-shell -p dendrite --command &quot;generate-keys --tls-cert server.crt --tls-key server.key&quot;</code></pre>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/lib/dendrite/server.cert\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/matrix/dendrite.nix",
                    "option_name": "services.dendrite.tlsKey",
                    "option_description": "<rendered-html><p>The path to the TLS key.</p>\n<pre><code>  nix-shell -p dendrite --command &quot;generate-keys --tls-cert server.crt --tls-key server.key&quot;</code></pre>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/lib/dendrite/server.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktop-managers/lomiri.nix",
                    "option_name": "services.desktopManager.lomiri.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Lomiri graphical shell (formerly known as\nUnity8) .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktop-managers/plasma6.nix",
                    "option_name": "services.desktopManager.plasma6.enable",
                    "option_description": "<rendered-html><p>Enable the Plasma 6 (KDE 6) desktop environment.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktop-managers/plasma6.nix",
                    "option_name": "services.desktopManager.plasma6.enableQt5Integration",
                    "option_description": "<rendered-html><p>Enable Qt 5 integration (theming, etc). Disable for a pure Qt 6\nsystem.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktop-managers/plasma6.nix",
                    "option_name": "services.desktopManager.plasma6.notoPackage",
                    "option_description": "<rendered-html><p>The Noto fonts - used for UI by default package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.noto-fonts",
                    "option_example": "noto-fonts-lgc-plus",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/devmon.nix",
                    "option_name": "services.devmon.enable",
                    "option_description": "<rendered-html><p>Whether to enable devmon, an automatic device mounting daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/devpi-server.nix",
                    "option_name": "services.devpi-server.enable",
                    "option_description": "<rendered-html><p>Whether to enable Devpi Server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/devpi-server.nix",
                    "option_name": "services.devpi-server.host",
                    "option_description": "<rendered-html><p>domain/ip address to listen on</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/devpi-server.nix",
                    "option_name": "services.devpi-server.openFirewall",
                    "option_description": "<rendered-html><p>Whether to enable opening the default ports in the firewall for Devpi\nServer.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/devpi-server.nix",
                    "option_name": "services.devpi-server.package",
                    "option_description": "<rendered-html><p>The devpi-server package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.devpi-server",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/devpi-server.nix",
                    "option_name": "services.devpi-server.port",
                    "option_description": "<rendered-html><p>The port on which Devpi Server will listen.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3141",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/devpi-server.nix",
                    "option_name": "services.devpi-server.primaryUrl",
                    "option_description": "<rendered-html><p>Url for the primary node. Required option for replica nodes.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/devpi-server.nix",
                    "option_name": "services.devpi-server.replica",
                    "option_description": "<rendered-html><p>Run node as a replica. Requires the secretFile option and the\nprimaryUrl to be enabled.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/devpi-server.nix",
                    "option_name": "services.devpi-server.secretFile",
                    "option_description": "<rendered-html><p>Path to a shared secret file used for synchronization, Required for\nall nodes in a replica/primary setup.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dex.nix",
                    "option_name": "services.dex.enable",
                    "option_description": "<rendered-html><p>Whether to enable the OpenID Connect and OAuth2 identity\nprovider.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dex.nix",
                    "option_name": "services.dex.environmentFile",
                    "option_description": "<rendered-html><p>Environment file (see <code>systemd.exec(5)</code> \u201cEnvironmentFile=\u201d\nsection for the syntax) to define variables for dex. This option can be\nused to safely include secret keys into the dex configuration.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dex.nix",
                    "option_name": "services.dex.settings",
                    "option_description": "<rendered-html><p>The available options can be found in <a\nhref=\"https://github.com/dexidp/dex/blob/v2.40.0/config.yaml.dist\">the\nexample configuration</a>.</p>\n<p>It\u2019s also possible to refer to environment variables (defined in <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.dex.environmentFile&amp;query=services.dex.environmentFile\">services.dex.environmentFile</a>)\nusing the syntax <code>$VARIABLE_NAME</code>.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": "{\n  # External url\n  issuer = \"http://127.0.0.1:5556/dex\";\n  storage = {\n    type = \"postgres\";\n    config.host = \"/var/run/postgres\";\n  };\n  web = {\n    http = \"127.0.0.1:5556\";\n  };\n  enablePasswordDB = true;\n  staticClients = [\n    {\n      id = \"oidcclient\";\n      name = \"Client\";\n      redirectURIs = [ \"https://example.com/callback\" ];\n      secretFile = \"/etc/dex/oidcclient\"; # The content of `secretFile` will be written into to the config as `secret`.\n    }\n  ];\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dgraph.nix",
                    "option_name": "services.dgraph.alpha.host",
                    "option_description": "<rendered-html><p>The host which dgraph alpha will be run on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dgraph.nix",
                    "option_name": "services.dgraph.alpha.port",
                    "option_description": "<rendered-html><p>The port which to run dgraph alpha on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "7080",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dgraph.nix",
                    "option_name": "services.dgraph.enable",
                    "option_description": "<rendered-html><p>Whether to enable Dgraph native GraphQL database with a graph\nbackend.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dgraph.nix",
                    "option_name": "services.dgraph.package",
                    "option_description": "<rendered-html><p>The dgraph package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.dgraph",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dgraph.nix",
                    "option_name": "services.dgraph.settings",
                    "option_description": "<rendered-html><p>Contents of the dgraph config. For more details see <a\nhref=\"https://dgraph.io/docs/deploy/config\">https://dgraph.io/docs/deploy/config</a></p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dgraph.nix",
                    "option_name": "services.dgraph.zero.host",
                    "option_description": "<rendered-html><p>The host which dgraph zero will be run on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dgraph.nix",
                    "option_name": "services.dgraph.zero.port",
                    "option_description": "<rendered-html><p>The port which to run dgraph zero on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5080",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/dictd.nix",
                    "option_name": "services.dictd.DBs",
                    "option_description": "<rendered-html><p>List of databases to make available.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "with pkgs.dictdDBs; [ wiktionary wordnet ]",
                    "option_example": "[ pkgs.dictdDBs.nld2eng ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/dictd.nix",
                    "option_name": "services.dictd.enable",
                    "option_description": "<rendered-html><p>Whether to enable the DICT.org dictionary server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.allsquash",
                    "option_description": "<rendered-html><p>Remap all users to \u201cnobody\u201d. The attaching user need not be present\nin the password file.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.authRequired",
                    "option_description": "<rendered-html><p>Allow clients to connect without authentication, i.e. without a valid\nMUNGE credential.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.enable",
                    "option_description": "<rendered-html><p>Whether to enable the diod 9P file server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.exportall",
                    "option_description": "<rendered-html><p>Export all file systems listed in /proc/mounts. If new file systems\nare mounted after diod has started, they will become immediately\nmountable. If there is a duplicate entry for a file system in the\nexports list, any options listed in the exports entry will apply.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.exportopts",
                    "option_description": "<rendered-html><p>Establish a default set of export options. These are overridden, not\nappended to, by opts attributes in an \u201cexports\u201d entry.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.exports",
                    "option_description": "<rendered-html><p>List the file systems that clients will be allowed to mount. All\npaths should be fully qualified. The exports table can include two types\nof element: a string element (as above), or an alternate table element\nform { path=\u201c/path\u201d, opts=\u201cro\u201d }. In the alternate form, the (optional)\nopts attribute is a comma-separated list of export options. The two\ntable element forms can be mixed in the exports table. Note that\nalthough diod will not traverse file system boundaries for a given mount\ndue to inode uniqueness constraints, subdirectories of a file system can\nbe separately exported.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration options for diod.conf.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.listen",
                    "option_description": "<rendered-html><p>[ \u201cIP:PORT\u201d [,\u201cIP:PORT\u201d,\u2026] ] List the interfaces and ports that diod\nshould listen on.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"0.0.0.0:564\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.logdest",
                    "option_description": "<rendered-html><p>Set the destination for logging. The value has the form of\n\u201csyslog:facility:level\u201d or \u201cfilename\u201d.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"syslog:daemon:err\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.nwthreads",
                    "option_description": "<rendered-html><p>Sets the (fixed) number of worker threads created to handle 9P\nrequests for a unique aname.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "16",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.squashuser",
                    "option_description": "<rendered-html><p>Change the squash user. The squash user must be present in the\npassword file.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"nobody\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.statfsPassthru",
                    "option_description": "<rendered-html><p>This option configures statfs to return the host file system\u2019s type\nrather than V9FS_MAGIC.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/diod.nix",
                    "option_name": "services.diod.userdb",
                    "option_description": "<rendered-html><p>This option disables password/group lookups. It allows any uid to\nattach and assumes gid=uid, and supplementary groups contain only the\nprimary gid.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.admin.email",
                    "option_description": "<rendered-html><p>The admin user email address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"admin@example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.admin.fullName",
                    "option_description": "<rendered-html><p>The admin user\u2019s full name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.admin.passwordFile",
                    "option_description": "<rendered-html><p>A path to a file containing the admin user\u2019s password.</p>\n<p>This should be a string, not a nix path, since nix paths are copied\ninto the world-readable nix store.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.admin.skipCreate",
                    "option_description": "<rendered-html><p>Do not create the admin account, instead rely on other existing admin\naccounts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.admin.username",
                    "option_description": "<rendered-html><p>The admin user username.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"admin\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.backendSettings",
                    "option_description": "<rendered-html><p>Additional settings to put in the <code class=\"interpreted-text\"\nrole=\"file\">discourse.conf</code> file.</p>\n<p>Look in the <a\nhref=\"https://github.com/discourse/discourse/blob/master/config/discourse_defaults.conf\">discourse_defaults.conf</a>\nfile in the upstream distribution to find available options.</p>\n<p>Setting an option to <code>null</code> means \u201cdefine variable, but\nleave right-hand side empty\u201d.</p>\n</rendered-html>",
                    "option_type": "attribute set of (null or string or signed integer or boolean or floating point number)",
                    "option_default": "{ }",
                    "option_example": "{\n  max_reqs_per_ip_per_minute = 300;\n  max_reqs_per_ip_per_10_seconds = 60;\n  max_asset_reqs_per_ip_per_10_seconds = 250;\n  max_reqs_per_ip_mode = \"warn+block\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.database.createLocally",
                    "option_description": "<rendered-html><p>Whether a database should be automatically created on the local host.\nSet this to <code>false</code> if you plan on provisioning a local\ndatabase yourself. This has no effect if <code class=\"interpreted-text\"\nrole=\"option\">services.discourse.database.host</code> is customized.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHTSd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.database.host",
                    "option_description": "<rendered-html><p>Discourse database hostname. <code>null</code> means \u201cprefer local\nunix socket connection\u201d.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.database.ignorePostgresqlVersion",
                    "option_description": "<rendered-html><p>Whether to allow other versions of PostgreSQL than the recommended\none. Only effective when <code class=\"interpreted-text\"\nrole=\"option\">services.discourse.database.createLocally</code> is\nenabled.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.database.name",
                    "option_description": "<rendered-html><p>Discourse database name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"discourse\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.database.passwordFile",
                    "option_description": "<rendered-html><p>File containing the Discourse database user password.</p>\n<p>This should be a string, not a nix path, since nix paths are copied\ninto the world-readable nix store.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.database.pool",
                    "option_description": "<rendered-html><p>Database connection pool size.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "8",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.database.username",
                    "option_description": "<rendered-html><p>Discourse database user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"discourse\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.enable",
                    "option_description": "<rendered-html><p>Whether to enable Discourse, an open source discussion platform.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.enableACME",
                    "option_description": "<rendered-html><p>Whether an ACME certificate should be used to secure connections to\nthe server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "<rendered-html><p><code>true</code>, unless <code class=\"interpreted-text\"\nrole=\"option\">services.discourse.sslCertificate</code> and <code\nclass=\"interpreted-text\"\nrole=\"option\">services.discourse.sslCertificateKey</code> are set.</p>\n</rendered-html>",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.hostname",
                    "option_description": "<rendered-html><p>The hostname to serve Discourse on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "config.networking.fqdnOrHostName",
                    "option_example": "\"discourse.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.contactEmailAddress",
                    "option_description": "<rendered-html><p>Email address of key contact responsible for this site. Used for\ncritical notifications, as well as on the <code>/about</code> contact\nform for urgent matters.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.incoming.apiKeyFile",
                    "option_description": "<rendered-html><p>A file containing the Discourse API key used to add posts and\nmessages from mail. If left at its default value <code>null</code>, one\nwill be automatically generated.</p>\n<p>This should be a string, not a nix path, since nix paths are copied\ninto the world-readable nix store.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.incoming.enable",
                    "option_description": "<rendered-html><p>Whether to set up Postfix to receive incoming mail.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.incoming.mailReceiverPackage",
                    "option_description": "<rendered-html><p>The discourse-mail-receiver package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.discourse-mail-receiver",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.incoming.replyEmailAddress",
                    "option_description": "<rendered-html><p>Template for reply by email incoming email address, for example:\n%{reply_key}@reply.example.com or replies+%{reply_key}@example.com</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"%{reply_key}@${config.services.discourse.hostname}\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.notificationEmailAddress",
                    "option_description": "<rendered-html><p>The <code>from:</code> email address used when sending all essential\nsystem emails. The domain specified here must have SPF, DKIM and reverse\nPTR records set correctly for email to arrive.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${if config.services.discourse.mail.incoming.enable then \"notifications\" else \"noreply\"}@${config.services.discourse.hostname}\"\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.outgoing.authentication",
                    "option_description": "<rendered-html><p>Authentication type to use, see <a\nhref=\"https://api.rubyonrails.org/classes/ActionMailer/Base.html\">https://api.rubyonrails.org/classes/ActionMailer/Base.html</a></p>\n</rendered-html>",
                    "option_type": "null or one of \"plain\", \"login\", \"cram_md5\"",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.outgoing.domain",
                    "option_description": "<rendered-html><p>HELO domain to use for outgoing mail.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "config.services.discourse.hostname",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.outgoing.enableStartTLSAuto",
                    "option_description": "<rendered-html><p>Whether to try to use StartTLS.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.outgoing.forceTLS",
                    "option_description": "<rendered-html><p>Force implicit TLS as per RFC 8314 3.3.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.outgoing.opensslVerifyMode",
                    "option_description": "<rendered-html><p>How OpenSSL checks the certificate, see <a\nhref=\"https://api.rubyonrails.org/classes/ActionMailer/Base.html\">https://api.rubyonrails.org/classes/ActionMailer/Base.html</a></p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"peer\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.outgoing.passwordFile",
                    "option_description": "<rendered-html><p>A file containing the password of the SMTP server account.</p>\n<p>This should be a string, not a nix path, since nix paths are copied\ninto the world-readable nix store.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.outgoing.port",
                    "option_description": "<rendered-html><p>The port of the SMTP server Discourse should use to send email.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "25",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.outgoing.serverAddress",
                    "option_description": "<rendered-html><p>The address of the SMTP server Discourse should use to send\nemail.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.mail.outgoing.username",
                    "option_description": "<rendered-html><p>The username of the SMTP server.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.nginx.enable",
                    "option_description": "<rendered-html><p>Whether an <code>nginx</code> virtual host should be set up to serve\nDiscourse. Only disable if you\u2019re planning to use a different web\nserver, which is not recommended.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.package",
                    "option_description": "<rendered-html><p>The discourse package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.discourse",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.plugins",
                    "option_description": "<rendered-html><p>Plugins to install as part of Discourse, expressed as a list of\nderivations.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "with config.services.discourse.package.plugins; [\n  discourse-canned-replies\n  discourse-github\n];\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.redis.dbNumber",
                    "option_description": "<rendered-html><p>Redis database number.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.redis.host",
                    "option_description": "<rendered-html><p>Redis server hostname.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.redis.passwordFile",
                    "option_description": "<rendered-html><p>File containing the Redis password.</p>\n<p>This should be a string, not a nix path, since nix paths are copied\ninto the world-readable nix store.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.redis.useSSL",
                    "option_description": "<rendered-html><p>Connect to Redis with SSL.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.discourse.redis.host != \"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.secretKeyBaseFile",
                    "option_description": "<rendered-html><p>The path to a file containing the <code>secret_key_base</code>\nsecret.</p>\n<p>Discourse uses <code>secret_key_base</code> to encrypt the cookie\nstore, which contains session data, and to digest user auth tokens.</p>\n<p>Needs to be a 64 byte long string of hexadecimal characters. You can\ngenerate one by running</p>\n<pre><code>openssl rand -hex 64 &gt;/path/to/secret_key_base_file</code></pre>\n<p>This should be a string, not a nix path, since nix paths are copied\ninto the world-readable nix store.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/secret_key_base\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.sidekiqProcesses",
                    "option_description": "<rendered-html><p>How many Sidekiq processes should be spawned.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.siteSettings",
                    "option_description": "<rendered-html><p>Discourse site settings. These are the settings that can be changed\nfrom the UI. This only defines their default values: they can still be\noverridden from the UI.</p>\n<p>Available settings can be found by looking in the <a\nhref=\"https://github.com/discourse/discourse/blob/master/config/site_settings.yml\">site_settings.yml</a>\nfile of the upstream distribution. To find a setting\u2019s path, you only\nneed to care about the first two levels; i.e. its category and name. See\nthe example.</p>\n<p>Settings containing secret data should be set to an attribute set\ncontaining the attribute <code>_secret</code> - a string pointing to a\nfile containing the value the option should be set to. See the example\nto get a better picture of this: in the resulting <code\nclass=\"interpreted-text\"\nrole=\"file\">config/nixos_site_settings.json</code> file, the\n<code>login.github_client_secret</code> key will be set to the contents\nof the <code class=\"interpreted-text\"\nrole=\"file\">/run/keys/discourse_github_client_secret</code> file.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": "{\n  required = {\n    title = \"My Cats\";\n    site_description = \"Discuss My Cats (and be nice plz)\";\n  };\n  login = {\n    enable_github_logins = true;\n    github_client_id = \"a2f6dfe838cb3206ce20\";\n    github_client_secret._secret = /run/keys/discourse_github_client_secret;\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.sslCertificate",
                    "option_description": "<rendered-html><p>The path to the server SSL certificate. Set this to enable SSL.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/ssl.cert\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.sslCertificateKey",
                    "option_description": "<rendered-html><p>The path to the server SSL certificate key. Set this to enable\nSSL.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/ssl.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/discourse.nix",
                    "option_name": "services.discourse.unicornTimeout",
                    "option_description": "<rendered-html><p>Time in seconds before a request to Unicorn times out.</p>\n<p>This can be raised if the system Discourse is running on is too slow\nto handle many requests within 30 seconds.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "30",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/disnix.nix",
                    "option_name": "services.disnix.enable",
                    "option_description": "<rendered-html><p>Whether to enable Disnix.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/disnix.nix",
                    "option_name": "services.disnix.enableMultiUser",
                    "option_description": "<rendered-html><p>Whether to support multi-user mode by enabling the Disnix D-Bus\nservice</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/disnix.nix",
                    "option_name": "services.disnix.enableProfilePath",
                    "option_description": "<rendered-html><p>Whether to enable exposing the Disnix profiles in the system\u2019s\nPATH.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/disnix.nix",
                    "option_name": "services.disnix.package",
                    "option_description": "<rendered-html><p>The disnix package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.disnix",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/disnix.nix",
                    "option_name": "services.disnix.profiles",
                    "option_description": "<rendered-html><p>Names of the Disnix profiles to expose in the system\u2019s PATH</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"default\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/disnix.nix",
                    "option_name": "services.disnix.useWebServiceInterface",
                    "option_description": "<rendered-html><p>Whether to enable the DisnixWebService interface running on Apache\nTomcat.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.autoLogin",
                    "option_description": "<rendered-html><p>Auto login configuration attrset.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.autoLogin.enable",
                    "option_description": "<rendered-html><p>Automatically log in as <code class=\"interpreted-text\"\nrole=\"option\">autoLogin.user</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.displayManager.autoLogin.user != null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.autoLogin.user",
                    "option_description": "<rendered-html><p>User to be used for the automatic login.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.defaultSession",
                    "option_description": "<rendered-html><p>Graphical session to pre-select in the session chooser (only\neffective for GDM, LightDM and SDDM).</p>\n<p>On GDM, LightDM and SDDM, it will also be used as a session for\nauto-login.</p>\n</rendered-html>",
                    "option_type": "session name",
                    "option_default": "null",
                    "option_example": "\"gnome\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.enable",
                    "option_description": "<rendered-html><p>Whether to enable systemd\u2019s display-manager service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.environment",
                    "option_description": "<rendered-html><p>Additional environment variables needed by the display manager.</p>\n</rendered-html>",
                    "option_type": "attribute set of unspecified value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.execCmd",
                    "option_description": "<rendered-html><p>Command to start the display manager.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"${pkgs.lightdm}/bin/lightdm\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.hiddenUsers",
                    "option_description": "<rendered-html><p>A list of users which will not be shown in the display manager.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"nobody\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.logToFile",
                    "option_description": "<rendered-html><p>Whether the display manager redirects the output of the session\nscript to <code class=\"interpreted-text\"\nrole=\"file\">~/.xsession-errors</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.logToJournal",
                    "option_description": "<rendered-html><p>Whether the display manager redirects the output of the session\nscript to the systemd journal.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.preStart",
                    "option_description": "<rendered-html><p>Script executed before the display manager is started.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"rm -f /var/log/my-display-manager.log\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.autoLogin.minimumUid",
                    "option_description": "<rendered-html><p>Minimum user ID for auto-login user.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "1000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.autoLogin.relogin",
                    "option_description": "<rendered-html><p>If true automatic login will kick in again on session exit (logout),\notherwise it will only log in automatically when the display-manager is\nstarted.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.autoNumlock",
                    "option_description": "<rendered-html><p>Enable numlock at login.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.enable",
                    "option_description": "<rendered-html><p>Whether to enable sddm as the display manager.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.enableHidpi",
                    "option_description": "<rendered-html><p>Whether to enable automatic HiDPI mode.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.extraPackages",
                    "option_description": "<rendered-html><p>Extra Qt plugins / QML libraries to add to the environment.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "\"[]\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.package",
                    "option_description": "<rendered-html><p>The sddm package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.plasma5Packages.sddm",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.settings",
                    "option_description": "<rendered-html><p>Extra settings merged in and overwriting defaults in sddm.conf.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": "{ }",
                    "option_example": "{\n  Autologin = {\n    Session = \"plasma.desktop\";\n    User = \"john\";\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.setupScript",
                    "option_description": "<rendered-html><p>A script to execute when starting the display server. DEPRECATED,\nplease use <code class=\"interpreted-text\"\nrole=\"option\">services.xserver.displayManager.setupCommands</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "''\n  # workaround for using NVIDIA Optimus without Bumblebee\n  xrandr --setprovideroutputsource modesetting NVIDIA-0\n  xrandr --auto\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.stopScript",
                    "option_description": "<rendered-html><p>A script to execute when stopping the display server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.theme",
                    "option_description": "<rendered-html><p>Greeter theme to use.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.wayland.compositor",
                    "option_description": "<rendered-html><p>The compositor to use: kwin, weston</p>\n</rendered-html>",
                    "option_type": "one of \"kwin\", \"weston\"",
                    "option_default": "\"weston\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/sddm.nix",
                    "option_name": "services.displayManager.sddm.wayland.enable",
                    "option_description": "<rendered-html><p>Whether to enable experimental Wayland support.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/display-managers/default.nix",
                    "option_name": "services.displayManager.sessionPackages",
                    "option_description": "<rendered-html><p>A list of packages containing x11 or wayland session files to be\npassed to the display manager.</p>\n</rendered-html>",
                    "option_type": "list of package with provided sessions",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.allowedClients",
                    "option_description": "<rendered-html><p>Client IPs which are allowed to connect to distccd in CIDR\nnotation.</p>\n<p>Anyone who can connect to the distccd server can run arbitrary\ncommands on that system as the distcc user, therefore you should use\nthis judiciously.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"127.0.0.1\"\n]",
                    "option_example": "[\n  \"127.0.0.1\"\n  \"192.168.0.0/24\"\n  \"10.0.0.0/24\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.enable",
                    "option_description": "<rendered-html><p>Whether to enable distccd, a distributed C/C++ compiler.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.jobTimeout",
                    "option_description": "<rendered-html><p>Maximum duration, in seconds, of a single compilation request.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.logLevel",
                    "option_description": "<rendered-html><p>Set the minimum severity of error that will be included in the log\nfile. Useful if you only want to see error messages rather than an entry\nfor each connection.</p>\n</rendered-html>",
                    "option_type": "null or one of \"critical\", \"error\", \"warning\", \"notice\", \"info\", \"debug\"",
                    "option_default": "\"warning\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.maxJobs",
                    "option_description": "<rendered-html><p>Maximum number of tasks distccd should execute at any time.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.nice",
                    "option_description": "<rendered-html><p>Niceness of the compilation tasks.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.openFirewall",
                    "option_description": "<rendered-html><p>Opens the specified TCP port for distcc.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.package",
                    "option_description": "<rendered-html><p>The distcc package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.distcc",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.port",
                    "option_description": "<rendered-html><p>The TCP port which distccd will listen on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3632",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.stats.enable",
                    "option_description": "<rendered-html><p>Whether to enable statistics reporting via HTTP server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.stats.port",
                    "option_description": "<rendered-html><p>The TCP port which the distccd statistics HTTP server will listen\non.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3633",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/distccd.nix",
                    "option_name": "services.distccd.zeroconf",
                    "option_description": "<rendered-html><p>Whether to register via mDNS/DNS-SD</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dkimproxy-out.nix",
                    "option_name": "services.dkimproxy-out.domains",
                    "option_description": "<rendered-html><p>List of domains DKIMproxy can sign for.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": null,
                    "option_example": "[\n  \"example.org\"\n  \"example.com\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dkimproxy-out.nix",
                    "option_name": "services.dkimproxy-out.enable",
                    "option_description": "<rendered-html><p>Whether to enable dkimproxy_out.</p>\n<p>Note that a key will be auto-generated, and can be found in\n/var/lib/dkimproxy-out.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dkimproxy-out.nix",
                    "option_name": "services.dkimproxy-out.keySize",
                    "option_description": "<rendered-html><p>Size of the RSA key to use to sign outgoing emails. Note that the\nmaximum mandatorily verified as per RFC6376 is 2048.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "2048",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dkimproxy-out.nix",
                    "option_name": "services.dkimproxy-out.listen",
                    "option_description": "<rendered-html><p>Address:port DKIMproxy should listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"127.0.0.1:10027\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dkimproxy-out.nix",
                    "option_name": "services.dkimproxy-out.relay",
                    "option_description": "<rendered-html><p>Address:port DKIMproxy should forward mail to.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"127.0.0.1:10028\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dkimproxy-out.nix",
                    "option_name": "services.dkimproxy-out.selector",
                    "option_description": "<rendered-html><p>The selector to use for DKIM key identification.</p>\n<p>For example, if \u2018selector1\u2019 is used here, then for each domain\n\u2018example.org\u2019 given in <code>domain</code>,\n\u2018selector1._domainkey.example.org\u2019 should contain the TXT record\nindicating the public key is the one in\n/var/lib/dkimproxy-out/public.key: \u201cv=DKIM1; t=s; p=[THE PUBLIC\nKEY]\u201d.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"selector1\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/dleyna-renderer.nix",
                    "option_name": "services.dleyna-renderer.enable",
                    "option_description": "<rendered-html><p>Whether to enable dleyna-renderer service, a DBus service for\nhandling DLNA renderers.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/dleyna-server.nix",
                    "option_name": "services.dleyna-server.enable",
                    "option_description": "<rendered-html><p>Whether to enable dleyna-server service, a DBus service for handling\nDLNA servers.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscache.nix",
                    "option_name": "services.dnscache.clientIps",
                    "option_description": "<rendered-html><p>Client IP addresses (or prefixes) from which to accept\nconnections.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"127.0.0.1\"\n]",
                    "option_example": "[\n  \"192.168\"\n  \"172.23.75.82\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscache.nix",
                    "option_name": "services.dnscache.domainServers",
                    "option_description": "<rendered-html><p>Table of {hostname: server} pairs to use as authoritative servers for\nhosts (and subhosts). If entry for @ is not specified predefined list of\nroot servers is used.</p>\n</rendered-html>",
                    "option_type": "attribute set of list of string",
                    "option_default": "{ }",
                    "option_example": "{\n  \"@\" = [\"8.8.8.8\" \"8.8.4.4\"];\n  \"example.com\" = [\"192.168.100.100\"];\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscache.nix",
                    "option_name": "services.dnscache.enable",
                    "option_description": "<rendered-html><p>Whether to run the dnscache caching dns server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscache.nix",
                    "option_name": "services.dnscache.forwardOnly",
                    "option_description": "<rendered-html><p>Whether to treat root servers (for @) as caching servers, requesting\naddresses the same way a client does. This is needed if you want to use\ne.g. Google DNS as your upstream DNS.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscache.nix",
                    "option_name": "services.dnscache.ip",
                    "option_description": "<rendered-html><p>IP address on which to listen for connections.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-proxy2.nix",
                    "option_name": "services.dnscrypt-proxy2.configFile",
                    "option_description": "<rendered-html><p>Path to TOML config file. See: <a\nhref=\"https://github.com/DNSCrypt/dnscrypt-proxy/blob/master/dnscrypt-proxy/example-dnscrypt-proxy.toml\">https://github.com/DNSCrypt/dnscrypt-proxy/blob/master/dnscrypt-proxy/example-dnscrypt-proxy.toml</a>\nIf this option is set, it will override any configuration done in\noptions.services.dnscrypt-proxy2.settings.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "<rendered-html><p>TOML file generated from <code class=\"interpreted-text\"\nrole=\"option\">services.dnscrypt-proxy2.settings</code></p>\n</rendered-html>",
                    "option_example": "\"/etc/dnscrypt-proxy/dnscrypt-proxy.toml\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-proxy2.nix",
                    "option_name": "services.dnscrypt-proxy2.enable",
                    "option_description": "<rendered-html><p>Whether to enable dnscrypt-proxy2.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-proxy2.nix",
                    "option_name": "services.dnscrypt-proxy2.settings",
                    "option_description": "<rendered-html><p>Attrset that is converted and passed as TOML config file. For\navailable params, see: <a\nhref=\"https://github.com/DNSCrypt/dnscrypt-proxy/blob/2.1.5/dnscrypt-proxy/example-dnscrypt-proxy.toml\">https://github.com/DNSCrypt/dnscrypt-proxy/blob/2.1.5/dnscrypt-proxy/example-dnscrypt-proxy.toml</a></p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": "{\n  sources.public-resolvers = {\n    urls = [ \"https://download.dnscrypt.info/resolvers-list/v2/public-resolvers.md\" ];\n    cache_file = \"public-resolvers.md\";\n    minisign_key = \"RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3\";\n    refresh_delay = 72;\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-proxy2.nix",
                    "option_name": "services.dnscrypt-proxy2.upstreamDefaults",
                    "option_description": "<rendered-html><p>Whether to base the config declared in <code class=\"interpreted-text\"\nrole=\"option\">services.dnscrypt-proxy2.settings</code> on the upstream\nexample config (<a\nhref=\"https://github.com/DNSCrypt/dnscrypt-proxy/blob/master/dnscrypt-proxy/example-dnscrypt-proxy.toml\">https://github.com/DNSCrypt/dnscrypt-proxy/blob/master/dnscrypt-proxy/example-dnscrypt-proxy.toml</a>)</p>\n<p>Disable this if you want to declare your dnscrypt config from\nscratch.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.address",
                    "option_description": "<rendered-html><p>The DNSCrypt wrapper will bind to this IP address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.enable",
                    "option_description": "<rendered-html><p>Whether to enable DNSCrypt wrapper.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.keys.checkInterval",
                    "option_description": "<rendered-html><p>The time interval (in minutes) between key expiration checks.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1440",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.keys.expiration",
                    "option_description": "<rendered-html><p>The duration (in days) of the time-limited secret key. This will be\nautomatically rotated before expiration.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "30",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.port",
                    "option_description": "<rendered-html><p>The DNSCrypt wrapper will listen for DNS queries on this port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5353",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.providerKey.public",
                    "option_description": "<rendered-html><p>The filepath to the provider public key. If not given a new provider\nkey pair will be generated on the first run.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/secrets/public.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.providerKey.secret",
                    "option_description": "<rendered-html><p>The filepath to the provider secret key. If not given a new provider\nkey pair will be generated on the first run.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/secrets/secret.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.providerName",
                    "option_description": "<rendered-html><p>The name that will be given to this DNSCrypt resolver. Note: the\nresolver name must start with <code>2.dnscrypt-cert.</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"2.dnscrypt-cert.${config.networking.hostName}\"",
                    "option_example": "\"2.dnscrypt-cert.myresolver\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.upstream.address",
                    "option_description": "<rendered-html><p>The IP address of the upstream DNS server DNSCrypt will \u201cwrap\u201d.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnscrypt-wrapper.nix",
                    "option_name": "services.dnscrypt-wrapper.upstream.port",
                    "option_description": "<rendered-html><p>The port of the upstream DNS server DNSCrypt will \u201cwrap\u201d.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "53",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.dnscrypt.certLifetime",
                    "option_description": "<rendered-html><p>The lifetime (in minutes) of the resolver certificate. This will be\nautomatically rotated before expiration.</p>\n</rendered-html>",
                    "option_type": "positive integer, meaning >0",
                    "option_default": "15",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.dnscrypt.enable",
                    "option_description": "<rendered-html><p>Whether to enable a DNSCrypt endpoint to dnsdist.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.dnscrypt.listenAddress",
                    "option_description": "<rendered-html><p>Listen IP address of the endpoint</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.dnscrypt.listenPort",
                    "option_description": "<rendered-html><p>Listen port of the endpoint</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "443",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.dnscrypt.providerKey",
                    "option_description": "<rendered-html><p>The filepath to the provider secret key. If not given a new provider\nkey pair will be generated in /var/lib/dnsdist on the first run.</p>\n<div class=\"note\">\n<p>The file must be readable by the dnsdist user/group.</p>\n</div>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.dnscrypt.providerName",
                    "option_description": "<rendered-html><p>The name that will be given to this DNSCrypt resolver.</p>\n<div class=\"note\">\n<p>The provider name must start with <code>2.dnscrypt-cert.</code>.</p>\n</div>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "2.dnscrypt-cert.${config.networking.hostName}",
                    "option_example": "\"2.dnscrypt-cert.myresolver\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.enable",
                    "option_description": "<rendered-html><p>Whether to enable dnsdist domain name server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.extraConfig",
                    "option_description": "<rendered-html><p>Extra lines to be added verbatim to dnsdist.conf.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.listenAddress",
                    "option_description": "<rendered-html><p>Listen IP address</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsdist.nix",
                    "option_name": "services.dnsdist.listenPort",
                    "option_description": "<rendered-html><p>Listen port</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "53",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsmasq.nix",
                    "option_name": "services.dnsmasq.alwaysKeepRunning",
                    "option_description": "<rendered-html><p>If enabled, systemd will always respawn dnsmasq even if shut down\nmanually. The default, disabled, will only restart it on error.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsmasq.nix",
                    "option_name": "services.dnsmasq.enable",
                    "option_description": "<rendered-html><p>Whether to run dnsmasq.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsmasq.nix",
                    "option_name": "services.dnsmasq.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration directives that should be added to\n<code>dnsmasq.conf</code>.</p>\n<p>This option is deprecated, please use <code class=\"interpreted-text\"\nrole=\"option\">settings</code> instead.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsmasq.nix",
                    "option_name": "services.dnsmasq.package",
                    "option_description": "<rendered-html><p>The dnsmasq package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.dnsmasq",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsmasq.nix",
                    "option_name": "services.dnsmasq.resolveLocalQueries",
                    "option_description": "<rendered-html><p>Whether dnsmasq should resolve local queries (i.e. add 127.0.0.1 to\n/etc/resolv.conf).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsmasq.nix",
                    "option_name": "services.dnsmasq.settings",
                    "option_description": "<rendered-html><p>Configuration of dnsmasq. Lists get added one value per line (empty\nlists and false values don\u2019t get added, though false values get turned\nto comments). Gets merged with</p>\n<pre><code>{\n  dhcp-leasefile = &quot;/var/lib/dnsmasq/dnsmasq.leases&quot;;\n  conf-file = optional cfg.resolveLocalQueries &quot;/etc/dnsmasq-conf.conf&quot;;\n  resolv-file = optional cfg.resolveLocalQueries &quot;/etc/dnsmasq-resolv.conf&quot;;\n}</code></pre>\n</rendered-html>",
                    "option_type": "attribute set of (atom (null, bool, int, float or string) or a list of them for duplicate keys)",
                    "option_default": "{ }",
                    "option_example": "{\n  domain-needed = true;\n  dhcp-range = [ \"192.168.0.2,192.168.0.254\" ];\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsmasq.nix",
                    "option_name": "services.dnsmasq.settings.server",
                    "option_description": "<rendered-html><p>The DNS servers which dnsmasq should query.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"8.8.8.8\"\n  \"8.8.4.4\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsproxy.nix",
                    "option_name": "services.dnsproxy.enable",
                    "option_description": "<rendered-html><p>Whether to enable dnsproxy.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsproxy.nix",
                    "option_name": "services.dnsproxy.flags",
                    "option_description": "<rendered-html><p>A list of extra command-line flags to pass to dnsproxy. For details\non the available options, see <a\nhref=\"https://github.com/AdguardTeam/dnsproxy#usage\">https://github.com/AdguardTeam/dnsproxy#usage</a>.\nKeep in mind that options passed through command-line flags override\nconfig options.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--upstream=1.1.1.1:53\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsproxy.nix",
                    "option_name": "services.dnsproxy.package",
                    "option_description": "<rendered-html><p>The dnsproxy package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.dnsproxy",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/dnsproxy.nix",
                    "option_name": "services.dnsproxy.settings",
                    "option_description": "<rendered-html><p>Contents of the <code>config.yaml</code> config file. The\n<code>--config-path</code> argument will only be passed if this set is\nnot empty.</p>\n<p>See <a\nhref=\"https://github.com/AdguardTeam/dnsproxy/blob/master/config.yaml.dist\">https://github.com/AdguardTeam/dnsproxy/blob/master/config.yaml.dist</a>.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": "{\n  bootstrap = [\n    \"8.8.8.8:53\"\n  ];\n  listen-addrs = [\n    \"0.0.0.0\"\n  ];\n  listen-ports = [\n    53\n  ];\n  upstream = [\n    \"1.1.1.1:53\"\n  ];\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/do-agent.nix",
                    "option_name": "services.do-agent.enable",
                    "option_description": "<rendered-html><p>Whether to enable do-agent, the DigitalOcean droplet metrics\nagent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.configFile",
                    "option_description": "<rendered-html><p>Path to CNCF distribution config file.</p>\n<p>Setting this option will override any configuration applied by the\nextraConfig option.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "pkgs.writeText \"docker-registry-config.yml\" \"# my custom docker-registry-config.yml ...\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.enable",
                    "option_description": "<rendered-html><p>Whether to enable Docker Registry.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.enableDelete",
                    "option_description": "<rendered-html><p>Enable delete for manifests and blobs.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.enableGarbageCollect",
                    "option_description": "<rendered-html><p>Whether to enable garbage collect.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.enableRedisCache",
                    "option_description": "<rendered-html><p>Whether to enable redis as blob cache.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.extraConfig",
                    "option_description": "<rendered-html><p>Docker extra registry configuration via environment variables.</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.garbageCollectDates",
                    "option_description": "<rendered-html><p>Specification (in the format described by <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.time(7)</code></a>) of\nthe time at which the garbage collect will occur.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"daily\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.listenAddress",
                    "option_description": "<rendered-html><p>Docker registry host or ip to bind to.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.openFirewall",
                    "option_description": "<rendered-html><p>Opens the port used by the firewall.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.package",
                    "option_description": "<rendered-html><p>The docker-distribution package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.docker-distribution",
                    "option_example": "gitlab-container-registry",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.port",
                    "option_description": "<rendered-html><p>Docker registry port to bind to.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.redisPassword",
                    "option_description": "<rendered-html><p>Set redis password.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.redisUrl",
                    "option_description": "<rendered-html><p>Set redis host and port.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost:6379\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/docker-registry.nix",
                    "option_name": "services.dockerRegistry.storagePath",
                    "option_description": "<rendered-html><p>Docker registry storage path for the filesystem storage backend. Set\nto null to configure another backend via extraConfig.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "\"/var/lib/docker-registry\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.cert",
                    "option_description": "<rendered-html><p>The <code class=\"interpreted-text\" role=\"file\">cert.pem</code> file\nused for https.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.db",
                    "option_description": "<rendered-html><p>Database specific connection string for example:</p>\n<ul>\n<li>MySQL/Percona/MariaDB:\n<code>user:password@tcp(host:3306)/documize</code></li>\n<li>MySQLv8+:\n<code>user:password@tcp(host:3306)/documize?allowNativePasswords=true</code></li>\n<li>PostgreSQL:\n<code>host=localhost port=5432 dbname=documize user=admin password=secret sslmode=disable</code></li>\n<li>MSSQL:\n<code>sqlserver://username:password@localhost:1433?database=Documize</code>\nor\n<code>sqlserver://sa@localhost/SQLExpress?database=Documize</code></li>\n</ul>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.dbtype",
                    "option_description": "<rendered-html><p>Specify the database provider: <code>mysql</code>,\n<code>percona</code>, <code>mariadb</code>, <code>postgresql</code>,\n<code>sqlserver</code></p>\n</rendered-html>",
                    "option_type": "one of \"mysql\", \"percona\", \"mariadb\", \"postgresql\", \"sqlserver\"",
                    "option_default": "\"postgresql\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.enable",
                    "option_description": "<rendered-html><p>Whether to enable Documize Wiki.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.forcesslport",
                    "option_description": "<rendered-html><p>Redirect given http port number to TLS.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.key",
                    "option_description": "<rendered-html><p>The <code class=\"interpreted-text\" role=\"file\">key.pem</code> file\nused for https.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.location",
                    "option_description": "<rendered-html><p>reserved</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.offline",
                    "option_description": "<rendered-html><p>Set <code>true</code> for offline mode.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.package",
                    "option_description": "<rendered-html><p>The documize-community package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.documize-community",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.port",
                    "option_description": "<rendered-html><p>The http/https port number.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5001",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.salt",
                    "option_description": "<rendered-html><p>The salt string used to encode JWT tokens, if not set a random value\nwill be generated.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"3edIYV6c8B28b19fh\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/documize.nix",
                    "option_name": "services.documize.stateDirectoryName",
                    "option_description": "<rendered-html><p>The name of the directory below <code class=\"interpreted-text\"\nrole=\"file\">/var/lib/private</code> where documize runs in and stores,\nfor example, backups.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"documize\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/admin/docuum.nix",
                    "option_name": "services.docuum.deletionChunkSize",
                    "option_description": "<rendered-html><p>Removes specified quantity of images at a time.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": "10",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/admin/docuum.nix",
                    "option_name": "services.docuum.enable",
                    "option_description": "<rendered-html><p>Whether to enable docuum daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/admin/docuum.nix",
                    "option_name": "services.docuum.keep",
                    "option_description": "<rendered-html><p>Prevents deletion of images for which repository:tag matches the\nspecified regex.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"^my-image\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/admin/docuum.nix",
                    "option_name": "services.docuum.minAge",
                    "option_description": "<rendered-html><p>Sets the minimum age of images to be considered for deletion.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"1d\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/admin/docuum.nix",
                    "option_name": "services.docuum.threshold",
                    "option_description": "<rendered-html><p>Threshold for deletion in bytes, like <code>10 GB</code>,\n<code>10 GiB</code>, <code>10GB</code> or percentage-based thresholds\nlike <code>50%</code></p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"10 GB\"",
                    "option_example": "\"50%\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/doh-proxy-rust.nix",
                    "option_name": "services.doh-proxy-rust.enable",
                    "option_description": "<rendered-html><p>Whether to enable doh-proxy-rust.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/doh-proxy-rust.nix",
                    "option_name": "services.doh-proxy-rust.flags",
                    "option_description": "<rendered-html><p>A list of command-line flags to pass to doh-proxy. For details on the\navailable options, see <a\nhref=\"https://github.com/jedisct1/doh-server#usage\">https://github.com/jedisct1/doh-server#usage</a>.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--server-address=9.9.9.9:53\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites",
                    "option_description": "<rendered-html><p>Specification of one or more DokuWiki sites to serve</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.acl",
                    "option_description": "<rendered-html><p>Access Control Lists: see <a\nhref=\"https://www.dokuwiki.org/acl\">https://www.dokuwiki.org/acl</a>\nMutually exclusive with services.dokuwiki.aclFile Set this to a value\nother than null to take precedence over aclFile option.</p>\n<p>Warning: Consider using aclFile instead if you do not want to store\nthe ACL in the world-readable Nix store.</p>\n</rendered-html>",
                    "option_type": "null or (list of (submodule))",
                    "option_default": "null",
                    "option_example": "[\n  {\n    page = \"start\";\n    actor = \"@external\";\n    level = \"read\";\n  }\n  {\n    page = \"*\";\n    actor = \"@users\";\n    level = \"upload\";\n  }\n]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.acl.*.actor",
                    "option_description": "<rendered-html><p>User or group to restrict</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"@external\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.acl.*.level",
                    "option_description": "<rendered-html><p>Permission level to restrict the actor(s) to. See <a\nhref=\"https://www.dokuwiki.org/acl#background_info\">https://www.dokuwiki.org/acl#background_info</a>\nfor explanation</p>\n</rendered-html>",
                    "option_type": "one of 4, 16, 2, 0, 1, 8, \"create\", \"delete\", \"edit\", \"none\", \"read\", \"upload\"",
                    "option_default": null,
                    "option_example": "\"read\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.acl.*.page",
                    "option_description": "<rendered-html><p>Page or namespace to restrict</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"start\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.aclFile",
                    "option_description": "<rendered-html><p>Location of the dokuwiki acl rules. Mutually exclusive with\nservices.dokuwiki.acl Mutually exclusive with services.dokuwiki.acl\nwhich is preferred. Consult documentation <a\nhref=\"https://www.dokuwiki.org/acl\">https://www.dokuwiki.org/acl</a> for\nfurther instructions. Example: <a\nhref=\"https://github.com/splitbrain/dokuwiki/blob/master/conf/acl.auth.php.dist\">https://github.com/splitbrain/dokuwiki/blob/master/conf/acl.auth.php.dist</a></p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"/var/lib/dokuwiki/\u2039name\u203a/acl.auth.php\"",
                    "option_example": "\"/var/lib/dokuwiki/\u2039name\u203a/acl.auth.php\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable DokuWiki web application.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.mergedConfig",
                    "option_description": "<rendered-html><p>Read only representation of the final configuration.</p>\n</rendered-html>",
                    "option_type": "unspecified value",
                    "option_default": "{\n  useacl = true;\n}\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.package",
                    "option_description": "<rendered-html><p>The dokuwiki package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.dokuwiki",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.phpOptions",
                    "option_description": "<rendered-html><p>Options for PHP\u2019s php.ini file for this dokuwiki site.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  \"opcache.interned_strings_buffer\" = \"8\";\n  \"opcache.max_accelerated_files\" = \"10000\";\n  \"opcache.memory_consumption\" = \"128\";\n  \"opcache.revalidate_freq\" = \"15\";\n  \"opcache.fast_shutdown\" = \"1\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.phpPackage",
                    "option_description": "<rendered-html><p>The php package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.php81",
                    "option_example": "php82",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.plugins",
                    "option_description": "<rendered-html><p>List of path(s) to respective plugin(s) which are copied from the\n\u2018plugin\u2019 directory.</p>\n<div class=\"note\">\n<p>These plugins need to be packaged before use, see example.</p>\n</div>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "let\n  plugin-icalevents = pkgs.stdenv.mkDerivation rec {\n    name = \"icalevents\";\n    version = \"2017-06-16\";\n    src = pkgs.fetchzip {\n      stripRoot = false;\n      url = \"https://github.com/real-or-random/dokuwiki-plugin-icalevents/releases/download/${version}/dokuwiki-plugin-icalevents-${version}.zip\";\n      hash = \"sha256-IPs4+qgEfe8AAWevbcCM9PnyI0uoyamtWeg4rEb+9Wc=\";\n    };\n    installPhase = \"mkdir -p $out; cp -R * $out/\";\n  };\n# And then pass this theme to the plugin list like this:\nin [ plugin-icalevents ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.pluginsConfig",
                    "option_description": "<rendered-html><p>List of the dokuwiki (un)loaded plugins.</p>\n</rendered-html>",
                    "option_type": "attribute set of boolean",
                    "option_default": "{\n  authad = false;\n  authldap = false;\n  authmysql = false;\n  authpgsql = false;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.poolConfig",
                    "option_description": "<rendered-html><p>Options for the DokuWiki PHP pool. See the documentation on\n<code>php-fpm.conf</code> for details on configuration directives.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer or boolean)",
                    "option_default": "{\n  pm = \"dynamic\";\n  \"pm.max_children\" = 32;\n  \"pm.max_requests\" = 500;\n  \"pm.max_spare_servers\" = 4;\n  \"pm.min_spare_servers\" = 2;\n  \"pm.start_servers\" = 2;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.settings",
                    "option_description": "<rendered-html><p>Structural DokuWiki configuration. Refer to <a\nhref=\"https://www.dokuwiki.org/config\">https://www.dokuwiki.org/config</a>\nfor details and supported values. Settings can either be directly set\nfrom nix, loaded from a file using <code>._file</code> or obtained from\nany PHP function calls using <code>._raw</code>.</p>\n</rendered-html>",
                    "option_type": "attribute set of anything",
                    "option_default": "{\n  superuser = \"admin\";\n  useacl = true;\n}",
                    "option_example": "{\n  title = \"My Wiki\";\n  userewrite = 1;\n  disableactions = [ \"register\" ]; # Will be concatenated with commas\n  plugin.smtp = {\n    smtp_pass._file = \"/var/run/secrets/dokuwiki/smtp_pass\";\n    smtp_user._raw = \"getenv('DOKUWIKI_SMTP_USER')\";\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.stateDir",
                    "option_description": "<rendered-html><p>Location of the DokuWiki state directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/dokuwiki/\u2039name\u203a/data\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.templates",
                    "option_description": "<rendered-html><p>List of path(s) to respective template(s) which are copied from the\n\u2018tpl\u2019 directory.</p>\n<div class=\"note\">\n<p>These templates need to be packaged before use, see example.</p>\n</div>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "let\n  template-bootstrap3 = pkgs.stdenv.mkDerivation rec {\n  name = \"bootstrap3\";\n  version = \"2022-07-27\";\n  src = pkgs.fetchFromGitHub {\n    owner = \"giterlizzi\";\n    repo = \"dokuwiki-template-bootstrap3\";\n    rev = \"v${version}\";\n    hash = \"sha256-B3Yd4lxdwqfCnfmZdp+i/Mzwn/aEuZ0ovagDxuR6lxo=\";\n  };\n  installPhase = \"mkdir -p $out; cp -R * $out/\";\n};\n# And then pass this theme to the template list like this:\nin [ template-bootstrap3 ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.sites.<name>.usersFile",
                    "option_description": "<rendered-html><p>Location of the dokuwiki users file. List of users. Format:</p>\n<pre><code>login:passwordhash:Real Name:email:groups,comma,separated</code></pre>\n<p>Create passwordHash easily by using:</p>\n<pre><code>mkpasswd -5 password `pwgen 8 1`</code></pre>\n<p>Example: <a\nhref=\"https://github.com/splitbrain/dokuwiki/blob/master/conf/users.auth.php.dist\">https://github.com/splitbrain/dokuwiki/blob/master/conf/users.auth.php.dist</a></p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"/var/lib/dokuwiki/\u2039name\u203a/users.auth.php\"",
                    "option_example": "\"/var/lib/dokuwiki/\u2039name\u203a/users.auth.php\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dokuwiki.nix",
                    "option_name": "services.dokuwiki.webserver",
                    "option_description": "<rendered-html><p>Whether to use nginx or caddy for virtual host management.</p>\n<p>Further nginx configuration can be done by adapting\n<code>services.nginx.virtualHosts.&lt;name&gt;</code>. See <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.virtualHosts&amp;query=services.nginx.virtualHosts\">services.nginx.virtualHosts</a>\nfor further information.</p>\n<p>Further caddy configuration can be done by adapting\n<code>services.caddy.virtualHosts.&lt;name&gt;</code>. See <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.caddy.virtualHosts&amp;query=services.caddy.virtualHosts\">services.caddy.virtualHosts</a>\nfor further information.</p>\n</rendered-html>",
                    "option_type": "one of \"nginx\", \"caddy\"",
                    "option_default": "\"nginx\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.database.createLocally",
                    "option_description": "<rendered-html><p>Create the database and database user locally.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.database.host",
                    "option_description": "<rendered-html><p>Database host address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.database.name",
                    "option_description": "<rendered-html><p>Database name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dolibarr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.database.passwordFile",
                    "option_description": "<rendered-html><p>Database password file.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/dolibarr-dbpassword\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.database.port",
                    "option_description": "<rendered-html><p>Database host port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3306",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.database.user",
                    "option_description": "<rendered-html><p>Database username.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dolibarr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.domain",
                    "option_description": "<rendered-html><p>Domain name of your server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.enable",
                    "option_description": "<rendered-html><p>Whether to enable dolibarr.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.group",
                    "option_description": "<rendered-html><p>Group account under which dolibarr runs.</p>\n<div class=\"note\">\n<p>If left as the default value this group will automatically be created\non system activation, otherwise you are responsible for ensuring the\ngroup exists before the dolibarr application starts.</p>\n</div>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dolibarr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx",
                    "option_description": "<rendered-html><p>With this option, you can customize an nginx virtual host which\nalready has sensible defaults for Dolibarr. Set to {} if you do not need\nany customization to the virtual host. If enabled, then by default, the\n<code class=\"interpreted-text\" role=\"option\">serverName</code> is\n<code>${domain}</code>, SSL is active, and certificates are acquired via\nACME. If this is set to null (the default), no nginx virtualHost will be\nconfigured.</p>\n</rendered-html>",
                    "option_type": "null or (submodule)",
                    "option_default": "null",
                    "option_example": "{\n  serverAliases = [\n    \"dolibarr.${config.networking.domain}\"\n    \"erp.${config.networking.domain}\"\n  ];\n  enableACME = false;\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.acmeFallbackHost",
                    "option_description": "<rendered-html><p>Host which to proxy requests to if ACME challenge is not found.\nUseful if you want multiple hosts to be able to verify the same domain\nname.</p>\n<p>With this option, you could request certificates for the present\ndomain with an ACME client that is running on another host, which you\nwould specify here.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.acmeRoot",
                    "option_description": "<rendered-html><p>Directory for the ACME challenge, which is <strong>public</strong>.\nDon\u2019t put certs or keys in here. Set to null to inherit from\nconfig.security.acme.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"/var/lib/acme/acme-challenge\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.addSSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS in addition to plain HTTP. This will set\ndefaults for <code>listen</code> to listen on all interfaces on the\nrespective default ports (80, 443).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.default",
                    "option_description": "<rendered-html><p>Makes this vhost the default.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.enableACME",
                    "option_description": "<rendered-html><p>Whether to ask Let\u2019s Encrypt to sign a certificate for this vhost.\nAlternately, you can use an existing certificate through <code\nclass=\"interpreted-text\" role=\"option\">useACMEHost</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the vhost verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.forceSSL",
                    "option_description": "<rendered-html><p>Whether to add a separate nginx server block that redirects (defaults\nto 301, configurable with <code>redirectCode</code>) all plain HTTP\ntraffic to HTTPS. This will set defaults for <code>listen</code> to\nlisten on all interfaces on the respective default ports (80, 443),\nwhere the non-SSL listens are used for the redirect vhosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.globalRedirect",
                    "option_description": "<rendered-html><p>If set, all requests for this host are redirected (defaults to 301,\nconfigurable with <code>redirectCode</code>) to the given hostname.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"newserver.example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.http2",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/2 protocol. Note that (as of writing) due\nto nginx\u2019s implementation, to disable HTTP/2 you have to disable it on\nall vhosts that use a given IP address / port. If there is one server\nblock configured to enable http2, then it is enabled for all server\nblocks on this IP. See <a\nhref=\"https://stackoverflow.com/a/39466948/263061\">https://stackoverflow.com/a/39466948/263061</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.http3",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/3 protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat HTTP/3 support is experimental and <em>not</em> yet recommended for\nproduction. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a> HTTP/3\navailability must be manually advertised, preferably in each location\nblock.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.http3_hq",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/0.9 protocol negotiation used in QUIC\ninteroperability tests. This requires using <code>pkgs.nginxQuic</code>\npackage which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat special application protocol support is experimental and\n<em>not</em> yet recommended for production. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.kTLS",
                    "option_description": "<rendered-html><p>Whether to enable kTLS support. Implementing TLS in the kernel (kTLS)\nimproves performance by significantly reducing the need for copying\noperations between user space and the kernel. Required Nginx version\n1.21.4 or later.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.listen",
                    "option_description": "<rendered-html><p>Listen addresses and ports for this virtual host. IPv6 addresses must\nbe enclosed in square brackets. Note: this option overrides\n<code>addSSL</code> and <code>onlySSL</code>.</p>\n<p>If you only want to set the addresses manually and not the ports,\ntake a look at <code>listenAddresses</code>.</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    addr = \"195.154.1.1\";\n    port = 443;\n    ssl = true;\n  }\n  {\n    addr = \"192.154.1.1\";\n    port = 80;\n  }\n  {\n    addr = \"unix:/var/run/nginx.sock\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.listen.*.addr",
                    "option_description": "<rendered-html><p>Listen address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.listen.*.extraParameters",
                    "option_description": "<rendered-html><p>Extra parameters of this listen directive.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"backlog=1024\"\n  \"deferred\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.listen.*.port",
                    "option_description": "<rendered-html><p>Port number to listen on. If unset and the listen address is not a\nsocket then nginx defaults to 80.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.listen.*.proxyProtocol",
                    "option_description": "<rendered-html><p>Enable PROXY protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.listen.*.ssl",
                    "option_description": "<rendered-html><p>Enable SSL.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.listenAddresses",
                    "option_description": "<rendered-html><p>Listen addresses for this virtual host. Compared to\n<code>listen</code> this only sets the addresses and the ports are\nchosen automatically.</p>\n<p>Note: This option overrides <code>enableIPv6</code></p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"127.0.0.1\"\n  \"[::1]\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations",
                    "option_description": "<rendered-html><p>Declarative location config</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  \"/\" = {\n    proxyPass = \"http://localhost:3000\";\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.alias",
                    "option_description": "<rendered-html><p>Alias directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/alias/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the location verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.fastcgiParams",
                    "option_description": "<rendered-html><p>FastCGI parameters to override. Unlike in the Nginx configuration\nfile, overriding only some default parameters won\u2019t unset the default\nvalues for other parameters.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or path)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.index",
                    "option_description": "<rendered-html><p>Adds index directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"index.php index.html\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.priority",
                    "option_description": "<rendered-html><p>Order of this location block in relation to the others in the vhost.\nThe semantics are the same as with <code>lib.mkOrder</code>. Smaller\nvalues have a greater priority.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.proxyPass",
                    "option_description": "<rendered-html><p>Adds proxy_pass directive and sets recommended proxy headers if\nrecommendedProxySettings is enabled.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"http://www.example.org/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.proxyWebsockets",
                    "option_description": "<rendered-html><p>Whether to support proxying websocket connections with HTTP/1.1.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.recommendedProxySettings",
                    "option_description": "<rendered-html><p>Enable recommended proxy settings.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.nginx.recommendedProxySettings",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.return",
                    "option_description": "<rendered-html><p>Adds a return directive, for e.g. redirections.</p>\n</rendered-html>",
                    "option_type": "null or string or signed integer",
                    "option_default": "null",
                    "option_example": "\"301 http://example.com$request_uri\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.root",
                    "option_description": "<rendered-html><p>Root directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/root/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.locations.<name>.tryFiles",
                    "option_description": "<rendered-html><p>Adds try_files directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"$uri =404\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.onlySSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS and reject plain HTTP connections. This will\nset defaults for <code>listen</code> to listen on all interfaces on port\n443.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.quic",
                    "option_description": "<rendered-html><p>Whether to enable the QUIC transport protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code>. Note that QUIC\nsupport is experimental and <em>not</em> yet recommended for production.\nRead more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.redirectCode",
                    "option_description": "<rendered-html><p>HTTP status used by <code>globalRedirect</code> and\n<code>forceSSL</code>. Possible usecases include temporary (302, 307)\nredirects, keeping the request method and body (307, 308), or explicitly\nresetting the method to GET (303). See <a\nhref=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections</a>.</p>\n</rendered-html>",
                    "option_type": "integer between 300 and 399 (both inclusive)",
                    "option_default": "301",
                    "option_example": "308",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.rejectSSL",
                    "option_description": "<rendered-html><p>Whether to listen for and reject all HTTPS connections to this vhost.\nUseful in <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.virtualHosts.&lt;name&gt;.default&amp;query=services.nginx.virtualHosts.&lt;name&gt;.default\">default</a>\nserver blocks to avoid serving the certificate for another vhost. Uses\nthe <code>ssl_reject_handshake</code> directive available in nginx\nversions 1.19.4 and above.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.reuseport",
                    "option_description": "<rendered-html><p>Create an individual listening socket . It is required to specify\nonly once on one of the hosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.root",
                    "option_description": "<rendered-html><p>The path of the web root directory.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/data/webserver/docs\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.serverAliases",
                    "option_description": "<rendered-html><p>Additional names of virtual hosts served by this virtual host\nconfiguration.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"www.example.org\"\n  \"example.org\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.serverName",
                    "option_description": "<rendered-html><p>Name of this virtual host. Defaults to attribute name in\nvirtualHosts.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.sslCertificate",
                    "option_description": "<rendered-html><p>Path to server SSL certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.cert\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.sslCertificateKey",
                    "option_description": "<rendered-html><p>Path to server SSL certificate key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.sslTrustedCertificate",
                    "option_description": "<rendered-html><p>Path to root SSL certificate for stapling and client\ncertificates.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.nginx.useACMEHost",
                    "option_description": "<rendered-html><p>A host of an existing Let\u2019s Encrypt certificate to use. This is\nuseful if you have many subdomains and want to avoid hitting the <a\nhref=\"https://letsencrypt.org/docs/rate-limits\">rate limit</a>.\nAlternately, you can generate a certificate through <code\nclass=\"interpreted-text\" role=\"option\">enableACME</code>. <em>Note that\nthis option does not create any certificates, nor it does add subdomains\nto existing ones \u2013 you will need to create them manually using <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=security.acme.certs&amp;query=security.acme.certs\">security.acme.certs</a>.</em></p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.package",
                    "option_description": "<rendered-html><p>The dolibarr package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.dolibarr",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.poolConfig",
                    "option_description": "<rendered-html><p>Options for the Dolibarr PHP pool. See the documentation on <a\nhref=\"https://www.php.net/manual/en/install.fpm.configuration.php\"><code>php-fpm.conf</code></a>\nfor details on configuration directives.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer or boolean)",
                    "option_default": "{\n  pm = \"dynamic\";\n  \"pm.max_children\" = 32;\n  \"pm.max_requests\" = 500;\n  \"pm.max_spare_servers\" = 4;\n  \"pm.min_spare_servers\" = 2;\n  \"pm.start_servers\" = 2;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.settings",
                    "option_description": "<rendered-html><p>Dolibarr settings, see <a\nhref=\"https://github.com/Dolibarr/dolibarr/blob/develop/htdocs/conf/conf.php.example\">https://github.com/Dolibarr/dolibarr/blob/develop/htdocs/conf/conf.php.example</a>\nfor details.</p>\n</rendered-html>",
                    "option_type": "attribute set of (boolean or signed integer or string)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.stateDir",
                    "option_description": "<rendered-html><p>State and configuration directory dolibarr will use.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/dolibarr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/dolibarr.nix",
                    "option_name": "services.dolibarr.user",
                    "option_description": "<rendered-html><p>User account under which dolibarr runs.</p>\n<div class=\"note\">\n<p>If left as the default value this user will automatically be created\non system activation, otherwise you are responsible for ensuring the\nuser exists before the dolibarr application starts.</p>\n</div>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dolibarr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/domoticz.nix",
                    "option_name": "services.domoticz.bind",
                    "option_description": "<rendered-html><p>IP address to bind to.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/domoticz.nix",
                    "option_name": "services.domoticz.enable",
                    "option_description": "<rendered-html><p>Whether to enable Domoticz home automation.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/domoticz.nix",
                    "option_name": "services.domoticz.port",
                    "option_description": "<rendered-html><p>Port to bind to for HTTP, set to 0 to disable HTTP.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8080",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.configFile",
                    "option_description": "<rendered-html><p>Config file used for the whole dovecot configuration.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.createMailUser",
                    "option_description": "<rendered-html><p>Whether to enable automatically creating the user given in <code\nclass=\"interpreted-text\" role=\"option\">services.dovecot.user</code> and\nthe group given in <code class=\"interpreted-text\"\nrole=\"option\">services.dovecot.group</code>..</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.enable",
                    "option_description": "<rendered-html><p>Whether to enable the dovecot 2.x POP3/IMAP server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.enableDHE",
                    "option_description": "<rendered-html><p>Whether to enable ssl_dh and generation of primes for the key\nexchange.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.enableImap",
                    "option_description": "<rendered-html><p>Whether to enable starting the IMAP listener (when Dovecot is\nenabled).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.enableLmtp",
                    "option_description": "<rendered-html><p>Whether to enable starting the LMTP listener (when Dovecot is\nenabled).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.enablePAM",
                    "option_description": "<rendered-html><p>Whether to enable creating a own Dovecot PAM service and configure\nPAM user logins.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.enablePop3",
                    "option_description": "<rendered-html><p>Whether to enable starting the POP3 listener (when Dovecot is\nenabled).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.enableQuota",
                    "option_description": "<rendered-html><p>Whether to enable the dovecot quota service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.extraConfig",
                    "option_description": "<rendered-html><p>Additional entries to put verbatim into Dovecot\u2019s config file.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"mail_debug = yes\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHTWd",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.group",
                    "option_description": "<rendered-html><p>Dovecot group name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dovecot2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.imapsieve.mailbox",
                    "option_description": "<rendered-html><p>Configure Sieve filtering rules on IMAP actions</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.imapsieve.mailbox.*.after",
                    "option_description": "<rendered-html><p>When an IMAP event of interest occurs, this sieve script is executed\nafter any user script respectively.</p>\n<p>This setting each specify the location of a single sieve script. The\nsemantics of this setting is similar to sieve_after: the specified\nscripts form a sequence together with the user script in which the next\nscript is only executed when an (implicit) keep action is executed.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "./report-spam.sieve",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.imapsieve.mailbox.*.before",
                    "option_description": "<rendered-html><p>When an IMAP event of interest occurs, this sieve script is executed\nbefore any user script respectively.</p>\n<p>This setting each specify the location of a single sieve script. The\nsemantics of this setting is similar to sieve_before: the specified\nscripts form a sequence together with the user script in which the next\nscript is only executed when an (implicit) keep action is executed.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "./report-spam.sieve",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.imapsieve.mailbox.*.causes",
                    "option_description": "<rendered-html><p>Only execute the administrator Sieve scripts for the mailbox\nconfigured with services.dovecot2.imapsieve.mailbox.<name>.name when one\nof the listed IMAPSIEVE causes apply.</p>\n<p>This has no effect on the user script, which is always executed no\nmatter the cause.</p>\n</rendered-html>",
                    "option_type": "list of (one of \"APPEND\", \"COPY\", \"FLAG\")",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"COPY\"\n  \"APPEND\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.imapsieve.mailbox.*.from",
                    "option_description": "<rendered-html><p>Only execute the administrator Sieve scripts for the mailbox\nconfigured with services.dovecot2.imapsieve.mailbox.<name>.name when the\nmessage originates from the indicated mailbox.</p>\n<p>This setting supports wildcards with a syntax compatible with the\nIMAP LIST command, meaning that this setting can apply to multiple or\neven all (\u201c*\u201d) mailboxes.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"*\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.imapsieve.mailbox.*.name",
                    "option_description": "<rendered-html><p>This setting configures the name of a mailbox for which administrator\nscripts are configured.</p>\n<p>The settings defined hereafter with matching sequence numbers apply\nto the mailbox named by this setting.</p>\n<p>This setting supports wildcards with a syntax compatible with the\nIMAP LIST command, meaning that this setting can apply to multiple or\neven all (\u201c*\u201d) mailboxes.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"Junk\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailGroup",
                    "option_description": "<rendered-html><p>Default group to store mail for virtual users.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailLocation",
                    "option_description": "<rendered-html><p>Location that dovecot will use for mail folders. Dovecot\nmail_location option.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"maildir:/var/spool/mail/%u\"",
                    "option_example": "\"maildir:~/mail:INBOX=/var/spool/mail/%u\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailPlugins",
                    "option_description": "<rendered-html><p>Additional entries to add to the mail_plugins variable, globally and\nper protocol</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{\n  globally = {\n    enable = [ ];\n  };\n  perProtocol = { };\n}",
                    "option_example": "{\n  globally = {\n    enable = [\n      \"acl\"\n    ];\n  };\n  perProtocol = {\n    imap = {\n      enable = [\n        \"imap_acl\"\n      ];\n    };\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailPlugins.globally",
                    "option_description": "<rendered-html><p>Additional entries to add to the mail_plugins variable for all\nprotocols</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{\n  enable = [ ];\n}",
                    "option_example": "{\n  enable = [\n    \"virtual\"\n  ];\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailPlugins.globally.enable",
                    "option_description": "<rendered-html><p>mail plugins to enable as a list of strings to append to the\ntop-level <code>$mail_plugins</code> configuration variable</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailPlugins.perProtocol",
                    "option_description": "<rendered-html><p>Additional entries to add to the mail_plugins variable, per\nprotocol</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  imap = [\n    \"imap_acl\"\n  ];\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailPlugins.perProtocol.<name>.enable",
                    "option_description": "<rendered-html><p>mail plugins to enable as a list of strings to append to the\ncorresponding per-protocol <code>$mail_plugins</code> configuration\nvariable</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailUser",
                    "option_description": "<rendered-html><p>Default user to store mail for virtual users.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailboxes",
                    "option_description": "<rendered-html><p>Configure mailboxes and auto create or subscribe them.</p>\n</rendered-html>",
                    "option_type": "(attribute set of (submodule)) or (list of unspecified value) convertible to it",
                    "option_default": "{ }",
                    "option_example": "{\n  Spam = { specialUse = \"Junk\"; auto = \"create\"; };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailboxes.<name>.auto",
                    "option_description": "<rendered-html><p>Whether to automatically create or create and subscribe to the\nmailbox or not.</p>\n</rendered-html>",
                    "option_type": "one of \"no\", \"create\", \"subscribe\"",
                    "option_default": "\"no\"",
                    "option_example": "\"subscribe\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailboxes.<name>.autoexpunge",
                    "option_description": "<rendered-html><p>To automatically remove all email from the mailbox which is older\nthan the specified time.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"60d\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailboxes.<name>.name",
                    "option_description": "<rendered-html><p>The name of the mailbox.</p>\n</rendered-html>",
                    "option_type": "string matching the pattern [^\"]+",
                    "option_default": "\"\u2039name\u203a\"",
                    "option_example": "\"Spam\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.mailboxes.<name>.specialUse",
                    "option_description": "<rendered-html><p>Null if no special use flag is set. Other than that every use flag\nmentioned in the RFC is valid.</p>\n</rendered-html>",
                    "option_type": "null or one of \"All\", \"Archive\", \"Drafts\", \"Flagged\", \"Junk\", \"Sent\", \"Trash\"",
                    "option_default": "null",
                    "option_example": "\"Junk\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.modules",
                    "option_description": "<rendered-html><p>Symlinks the contents of lib/dovecot of every given package into\n/etc/dovecot/modules. This will make the given modules available if a\ndovecot package with the module_dir patch applied is being used.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.dovecot_pigeonhole ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.pluginSettings",
                    "option_description": "<rendered-html><p>Plugin settings for dovecot in general, e.g. <code>sieve</code>,\n<code>sieve_default</code>, etc.</p>\n<p>Some of the other knobs of this module will influence by default the\nplugin settings, but you can still override any plugin settings.</p>\n<p>If you override a plugin setting, its value is cleared and you have\nto copy over the defaults.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or package)",
                    "option_default": "{ }",
                    "option_example": "{\n  sieve = \"file:~/sieve;active=~/.dovecot.sieve\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.protocols",
                    "option_description": "<rendered-html><p>Additional listeners to start when Dovecot is enabled.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.quotaGlobalPerUser",
                    "option_description": "<rendered-html><p>Quota limit for the user in bytes. Supports suffixes b, k, M, G, T\nand %.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"100G\"",
                    "option_example": "\"10G\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.quotaPort",
                    "option_description": "<rendered-html><p>The Port the dovecot quota service binds to. If using postfix, add\ncheck_policy_service inet:localhost:12340 to your\nsmtpd_recipient_restrictions in your postfix config.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"12340\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.showPAMFailure",
                    "option_description": "<rendered-html><p>Whether to enable showing the PAM failure message on authentication\nerror (useful for OTPW).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.sieve.extensions",
                    "option_description": "<rendered-html><p>Sieve extensions for use in user scripts</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"notify\"\n  \"imapflags\"\n  \"vnd.dovecot.filter\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.sieve.globalExtensions",
                    "option_description": "<rendered-html><p>Sieve extensions for use in global scripts</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"vnd.dovecot.environment\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHTad",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.sieve.pipeBins",
                    "option_description": "<rendered-html><p>Programs available for use by the vnd.dovecot.pipe extension</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "map lib.getExe [\n  (pkgs.writeShellScriptBin \"learn-ham.sh\" \"exec ${pkgs.rspamd}/bin/rspamc learn_ham\")\n  (pkgs.writeShellScriptBin \"learn-spam.sh\" \"exec ${pkgs.rspamd}/bin/rspamc learn_spam\")\n]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.sieve.plugins",
                    "option_description": "<rendered-html><p>Sieve plugins to load</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"sieve_extprograms\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.sieve.scripts",
                    "option_description": "<rendered-html><p>Sieve scripts to be executed. Key is a sequence, e.g. \u2018before2\u2019,\n\u2018after\u2019 etc.</p>\n</rendered-html>",
                    "option_type": "attribute set of path",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.sslCACert",
                    "option_description": "<rendered-html><p>Path to the server\u2019s CA certificate key.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.sslServerCert",
                    "option_description": "<rendered-html><p>Path to the server\u2019s public key.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.sslServerKey",
                    "option_description": "<rendered-html><p>Path to the server\u2019s private key.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dovecot.nix",
                    "option_name": "services.dovecot2.user",
                    "option_description": "<rendered-html><p>Dovecot user name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dovecot2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.bind",
                    "option_description": "<rendered-html><p>The IP interface to bind to. <code>null</code> means \u201call\ninterfaces\u201d.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.cacheMode",
                    "option_description": "<rendered-html><p>Once this mode is on, Dragonfly will evict items least likely to be\nstumbled upon in the future but only when it is near maxmemory\nlimit.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.dbNum",
                    "option_description": "<rendered-html><p>Maximum number of supported databases for <code>select</code></p>\n</rendered-html>",
                    "option_type": "null or (unsigned integer, meaning >=0)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.enable",
                    "option_description": "<rendered-html><p>Whether to enable DragonflyDB.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.keysOutputLimit",
                    "option_description": "<rendered-html><p>Maximum number of returned keys in keys command. <code>keys</code> is\na dangerous command. We truncate its result to avoid blowup in memory\nwhen fetching too many keys.</p>\n</rendered-html>",
                    "option_type": "unsigned integer, meaning >=0",
                    "option_default": "8192",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.maxMemory",
                    "option_description": "<rendered-html><p>The maximum amount of memory to use for storage (in bytes).\n<code>null</code> means this will be automatically set.</p>\n</rendered-html>",
                    "option_type": "null or (unsigned integer, meaning >=0)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.memcachePort",
                    "option_description": "<rendered-html><p>To enable memcached compatible API on this port. <code>null</code>\nmeans disabled.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.port",
                    "option_description": "<rendered-html><p>The TCP port to accept connections.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "6379",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.requirePass",
                    "option_description": "<rendered-html><p>Password for database</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"letmein!\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/dragonflydb.nix",
                    "option_name": "services.dragonflydb.user",
                    "option_description": "<rendered-html><p>The user to run DragonflyDB as</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dragonfly\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/drbd.nix",
                    "option_name": "services.drbd.config",
                    "option_description": "<rendered-html><p>Contents of the <code class=\"interpreted-text\"\nrole=\"file\">drbd.conf</code> configuration file.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/network-filesystems/drbd.nix",
                    "option_name": "services.drbd.enable",
                    "option_description": "<rendered-html><p>Whether to enable support for DRBD, the Distributed Replicated Block\nDevice.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dspam.nix",
                    "option_name": "services.dspam.domainSocket",
                    "option_description": "<rendered-html><p>Path to local domain socket which is used for communication with the\ndaemon. Set to null to disable UNIX socket.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "\"/run/dspam/dspam.sock\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dspam.nix",
                    "option_name": "services.dspam.enable",
                    "option_description": "<rendered-html><p>Whether to enable the dspam spam filter.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dspam.nix",
                    "option_name": "services.dspam.extraConfig",
                    "option_description": "<rendered-html><p>Additional dspam configuration.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dspam.nix",
                    "option_name": "services.dspam.group",
                    "option_description": "<rendered-html><p>Group for the dspam daemon.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dspam\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dspam.nix",
                    "option_name": "services.dspam.maintenanceInterval",
                    "option_description": "<rendered-html><p>If set, maintenance script will be run at specified (in systemd.timer\nformat) interval</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dspam.nix",
                    "option_name": "services.dspam.storageDriver",
                    "option_description": "<rendered-html><p>Storage driver backend to use for dspam.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"hash\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/mail/dspam.nix",
                    "option_name": "services.dspam.user",
                    "option_description": "<rendered-html><p>User for the dspam daemon.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"dspam\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/duckling.nix",
                    "option_name": "services.duckling.enable",
                    "option_description": "<rendered-html><p>Whether to enable duckling.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/duckling.nix",
                    "option_name": "services.duckling.port",
                    "option_description": "<rendered-html><p>Port on which duckling will run.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8080",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicati.nix",
                    "option_name": "services.duplicati.dataDir",
                    "option_description": "<rendered-html><p>The directory where Duplicati stores its data files.</p>\n<div class=\"note\">\n<p>If left as the default value this directory will automatically be\ncreated before the Duplicati server starts, otherwise you are\nresponsible for ensuring the directory exists with appropriate ownership\nand permissions.</p>\n</div>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/duplicati\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicati.nix",
                    "option_name": "services.duplicati.enable",
                    "option_description": "<rendered-html><p>Whether to enable Duplicati.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicati.nix",
                    "option_name": "services.duplicati.interface",
                    "option_description": "<rendered-html><p>Listening interface for the web UI Set it to \u201cany\u201d to listen on all\navailable interfaces</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicati.nix",
                    "option_name": "services.duplicati.package",
                    "option_description": "<rendered-html><p>The duplicati package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.duplicati",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicati.nix",
                    "option_name": "services.duplicati.port",
                    "option_description": "<rendered-html><p>Port serving the web interface</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8200",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicati.nix",
                    "option_name": "services.duplicati.user",
                    "option_description": "<rendered-html><p>Duplicati runs as it\u2019s own user. It will only be able to backup\nworld-readable files. Run as root with special care.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"duplicati\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.cleanup.maxAge",
                    "option_description": "<rendered-html><p>If non-null, delete all backup sets older than the given time. Old\nbackup sets will not be deleted if backup sets newer than time depend on\nthem.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"6M\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.cleanup.maxFull",
                    "option_description": "<rendered-html><p>If non-null, delete all backups sets that are older than the count:th\nlast full backup (in other words, keep the last count full backups and\nassociated incremental sets).</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "2",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.cleanup.maxIncr",
                    "option_description": "<rendered-html><p>If non-null, delete incremental sets of all backups sets that are\nolder than the count:th last full backup (in other words, keep only old\nfull backups and not their increments).</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "1",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.enable",
                    "option_description": "<rendered-html><p>Whether to enable backups with duplicity.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.exclude",
                    "option_description": "<rendered-html><p>List of paths to exclude from backups. See the FILE SELECTION section\nin <code class=\"interpreted-text\" role=\"manpage\">duplicity(1)</code> for\ndetails on the syntax.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.extraFlags",
                    "option_description": "<rendered-html><p>Extra command-line flags passed to duplicity. See <code\nclass=\"interpreted-text\" role=\"manpage\">duplicity(1)</code>.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--backend-retry-delay\"\n  \"100\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.frequency",
                    "option_description": "<rendered-html><p>Run duplicity with the given frequency (see <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.time(7)</code></a> for\nthe format). If null, do not run automatically.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"daily\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.fullIfOlderThan",
                    "option_description": "<rendered-html><p>If <code>\"never\"</code> (the default) always do incremental backups\n(the first backup will be a full backup, of course). If\n<code>\"always\"</code> always do full backups. Otherwise, this must be a\nstring representing a duration. Full backups will be made when the\nlatest full backup is older than this duration. If this is not the case,\nan incremental backup is performed.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"never\"",
                    "option_example": "\"1M\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.include",
                    "option_description": "<rendered-html><p>List of paths to include into the backups. See the FILE SELECTION\nsection in <code class=\"interpreted-text\"\nrole=\"manpage\">duplicity(1)</code> for details on the syntax.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"/home\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.root",
                    "option_description": "<rendered-html><p>Root directory to backup.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.secretFile",
                    "option_description": "<rendered-html><p>Path of a file containing secrets (gpg passphrase, access key\u2026) in\nthe format of EnvironmentFile as described by <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.exec.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.exec(5)</code></a>. For\nexample:</p>\n<pre><code>PASSPHRASE=\u00ab...\u00bb\nAWS_ACCESS_KEY_ID=\u00ab...\u00bb\nAWS_SECRET_ACCESS_KEY=\u00ab...\u00bb</code></pre>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/duplicity.nix",
                    "option_name": "services.duplicity.targetUrl",
                    "option_description": "<rendered-html><p>Target url to backup to. See the URL FORMAT section in <code\nclass=\"interpreted-text\" role=\"manpage\">duplicity(1)</code> for\nsupported urls.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"s3://host:port/prefix\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/dwm-status.nix",
                    "option_name": "services.dwm-status.enable",
                    "option_description": "<rendered-html><p>Whether to enable dwm-status user service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/dwm-status.nix",
                    "option_name": "services.dwm-status.extraConfig",
                    "option_description": "<rendered-html><p>Extra config in TOML format.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/dwm-status.nix",
                    "option_name": "services.dwm-status.order",
                    "option_description": "<rendered-html><p>List of enabled features in order.</p>\n</rendered-html>",
                    "option_type": "list of (one of \"audio\", \"backlight\", \"battery\", \"cpu_load\", \"network\", \"time\")",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHTae",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/dwm-status.nix",
                    "option_name": "services.dwm-status.package",
                    "option_description": "<rendered-html><p>The dwm-status package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.dwm-status",
                    "option_example": "dwm-status.override { enableAlsaUtils = false; }",
                    "option_flake": null
                }
            }
        ]
    }
}