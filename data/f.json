{
    "took": 7,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 502,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.admins",
                    "option_description": "<rendered-html><p>List of player names which will be admin.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"username\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.autosave-interval",
                    "option_description": "<rendered-html><p>Autosave interval in minutes.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "10",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.bind",
                    "option_description": "<rendered-html><p>The address to which the service should bind.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.configFile",
                    "option_description": "<rendered-html><p>The server\u2019s configuration file.</p>\n<p>The default file generated by this module contains lines essential to\nthe server\u2019s operation. Use its contents as a basis for any\ncustomizations.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "configFile",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.description",
                    "option_description": "<rendered-html><p>Description of the game that will appear in the listing.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.enable",
                    "option_description": "<rendered-html><p>Whether to enable Factorio.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.extraSettings",
                    "option_description": "<rendered-html><p>Extra game configuration that will go into server-settings.json</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": "{\n  admins = [\n    \"username\"\n  ];\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.extraSettingsFile",
                    "option_description": "<rendered-html><p>File, which is dynamically applied to server-settings.json before\nstartup.</p>\n<p>This option should be used for credentials.</p>\n<p>For example a settings file could contain:</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode json\"><code class=\"sourceCode json\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">{</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"dt\">&quot;game-password&quot;</span><span class=\"fu\">:</span> <span class=\"st\">&quot;hunter1&quot;</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">}</span></span></code></pre></div>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.game-name",
                    "option_description": "<rendered-html><p>Name of the game as it will appear in the game listing.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"Factorio Game\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.game-password",
                    "option_description": "<rendered-html><p>Game password.</p>\n<p>This option is insecure. Use extraSettingsFile instead.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.lan",
                    "option_description": "<rendered-html><p>Game will be broadcast on LAN.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.loadLatestSave",
                    "option_description": "<rendered-html><p>Load the latest savegame on startup. This overrides saveName, in that\nthe latest save will always be used even if a saved game of the given\nname exists. It still controls the \u2018canonical\u2019 name of the savegame.</p>\n<p>Set this to true to have the server automatically reload a recent\nautosave after a crash or desync.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.mods",
                    "option_description": "<rendered-html><p>Mods the server should install and activate.</p>\n<p>The derivations in this list must \u201cbuild\u201d the mod by simply copying\nthe .zip, named correctly, into the output directory. Eventually, there\nwill be a way to pull in the most up-to-date list of derivations via\nnixos-channel. Until then, this is for experts only.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.mods-dat",
                    "option_description": "<rendered-html><p>Mods settings can be changed by specifying a dat file, in the <a\nhref=\"https://wiki.factorio.com/Mod_settings_file_format\">mod settings\nfile format</a>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.nonBlockingSaving",
                    "option_description": "<rendered-html><p>Highly experimental feature, enable only at your own risk of losing\nyour saves. On UNIX systems, server will fork itself to create an\nautosave. Autosaving on connected Windows clients will be disabled\nregardless of autosave_only_on_server option.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.openFirewall",
                    "option_description": "<rendered-html><p>Whether to automatically open the specified UDP port in the\nfirewall.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.package",
                    "option_description": "<rendered-html><p>The factorio-headless package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.factorio-headless",
                    "option_example": "factorio-headless-experimental",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.password",
                    "option_description": "<rendered-html><p>Your factorio.com login credentials. Required for games with\nvisibility public.</p>\n<p>This option is insecure. Use extraSettingsFile instead.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.port",
                    "option_description": "<rendered-html><p>The port to which the service should bind.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "34197",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.public",
                    "option_description": "<rendered-html><p>Game will be published on the official Factorio matching server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.requireUserVerification",
                    "option_description": "<rendered-html><p>When set to true, the server will only allow clients that have a\nvalid factorio.com account.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.saveName",
                    "option_description": "<rendered-html><p>The name of the savegame that will be used by the server.</p>\n<p>When not present in\n/var/lib/${config.services.factorio.stateDirName}/saves, a new map with\ndefault settings will be generated before starting the service.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"default\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.stateDirName",
                    "option_description": "<rendered-html><p>Name of the directory under /var/lib holding the server\u2019s data.</p>\n<p>The configuration and map will be stored here.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"factorio\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.token",
                    "option_description": "<rendered-html><p>Authentication token. May be used instead of \u2018password\u2019 above.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/factorio.nix",
                    "option_name": "services.factorio.username",
                    "option_description": "<rendered-html><p>Your factorio.com login credentials. Required for games with\nvisibility public.</p>\n<p>This option is insecure. Use extraSettingsFile instead.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.banaction",
                    "option_description": "<rendered-html><p>Default banning action (e.g. iptables, iptables-new,\niptables-multiport, iptables-ipset-proto6-allports, shorewall, etc). It\nis used to define action_* variables. Can be overridden globally or per\nsection within jail.local file</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "if config.networking.nftables.enable then \"nftables-multiport\" else \"iptables-multiport\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.banaction-allports",
                    "option_description": "<rendered-html><p>Default banning action (e.g. iptables, iptables-new,\niptables-multiport, shorewall, etc) for \u201callports\u201d jails. It is used to\ndefine action_* variables. Can be overridden globally or per section\nwithin jail.local file</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "if config.networking.nftables.enable then \"nftables-allports\" else \"iptables-allports\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.bantime",
                    "option_description": "<rendered-html><p>Number of seconds that a host is banned.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"10m\"",
                    "option_example": "\"1h\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.bantime-increment.enable",
                    "option_description": "<rendered-html><p>\u201cbantime.increment\u201d allows to use database for searching of\npreviously banned ip\u2019s to increase a default ban time using special\nformula, default it is banTime * 1, 2, 4, 8, 16, 32 \u2026</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.bantime-increment.factor",
                    "option_description": "<rendered-html><p>\u201cbantime.factor\u201d is a coefficient to calculate exponent growing of\nthe formula or common multiplier, default value of factor is 1 and with\ndefault value of formula, the ban time grows by 1, 2, 4, 8, 16 \u2026</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"4\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.bantime-increment.formula",
                    "option_description": "<rendered-html><p>\u201cbantime.formula\u201d used by default to calculate next value of ban\ntime, default value bellow, the same ban time growing will be reached by\nmultipliers 1, 2, 4, 8, 16, 32 \u2026</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"ban.Time * math.exp(float(ban.Count+1)*banFactor)/math.exp(1*banFactor)\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.bantime-increment.maxtime",
                    "option_description": "<rendered-html><p>\u201cbantime.maxtime\u201d is the max number of seconds using the ban time can\nreach (don\u2019t grows further)</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"48h\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.bantime-increment.multipliers",
                    "option_description": "<rendered-html><p>\u201cbantime.multipliers\u201d used to calculate next value of ban time\ninstead of formula, corresponding previously ban count and given\n\u201cbantime.factor\u201d (for multipliers default is 1); following example grows\nban time by 1, 2, 4, 8, 16 \u2026 and if last ban count greater as\nmultipliers count, always used last multiplier (64 in example), for\nfactor \u20181\u2019 and original ban time 600 - 10.6 hours</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"1 2 4 8 16 32 64\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.bantime-increment.overalljails",
                    "option_description": "<rendered-html><p>\u201cbantime.overalljails\u201d (if true) specifies the search of IP in the\ndatabase will be executed cross over all jails, if false (default), only\ncurrent jail of the ban IP will be searched.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.bantime-increment.rndtime",
                    "option_description": "<rendered-html><p>\u201cbantime.rndtime\u201d is the max number of seconds using for mixing with\nrandom time to prevent \u201cclever\u201d botnets calculate exact time IP can be\nunbanned again</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"8m\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.daemonSettings",
                    "option_description": "<rendered-html><p>The contents of Fail2ban\u2019s main configuration file. It\u2019s generally\nnot necessary to change it.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": "{\n  Definition = {\n    logtarget = \"SYSLOG\";\n    socket = \"/run/fail2ban/fail2ban.sock\";\n    pidfile = \"/run/fail2ban/fail2ban.pid\";\n    dbfile = \"/var/lib/fail2ban/fail2ban.sqlite3\";\n  };\n}\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.enable",
                    "option_description": "<rendered-html><p>Whether to enable the fail2ban service.</p>\n<p>See the documentation of <code class=\"interpreted-text\"\nrole=\"option\">services.fail2ban.jails</code> for what jails are enabled\nby default.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.extraPackages",
                    "option_description": "<rendered-html><p>Extra packages to be made available to the fail2ban service. The\nexample contains the packages needed by the\n<code>iptables-ipset-proto6</code> action.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.ipset ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.ignoreIP",
                    "option_description": "<rendered-html><p>\u201cignoreIP\u201d can be a list of IP addresses, CIDR masks or DNS hosts.\nFail2ban will not ban a host which matches an address in this list.\nSeveral addresses can be defined using space (and/or comma)\nseparator.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"192.168.0.0/16\"\n  \"2001:DB8::42\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.jails",
                    "option_description": "<rendered-html><p>The configuration of each Fail2ban \u201cjail\u201d. A jail consists of an\naction (such as blocking a port using <code class=\"interpreted-text\"\nrole=\"command\">iptables</code>) that is triggered when a filter applied\nto a log file triggers more than a certain number of times in a certain\ntime period. Actions are defined in <code class=\"interpreted-text\"\nrole=\"file\">/etc/fail2ban/action.d</code>, while filters are defined in\n<code class=\"interpreted-text\"\nrole=\"file\">/etc/fail2ban/filter.d</code>.</p>\n<p>NixOS comes with a default <code>sshd</code> jail; for it to work\nwell, <code class=\"interpreted-text\"\nrole=\"option\">services.openssh.logLevel</code> should be set to\n<code>\"VERBOSE\"</code> or higher so that fail2ban can observe failed\nlogin attempts. This module sets it to <code>\"VERBOSE\"</code> if not set\notherwise, so enabling fail2ban can make SSH logs more verbose.</p>\n</rendered-html>",
                    "option_type": "attribute set of (strings concatenated with \"\\n\" or (submodule))",
                    "option_default": "{ }",
                    "option_example": "{\n  apache-nohome-iptables = {\n    settings = {\n      # Block an IP address if it accesses a non-existent\n      # home directory more than 5 times in 10 minutes,\n      # since that indicates that it's scanning.\n      filter = \"apache-nohome\";\n      action = ''iptables-multiport[name=HTTP, port=\"http,https\"]'';\n      logpath = \"/var/log/httpd/error_log*\";\n      backend = \"auto\";\n      findtime = 600;\n      bantime = 600;\n      maxretry = 5;\n    };\n  };\n  dovecot = {\n    settings = {\n      # block IPs which failed to log-in\n      # aggressive mode add blocking for aborted connections\n      filter = \"dovecot[mode=aggressive]\";\n      maxretry = 3;\n    };\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.maxretry",
                    "option_description": "<rendered-html><p>Number of failures before a host gets banned.</p>\n</rendered-html>",
                    "option_type": "unsigned integer, meaning >=0",
                    "option_default": "3",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.package",
                    "option_description": "<rendered-html><p>The fail2ban package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.fail2ban",
                    "option_example": "fail2ban_0_11",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fail2ban.nix",
                    "option_name": "services.fail2ban.packageFirewall",
                    "option_description": "<rendered-html><p>The firewall package used by fail2ban service. Defaults to the\npackage for your firewall (iptables or nftables).</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "config.networking.firewall.package",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fakeroute.nix",
                    "option_name": "services.fakeroute.enable",
                    "option_description": "<rendered-html><p>Whether to enable the fakeroute service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fakeroute.nix",
                    "option_name": "services.fakeroute.route",
                    "option_description": "<rendered-html><p>Fake route that will appear after the real one to any host running a\ntraceroute.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"216.102.187.130\"\n  \"4.0.1.122\"\n  \"198.116.142.34\"\n  \"63.199.8.242\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/config/fanout.nix",
                    "option_name": "services.fanout.bufferSize",
                    "option_description": "<rendered-html><p>Size of /dev/fanout buffer in bytes</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "16384",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/config/fanout.nix",
                    "option_name": "services.fanout.enable",
                    "option_description": "<rendered-html><p>Whether to enable fanout.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/config/fanout.nix",
                    "option_name": "services.fanout.fanoutDevices",
                    "option_description": "<rendered-html><p>Number of /dev/fanout devices</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fastnetmon-advanced.nix",
                    "option_name": "services.fastnetmon-advanced.bgpPeers",
                    "option_description": "<rendered-html><p>BGP Peers to declaratively load into FastNetMon Advanced</p>\n</rendered-html>",
                    "option_type": "attribute set of (YAML value)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fastnetmon-advanced.nix",
                    "option_name": "services.fastnetmon-advanced.enable",
                    "option_description": "<rendered-html><p>Whether to enable the fastnetmon-advanced DDoS Protection daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fastnetmon-advanced.nix",
                    "option_name": "services.fastnetmon-advanced.enableAdvancedTrafficPersistence",
                    "option_description": "<rendered-html><p>Store historical flow data in clickhouse</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fastnetmon-advanced.nix",
                    "option_name": "services.fastnetmon-advanced.hostgroups",
                    "option_description": "<rendered-html><p>Hostgroups to declaratively load into FastNetMon Advanced</p>\n</rendered-html>",
                    "option_type": "attribute set of (YAML value)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fastnetmon-advanced.nix",
                    "option_name": "services.fastnetmon-advanced.settings",
                    "option_description": "<rendered-html><p>Extra configuration options to declaratively load into FastNetMon\nAdvanced.</p>\n<p>See the <a\nhref=\"https://fastnetmon.com/docs-fnm-advanced/fastnetmon-advanced-configuration-options/\">FastNetMon\nAdvanced Configuration options reference</a> for more details.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": "{\n  networks_list = [ \"192.0.2.0/24\" ];\n  gobgp = true;\n  gobgp_flow_spec_announces = true;\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fastnetmon-advanced.nix",
                    "option_name": "services.fastnetmon-advanced.traffic_db.settings",
                    "option_description": "<rendered-html><p>Additional settings for /etc/fastnetmon/traffic_db.conf</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/fcgiwrap.nix",
                    "option_name": "services.fcgiwrap.enable",
                    "option_description": "<rendered-html><p>Whether to enable fcgiwrap, a server for running CGI applications\nover FastCGI.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/fcgiwrap.nix",
                    "option_name": "services.fcgiwrap.group",
                    "option_description": "<rendered-html><p>Group permissions for the socket.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/fcgiwrap.nix",
                    "option_name": "services.fcgiwrap.preforkProcesses",
                    "option_description": "<rendered-html><p>Number of processes to prefork.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/fcgiwrap.nix",
                    "option_name": "services.fcgiwrap.socketAddress",
                    "option_description": "<rendered-html><p>Socket address. In case of a UNIX socket, this should be its\nfilesystem path.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/run/fcgiwrap.sock\"",
                    "option_example": "\"1.2.3.4:5678\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/fcgiwrap.nix",
                    "option_name": "services.fcgiwrap.socketType",
                    "option_description": "<rendered-html><p>Socket type: \u2018unix\u2019, \u2018tcp\u2019 or \u2018tcp6\u2019.</p>\n</rendered-html>",
                    "option_type": "one of \"unix\", \"tcp\", \"tcp6\"",
                    "option_default": "\"unix\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/fcgiwrap.nix",
                    "option_name": "services.fcgiwrap.user",
                    "option_description": "<rendered-html><p>User permissions for the socket.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/scheduling/fcron.nix",
                    "option_name": "services.fcron.allow",
                    "option_description": "<rendered-html><p>Users allowed to use fcrontab and fcrondyn (one name per line,\n<code>all</code> for everyone).</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"all\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/scheduling/fcron.nix",
                    "option_name": "services.fcron.deny",
                    "option_description": "<rendered-html><p>Users forbidden from using fcron.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/scheduling/fcron.nix",
                    "option_name": "services.fcron.enable",
                    "option_description": "<rendered-html><p>Whether to enable the <code class=\"interpreted-text\"\nrole=\"command\">fcron</code> daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/scheduling/fcron.nix",
                    "option_name": "services.fcron.maxSerialJobs",
                    "option_description": "<rendered-html><p>Maximum number of serial jobs which can run simultaneously.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/scheduling/fcron.nix",
                    "option_name": "services.fcron.queuelen",
                    "option_description": "<rendered-html><p>Number of jobs the serial queue and the lavg queue can contain.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/scheduling/fcron.nix",
                    "option_name": "services.fcron.systab",
                    "option_description": "<rendered-html><p>The \u201csystem\u201d crontab contents.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/felix.nix",
                    "option_name": "services.felix.bundles",
                    "option_description": "<rendered-html><p>List of bundles that should be activated on startup</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ pkgs.felix_remoteshell ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/felix.nix",
                    "option_name": "services.felix.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Apache Felix OSGi service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/felix.nix",
                    "option_name": "services.felix.group",
                    "option_description": "<rendered-html><p>Group account under which Apache Felix runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"osgi\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/felix.nix",
                    "option_name": "services.felix.user",
                    "option_description": "<rendered-html><p>User account under which Apache Felix runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"osgi\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ferm.nix",
                    "option_name": "services.ferm.config",
                    "option_description": "<rendered-html><p>Verbatim ferm.conf configuration.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "<rendered-html><p>empty firewall, allows any traffic</p>\n</rendered-html>",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ferm.nix",
                    "option_name": "services.ferm.enable",
                    "option_description": "<rendered-html><p>Whether to enable Ferm Firewall. <em>Warning</em>: Enabling this\nservice WILL disable the existing NixOS firewall! Default firewall rules\nprovided by packages are not considered at the moment.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/ferm.nix",
                    "option_name": "services.ferm.package",
                    "option_description": "<rendered-html><p>The ferm package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.ferm",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/ferretdb.nix",
                    "option_name": "services.ferretdb.enable",
                    "option_description": "<rendered-html><p>Whether to enable FerretDB, an Open Source MongoDB alternative.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/ferretdb.nix",
                    "option_name": "services.ferretdb.package",
                    "option_description": "<rendered-html><p>FerretDB package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "\"pkgs.ferretdb\"",
                    "option_example": "pkgs.ferretdb",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/ferretdb.nix",
                    "option_name": "services.ferretdb.settings",
                    "option_description": "<rendered-html><p>Additional configuration for FerretDB, see <a\nhref=\"https://docs.ferretdb.io/configuration/flags/\">https://docs.ferretdb.io/configuration/flags/</a>\nfor supported values.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": null,
                    "option_example": "{\n  FERRETDB_LOG_LEVEL = \"warn\";\n  FERRETDB_MODE = \"normal\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/filebeat.nix",
                    "option_name": "services.filebeat.enable",
                    "option_description": "<rendered-html><p>Whether to enable filebeat.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/filebeat.nix",
                    "option_name": "services.filebeat.inputs",
                    "option_description": "<rendered-html><p>Inputs specify how Filebeat locates and processes input data.</p>\n<p>This is like <code>services.filebeat.settings.filebeat.inputs</code>,\nbut structured as an attribute set. This has the benefit that multiple\nNixOS modules can contribute settings to a single filebeat input.</p>\n<p>An input type can be specified multiple times by choosing a different\n<code>&lt;name&gt;</code> for each, but setting <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.filebeat.inputs.&lt;name&gt;.type&amp;query=services.filebeat.inputs.&lt;name&gt;.type\">services.filebeat.inputs.&lt;name&gt;.type</a>\nto the same value.</p>\n<p>See <a\nhref=\"https://www.elastic.co/guide/en/beats/filebeat/current/configuration-filebeat-options.html\">https://www.elastic.co/guide/en/beats/filebeat/current/configuration-filebeat-options.html</a>.</p>\n</rendered-html>",
                    "option_type": "attribute set of (JSON value)",
                    "option_default": "{ }",
                    "option_example": "{\n  journald.id = \"everything\";  # Only for filebeat7\n  log = {\n    enabled = true;\n    paths = [\n      \"/var/log/*.log\"\n    ];\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/filebeat.nix",
                    "option_name": "services.filebeat.inputs.<name>.type",
                    "option_description": "<rendered-html><p>The input type.</p>\n<p>Look for the value after <code>type:</code> on the individual input\npages linked from <a\nhref=\"https://www.elastic.co/guide/en/beats/filebeat/current/configuration-filebeat-options.html\">https://www.elastic.co/guide/en/beats/filebeat/current/configuration-filebeat-options.html</a>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/filebeat.nix",
                    "option_name": "services.filebeat.modules",
                    "option_description": "<rendered-html><p>Filebeat modules provide a quick way to get started processing common\nlog formats. They contain default configurations, Elasticsearch ingest\npipeline definitions, and Kibana dashboards to help you implement and\ndeploy a log monitoring solution.</p>\n<p>This is like\n<code>services.filebeat.settings.filebeat.modules</code>, but structured\nas an attribute set. This has the benefit that multiple NixOS modules\ncan contribute settings to a single filebeat module.</p>\n<p>A module can be specified multiple times by choosing a different\n<code>&lt;name&gt;</code> for each, but setting <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.filebeat.modules.&lt;name&gt;.module&amp;query=services.filebeat.modules.&lt;name&gt;.module\">services.filebeat.modules.&lt;name&gt;.module</a>\nto the same value.</p>\n<p>See <a\nhref=\"https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-modules.html\">https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-modules.html</a>.</p>\n</rendered-html>",
                    "option_type": "attribute set of (JSON value)",
                    "option_default": "{ }",
                    "option_example": "{\n  nginx = {\n    access = {\n      enabled = true;\n      var.paths = [ \"/path/to/log/nginx/access.log*\" ];\n    };\n    error = {\n      enabled = true;\n      var.paths = [ \"/path/to/log/nginx/error.log*\" ];\n    };\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/filebeat.nix",
                    "option_name": "services.filebeat.modules.<name>.module",
                    "option_description": "<rendered-html><p>The name of the module.</p>\n<p>Look for the value after <code>module:</code> on the individual input\npages linked from <a\nhref=\"https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-modules.html\">https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-modules.html</a>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/filebeat.nix",
                    "option_name": "services.filebeat.package",
                    "option_description": "<rendered-html><p>The filebeat package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.filebeat",
                    "option_example": "filebeat7",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/filebeat.nix",
                    "option_name": "services.filebeat.settings",
                    "option_description": "<rendered-html><p>Configuration for filebeat. See <a\nhref=\"https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-reference-yml.html\">https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-reference-yml.html</a>\nfor supported values.</p>\n<p>Options containing secret data should be set to an attribute set\ncontaining the attribute <code>_secret</code> - a string pointing to a\nfile containing the value the option should be set to. See the example\nto get a better picture of this: in the resulting <code\nclass=\"interpreted-text\" role=\"file\">filebeat.yml</code> file, the\n<code>output.elasticsearch.password</code> key will be set to the\ncontents of the <code class=\"interpreted-text\"\nrole=\"file\">/var/keys/elasticsearch_password</code> file.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": "{\n  settings = {\n    output.elasticsearch = {\n      hosts = [ \"myEShost:9200\" ];\n      username = \"filebeat_internal\";\n      password = { _secret = \"/var/keys/elasticsearch_password\"; };\n    };\n    logging.level = \"info\";\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/filebeat.nix",
                    "option_name": "services.filebeat.settings.output.elasticsearch.hosts",
                    "option_description": "<rendered-html><p>The list of Elasticsearch nodes to connect to.</p>\n<p>The events are distributed to these nodes in round robin order. If\none node becomes unreachable, the event is automatically sent to another\nnode. Each Elasticsearch node can be defined as a URL or IP:PORT. For\nexample: <code>http://192.15.3.2</code>,\n<code>https://es.found.io:9230</code> or <code>192.24.3.2:9300</code>.\nIf no port is specified, <code>9200</code> is used.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"127.0.0.1:9200\"\n]",
                    "option_example": "[\n  \"myEShost:9200\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.configureNginx",
                    "option_description": "<rendered-html><p>Configure nginx as a reverse proxy for FileSender.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.database.createLocally",
                    "option_description": "<rendered-html><p>Create the PostgreSQL database and database user locally.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.database.hostname",
                    "option_description": "<rendered-html><p>Database hostname.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/run/postgresql\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.database.name",
                    "option_description": "<rendered-html><p>Database name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"filesender\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.database.passwordFile",
                    "option_description": "<rendered-html><p>A file containing the password corresponding to <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.filesender.database.user&amp;query=services.filesender.database.user\">services.filesender.database.user</a>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/filesender-dbpassword\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.database.port",
                    "option_description": "<rendered-html><p>Database port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5432",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.database.user",
                    "option_description": "<rendered-html><p>Database user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"filesender\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.enable",
                    "option_description": "<rendered-html><p>Whether to enable FileSender.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.localDomain",
                    "option_description": "<rendered-html><p>The domain serving your FileSender instance.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"filesender.example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.package",
                    "option_description": "<rendered-html><p>The filesender package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.filesender",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.poolSettings",
                    "option_description": "<rendered-html><p>Options for FileSender\u2019s PHP pool. See the documentation on\n<code>php-fpm.conf</code> for details on configuration directives.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer or boolean)",
                    "option_default": "{\n  pm = \"dynamic\";\n  \"pm.max_children\" = \"32\";\n  \"pm.max_requests\" = \"500\";\n  \"pm.max_spare_servers\" = \"4\";\n  \"pm.min_spare_servers\" = \"2\";\n  \"pm.start_servers\" = \"2\";\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.settings",
                    "option_description": "<rendered-html><p>Configuration options used by FileSender. See <a\nhref=\"https://docs.filesender.org/filesender/v2.0/admin/configuration/\"></a>\nfor available options.</p>\n</rendered-html>",
                    "option_type": "PHP value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.settings.admin",
                    "option_description": "<rendered-html><p>UIDs (as per the configured saml_uid_attribute) of FileSender\nadministrators. Accounts with these UIDs can access the Admin page\nthrough the web UI.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \",\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.settings.admin_email",
                    "option_description": "<rendered-html><p>Email address of FileSender administrator(s). Emails regarding disk\nfull etc. are sent here. You should use a role-address here.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \",\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.settings.log_facilities",
                    "option_description": "<rendered-html><p>Defines where FileSender logging is sent. You can sent logging to a\nfile, to syslog or to the default PHP log facility (as configured\nthrough your webserver\u2019s PHP module). The directive takes an array of\none or more logging targets. Logging can be sent to multiple targets\nsimultaneously. Each logging target is a list containing the name of the\nlogging target and a number of attributes which vary per log target. See\nbelow for the exact definiation of each log target.</p>\n</rendered-html>",
                    "option_type": "PHP value",
                    "option_default": "[\n  {\n    type = \"error_log\";\n  }\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.settings.site_url",
                    "option_description": "<rendered-html><p>Site URL. Used in emails, to build URLs for logging in, logging out,\nbuild URL for upload endpoint for web workers, to include scripts\netc.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.settings.storage_filesystem_path",
                    "option_description": "<rendered-html><p>When using storage type filesystem this is the absolute path to the\nfile system where uploaded files are stored until they expire. Your\nFileSender storage root.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/filesender.nix",
                    "option_name": "services.filesender.user",
                    "option_description": "<rendered-html><p>User under which filesender runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"filesender\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/firebird.nix",
                    "option_name": "services.firebird.baseDir",
                    "option_description": "<rendered-html><p>Location containing data/ and system/ directories. data/ stores the\ndatabases, system/ stores the password database security2.fdb.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/firebird\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/firebird.nix",
                    "option_name": "services.firebird.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Firebird super server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/firebird.nix",
                    "option_name": "services.firebird.package",
                    "option_description": "<rendered-html><p>The firebird package to use. For SuperServer use override:\n<code>pkgs.firebird_3.override { superServer = true; };</code></p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.firebird",
                    "option_example": "firebird_3",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/firebird.nix",
                    "option_name": "services.firebird.port",
                    "option_description": "<rendered-html><p>Port Firebird uses.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3050",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/firebird.nix",
                    "option_name": "services.firebird.user",
                    "option_description": "<rendered-html><p>User account under which firebird runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"firebird\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.dataDir",
                    "option_description": "<rendered-html><p>The place where firefly-iii stores its state.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/firefly-iii\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.enable",
                    "option_description": "<rendered-html><p>Whether to enable Firefly III: A free and open source personal\nfinance manager.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.enableNginx",
                    "option_description": "<rendered-html><p>Whether to enable nginx or not. If enabled, an nginx virtual host\nwill be created for access to firefly-iii. If not enabled, then you may\nuse <code>${config.services.firefly-iii.package}</code> as your document\nroot in whichever webserver you wish to setup.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.group",
                    "option_description": "<rendered-html><p>Group under which firefly-iii runs. It is best to set this to the\ngroup of whatever webserver is being used as the frontend.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"If `services.firefly-iii.enableNginx` is true then `nginx` else firefly-iii\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.package",
                    "option_description": "<rendered-html><p>The firefly-iii package served by php-fpm and the webserver of\nchoice. This option can be used to point the webserver to the correct\nroot. It may also be used to set the package to a different version, say\na development version.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.firefly-iii",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.poolConfig",
                    "option_description": "<rendered-html><p>Options for the Firefly III PHP pool. See the documentation on\n<literal>php-fpm.conf</literal> for details on configuration\ndirectives.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer or boolean)",
                    "option_default": "{\n  pm = \"dynamic\";\n  \"pm.max_children\" = 32;\n  \"pm.max_requests\" = 500;\n  \"pm.max_spare_servers\" = 4;\n  \"pm.min_spare_servers\" = 2;\n  \"pm.start_servers\" = 2;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.settings",
                    "option_description": "<rendered-html><p>Options for firefly-iii configuration. Refer to <a\nhref=\"https://github.com/firefly-iii/firefly-iii/blob/main/.env.example\">https://github.com/firefly-iii/firefly-iii/blob/main/.env.example</a>\nfor details on supported values. All <option>_FILE values supported by\nupstream are supported here.</p>\n<p>APP_URL will be the same as\n<code>services.firefly-iii.virtualHost</code> if the former is unset in\n<code>services.firefly-iii.settings</code>.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer or boolean)",
                    "option_default": "{ }",
                    "option_example": "{\n  APP_ENV = \"production\";\n  APP_KEY_FILE = \"/var/secrets/firefly-iii-app-key.txt\";\n  SITE_OWNER = \"mail@example.com\";\n  DB_CONNECTION = \"mysql\";\n  DB_HOST = \"db\";\n  DB_PORT = 3306;\n  DB_DATABASE = \"firefly\";\n  DB_USERNAME = \"firefly\";\n  DB_PASSWORD_FILE = \"/var/secrets/firefly-iii-mysql-password.txt;\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.settings.APP_ENV",
                    "option_description": "<rendered-html><p>The app environment. It is recommended to keep this at \u201clocal\u201d.\nPossible values are \u201clocal\u201d, \u201cproduction\u201d and \u201ctesting\u201d</p>\n</rendered-html>",
                    "option_type": "one of \"local\", \"production\", \"testing\"",
                    "option_default": "\"local\"",
                    "option_example": "\"production\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.settings.APP_KEY_FILE",
                    "option_description": "<rendered-html><p>The path to your appkey. The file should contain a 32 character\nrandom app key. This may be set using\n<code>echo \"base64:$(head -c 32 /dev/urandom | base64)\" &gt; /path/to/key-file</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.settings.APP_URL",
                    "option_description": "<rendered-html><p>The APP_URL used by firefly-iii internally. Please make sure this URL\nmatches the external URL of your Firefly III installation. It is used to\nvalidate specific requests and to generate URLs in emails.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "''\n  http(s)://''${config.services.firefly-iii.virtualHost}\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.settings.DB_CONNECTION",
                    "option_description": "<rendered-html><p>The type of database you wish to use. Can be one of \u201csqlite\u201d, \u201cmysql\u201d\nor \u201cpgsql\u201d.</p>\n</rendered-html>",
                    "option_type": "one of \"sqlite\", \"pgsql\", \"mysql\"",
                    "option_default": "\"sqlite\"",
                    "option_example": "\"pgsql\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.settings.DB_HOST",
                    "option_description": "<rendered-html><p>The machine which hosts your database. This is left at the default\nvalue for \u201cmysql\u201d because we use the \u201cDB_SOCKET\u201d option to connect to a\nunix socket instead. \u201cpgsql\u201d requires that the unix socket location be\nspecified here instead of at \u201cDB_SOCKET\u201d. This option does not affect\n\u201csqlite\u201d.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "''\n  \"localhost\" if DB_CONNECTION is \"sqlite\" or \"mysql\", \"/run/postgresql\" if \"pgsql\".\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.settings.DB_PORT",
                    "option_description": "<rendered-html><p>The port your database is listening at. sqlite does not require this\nvalue to be filled.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "''\n  `null` if DB_CONNECTION is \"sqlite\", `3306` if \"mysql\", `5432` if \"pgsql\"\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.user",
                    "option_description": "<rendered-html><p>User account under which firefly-iii runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"firefly-iii\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/firefly-iii.nix",
                    "option_name": "services.firefly-iii.virtualHost",
                    "option_description": "<rendered-html><p>The hostname at which you wish firefly-iii to be served. If you have\nenabled nginx using <code>services.firefly-iii.enableNginx</code> then\nthis will be used.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.database.createLocally",
                    "option_description": "<rendered-html><p>Whether to create database and user on the local machine if they do\nnot exist. This includes enabling unix domain socket authentication for\nthe configured user.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.database.host",
                    "option_description": "<rendered-html><p>Database host name. <code>localhost</code> is treated specially and\ninserts systemd dependencies, other hostnames or IP addresses of the\nlocal machine do not.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.database.name",
                    "option_description": "<rendered-html><p>Database to use for storage. Will be created automatically if it does\nnot exist and\n<code>config.services.firefox-syncserver.database.createLocally</code>\nis set.</p>\n</rendered-html>",
                    "option_type": "string matching the pattern [a-z_][a-z0-9_]*",
                    "option_default": "\"firefox_syncserver\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.database.user",
                    "option_description": "<rendered-html><p>Username for database connections.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"firefox-syncserver\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Firefox Sync storage service.</p>\n<p>Out of the box this will not be very useful unless you also configure\nat least one service and one nodes by inserting them into the mysql\ndatabase manually, e.g. by running</p>\n<pre><code>  INSERT INTO `services` (`id`, `service`, `pattern`) VALUES (&#39;1&#39;, &#39;sync-1.5&#39;, &#39;{node}/1.5/{uid}&#39;);\n  INSERT INTO `nodes` (`id`, `service`, `node`, `available`, `current_load`,\n      `capacity`, `downed`, `backoff`)\n    VALUES (&#39;1&#39;, &#39;1&#39;, &#39;https://mydomain.tld&#39;, &#39;1&#39;, &#39;0&#39;, &#39;10&#39;, &#39;0&#39;, &#39;0&#39;);</code></pre>\n<p><code class=\"interpreted-text\"\nrole=\"option\">services.firefox-syncserver.singleNode.enable</code> does\nthis automatically when enabled .</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.logLevel",
                    "option_description": "<rendered-html><p>Log level to run with. This can be a simple log level like\n<code>error</code> or <code>trace</code>, or a more complicated logging\nexpression.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"error\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.package",
                    "option_description": "<rendered-html><p>Package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.syncstorage-rs",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.secrets",
                    "option_description": "<rendered-html><p>A file containing the various secrets. Should be in the format\nexpected by systemd\u2019s <code>EnvironmentFile</code> directory. Two\nsecrets are currently available: <code>SYNC_MASTER_SECRET</code> and\n<code>SYNC_TOKENSERVER__FXA_METRICS_HASH_SECRET</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.settings",
                    "option_description": "<rendered-html><p>Settings for the sync server. These take priority over values\ncomputed from NixOS options.</p>\n<p>See the example config in <a\nhref=\"https://github.com/mozilla-services/syncstorage-rs/blob/master/config/local.example.toml\">https://github.com/mozilla-services/syncstorage-rs/blob/master/config/local.example.toml</a>\nand the doc comments on the <code>Settings</code> structs in <a\nhref=\"https://github.com/mozilla-services/syncstorage-rs/blob/master/syncstorage-settings/src/lib.rs\">https://github.com/mozilla-services/syncstorage-rs/blob/master/syncstorage-settings/src/lib.rs</a>\nand <a\nhref=\"https://github.com/mozilla-services/syncstorage-rs/blob/master/tokenserver-settings/src/lib.rs\">https://github.com/mozilla-services/syncstorage-rs/blob/master/tokenserver-settings/src/lib.rs</a>\nfor available options.</p>\n</rendered-html>",
                    "option_type": "TOML value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.settings.port",
                    "option_description": "<rendered-html><p>Port to bind to.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.settings.tokenserver.enabled",
                    "option_description": "<rendered-html><p>Whether to enable the token service as well.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.singleNode.capacity",
                    "option_description": "<rendered-html><p>How many sync accounts are allowed on this server. Setting this value\nequal to or less than the number of currently active accounts will\neffectively deny service to accounts not yet registered here.</p>\n</rendered-html>",
                    "option_type": "unsigned integer, meaning >=0",
                    "option_default": "10",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.singleNode.enable",
                    "option_description": "<rendered-html><p>Whether to enable auto-configuration for a simple single-node\nsetup.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.singleNode.enableNginx",
                    "option_description": "<rendered-html><p>Whether to enable nginx virtualhost definitions.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.singleNode.enableTLS",
                    "option_description": "<rendered-html><p>Whether to enable automatic TLS setup.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.singleNode.hostname",
                    "option_description": "<rendered-html><p>Host name to use for this service.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/firefox-syncserver.nix",
                    "option_name": "services.firefox-syncserver.singleNode.url",
                    "option_description": "<rendered-html><p>URL of the host. If you are not using the automatic webserver proxy\nsetup you will have to change this setting or your sync server may not\nbe functional.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "${if cfg.singleNode.enableTLS then \"https\" else \"http\"}://${config.services.firefox-syncserver.singleNode.hostname}\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fireqos.nix",
                    "option_name": "services.fireqos.config",
                    "option_description": "<rendered-html><p>The FireQOS configuration goes here.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "''\n  interface wlp3s0 world-in input rate 10mbit ethernet\n    class web commit 50kbit\n      match tcp ports 80,443\n  \n  interface wlp3s0 world-out input rate 10mbit ethernet\n    class web commit 50kbit\n      match tcp ports 80,443\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/fireqos.nix",
                    "option_name": "services.fireqos.enable",
                    "option_description": "<rendered-html><p>If enabled, FireQOS will be launched with the specified configuration\ngiven in <code>config</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.backend",
                    "option_description": "<rendered-html><p>Type of backend to use and specific configurations for that\nbackend.</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{\n  Type = \"vxlan\";\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.enable",
                    "option_description": "<rendered-html><p>Whether to enable flannel.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.etcd.caFile",
                    "option_description": "<rendered-html><p>Etcd certificate authority file</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.etcd.certFile",
                    "option_description": "<rendered-html><p>Etcd cert file</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.etcd.endpoints",
                    "option_description": "<rendered-html><p>Etcd endpoints</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"http://127.0.0.1:2379\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.etcd.keyFile",
                    "option_description": "<rendered-html><p>Etcd key file</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.etcd.prefix",
                    "option_description": "<rendered-html><p>Etcd key prefix</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/coreos.com/network\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.iface",
                    "option_description": "<rendered-html><p>Interface to use (IP or name) for inter-host communication. Defaults\nto the interface for the default route on the machine.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.kubeconfig",
                    "option_description": "<rendered-html><p>Path to kubeconfig to use for storing flannel config using the\nKubernetes API</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.network",
                    "option_description": "<rendered-html><p>IPv4 network in CIDR format to use for the entire flannel\nnetwork.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.nodeName",
                    "option_description": "<rendered-html><p>Needed when running with Kubernetes as backend as this cannot be\nauto-detected\u201c;</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "config.networking.fqdnOrHostName",
                    "option_example": "\"node1.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.package",
                    "option_description": "<rendered-html><p>The flannel package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.flannel",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.publicIp",
                    "option_description": "<rendered-html><p>IP accessible by other nodes for inter-host communication. Defaults\nto the IP of the interface being used for communication.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.storageBackend",
                    "option_description": "<rendered-html><p>Determines where flannel stores its configuration at runtime</p>\n</rendered-html>",
                    "option_type": "one of \"etcd\", \"kubernetes\"",
                    "option_default": "\"etcd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.subnetLen",
                    "option_description": "<rendered-html><p>The size of the subnet allocated to each host. Defaults to 24 (i.e.\n/24) unless the Network was configured to be smaller than a /24 in which\ncase it is one less than the network.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "24",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.subnetMax",
                    "option_description": "<rendered-html><p>The end of IP range which the subnet allocation should start with.\nDefaults to the last subnet of Network.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/flannel.nix",
                    "option_name": "services.flannel.subnetMin",
                    "option_description": "<rendered-html><p>The beginning of IP range which the subnet allocation should start\nwith. Defaults to the first subnet of Network.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.adminEmail",
                    "option_description": "<rendered-html><p>Email for first web application administrator</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"admin@example.com\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.adminUser",
                    "option_description": "<rendered-html><p>Username for first web application administrator</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"flarum\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.baseUrl",
                    "option_description": "<rendered-html><p>Change <code>domain</code> instead.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"http://localhost\"",
                    "option_example": "\"https://forum.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.createDatabaseLocally",
                    "option_description": "<rendered-html><p>Create the database and database user locally, and run\ninstallation.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.database",
                    "option_description": "<rendered-html><p>MySQL database parameters</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or boolean or signed integer)",
                    "option_default": "{\n  database = \"flarum\";\n  driver = \"mysql\";\n  host = \"localhost\";\n  password = \"\";\n  port = 3306;\n  prefix = \"\";\n  strict = false;\n  username = \"flarum\";\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.domain",
                    "option_description": "<rendered-html><p>Domain to serve on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": "\"forum.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.enable",
                    "option_description": "<rendered-html><p>Whether to enable Flarum discussion platform.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.forumTitle",
                    "option_description": "<rendered-html><p>Title of the forum.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"A Flarum Forum on NixOS\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.group",
                    "option_description": "<rendered-html><p>System group to run Flarum</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"flarum\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.initialAdminPassword",
                    "option_description": "<rendered-html><p>Initial password for the adminUser</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"flarum\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.package",
                    "option_description": "<rendered-html><p>The flarum package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.flarum",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.stateDir",
                    "option_description": "<rendered-html><p>Home directory for writable storage</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/flarum\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/flarum.nix",
                    "option_name": "services.flarum.user",
                    "option_description": "<rendered-html><p>System user to run Flarum</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"flarum\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/flatpak.nix",
                    "option_name": "services.flatpak.enable",
                    "option_description": "<rendered-html><p>Whether to enable flatpak.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flexget.nix",
                    "option_name": "services.flexget.config",
                    "option_description": "<rendered-html><p>The YAML configuration for FlexGet.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flexget.nix",
                    "option_name": "services.flexget.enable",
                    "option_description": "<rendered-html><p>Whether to enable FlexGet daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flexget.nix",
                    "option_name": "services.flexget.homeDir",
                    "option_description": "<rendered-html><p>Where files live.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/deluge\"",
                    "option_example": "\"/home/flexget\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flexget.nix",
                    "option_name": "services.flexget.interval",
                    "option_description": "<rendered-html><p>When to perform a <code class=\"interpreted-text\"\nrole=\"command\">flexget</code> run. See <code class=\"interpreted-text\"\nrole=\"command\">man 7 systemd.time</code> for the format.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"10m\"",
                    "option_example": "\"1h\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flexget.nix",
                    "option_name": "services.flexget.package",
                    "option_description": "<rendered-html><p>The flexget package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.flexget",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flexget.nix",
                    "option_name": "services.flexget.systemScheduler",
                    "option_description": "<rendered-html><p>When true, execute the runs via the flexget-runner.timer. If false,\nyou have to specify the settings yourself in the YML file.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "false",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flexget.nix",
                    "option_name": "services.flexget.user",
                    "option_description": "<rendered-html><p>The user under which to run flexget.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"deluge\"",
                    "option_example": "\"some_user\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flood.nix",
                    "option_name": "services.flood.enable",
                    "option_description": "<rendered-html><p>Whether to enable flood.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flood.nix",
                    "option_name": "services.flood.extraArgs",
                    "option_description": "<rendered-html><p>Extra arguments passed to <code>flood</code>.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--baseuri=/\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flood.nix",
                    "option_name": "services.flood.host",
                    "option_description": "<rendered-html><p>Host to bind webserver.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": "\"::\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flood.nix",
                    "option_name": "services.flood.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open the firewall for the port in <code\nclass=\"interpreted-text\" role=\"option\">services.flood.port</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flood.nix",
                    "option_name": "services.flood.package",
                    "option_description": "<rendered-html><p>The flood package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.flood",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/torrent/flood.nix",
                    "option_name": "services.flood.port",
                    "option_description": "<rendered-html><p>Port to bind webserver.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "3000",
                    "option_example": "3001",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/fluentd.nix",
                    "option_name": "services.fluentd.config",
                    "option_description": "<rendered-html><p>Fluentd config.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/fluentd.nix",
                    "option_name": "services.fluentd.enable",
                    "option_description": "<rendered-html><p>Whether to enable fluentd, a data/log collector.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/fluentd.nix",
                    "option_name": "services.fluentd.package",
                    "option_description": "<rendered-html><p>The fluentd package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.fluentd",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/fluentd.nix",
                    "option_name": "services.fluentd.plugins",
                    "option_description": "<rendered-html><p>A list of plugin paths to pass into fluentd. It will make plugins\ndefined in ruby files there available in your config.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.enable",
                    "option_description": "<rendered-html><p>Whether to enable Fluidd, a Klipper web interface for managing your\n3d printer.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.hostName",
                    "option_description": "<rendered-html><p>Hostname to serve fluidd on</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx",
                    "option_description": "<rendered-html><p>Extra configuration for the nginx virtual host of fluidd.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{ }",
                    "option_example": "{\n  serverAliases = [ \"fluidd.${config.networking.domain}\" ];\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.acmeFallbackHost",
                    "option_description": "<rendered-html><p>Host which to proxy requests to if ACME challenge is not found.\nUseful if you want multiple hosts to be able to verify the same domain\nname.</p>\n<p>With this option, you could request certificates for the present\ndomain with an ACME client that is running on another host, which you\nwould specify here.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.acmeRoot",
                    "option_description": "<rendered-html><p>Directory for the ACME challenge, which is <strong>public</strong>.\nDon\u2019t put certs or keys in here. Set to null to inherit from\nconfig.security.acme.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"/var/lib/acme/acme-challenge\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.addSSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS in addition to plain HTTP. This will set\ndefaults for <code>listen</code> to listen on all interfaces on the\nrespective default ports (80, 443).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.default",
                    "option_description": "<rendered-html><p>Makes this vhost the default.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.enableACME",
                    "option_description": "<rendered-html><p>Whether to ask Let\u2019s Encrypt to sign a certificate for this vhost.\nAlternately, you can use an existing certificate through <code\nclass=\"interpreted-text\" role=\"option\">useACMEHost</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the vhost verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.forceSSL",
                    "option_description": "<rendered-html><p>Whether to add a separate nginx server block that redirects (defaults\nto 301, configurable with <code>redirectCode</code>) all plain HTTP\ntraffic to HTTPS. This will set defaults for <code>listen</code> to\nlisten on all interfaces on the respective default ports (80, 443),\nwhere the non-SSL listens are used for the redirect vhosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.globalRedirect",
                    "option_description": "<rendered-html><p>If set, all requests for this host are redirected (defaults to 301,\nconfigurable with <code>redirectCode</code>) to the given hostname.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"newserver.example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.http2",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/2 protocol. Note that (as of writing) due\nto nginx\u2019s implementation, to disable HTTP/2 you have to disable it on\nall vhosts that use a given IP address / port. If there is one server\nblock configured to enable http2, then it is enabled for all server\nblocks on this IP. See <a\nhref=\"https://stackoverflow.com/a/39466948/263061\">https://stackoverflow.com/a/39466948/263061</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.http3",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/3 protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat HTTP/3 support is experimental and <em>not</em> yet recommended for\nproduction. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a> HTTP/3\navailability must be manually advertised, preferably in each location\nblock.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.http3_hq",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/0.9 protocol negotiation used in QUIC\ninteroperability tests. This requires using <code>pkgs.nginxQuic</code>\npackage which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat special application protocol support is experimental and\n<em>not</em> yet recommended for production. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.kTLS",
                    "option_description": "<rendered-html><p>Whether to enable kTLS support. Implementing TLS in the kernel (kTLS)\nimproves performance by significantly reducing the need for copying\noperations between user space and the kernel. Required Nginx version\n1.21.4 or later.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.listen",
                    "option_description": "<rendered-html><p>Listen addresses and ports for this virtual host. IPv6 addresses must\nbe enclosed in square brackets. Note: this option overrides\n<code>addSSL</code> and <code>onlySSL</code>.</p>\n<p>If you only want to set the addresses manually and not the ports,\ntake a look at <code>listenAddresses</code>.</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    addr = \"195.154.1.1\";\n    port = 443;\n    ssl = true;\n  }\n  {\n    addr = \"192.154.1.1\";\n    port = 80;\n  }\n  {\n    addr = \"unix:/var/run/nginx.sock\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHTee",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.listen.*.addr",
                    "option_description": "<rendered-html><p>Listen address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHTef",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.listen.*.extraParameters",
                    "option_description": "<rendered-html><p>Extra parameters of this listen directive.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"backlog=1024\"\n  \"deferred\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHTef",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.listen.*.port",
                    "option_description": "<rendered-html><p>Port number to listen on. If unset and the listen address is not a\nsocket then nginx defaults to 80.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.listen.*.proxyProtocol",
                    "option_description": "<rendered-html><p>Enable PROXY protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.listen.*.ssl",
                    "option_description": "<rendered-html><p>Enable SSL.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.listenAddresses",
                    "option_description": "<rendered-html><p>Listen addresses for this virtual host. Compared to\n<code>listen</code> this only sets the addresses and the ports are\nchosen automatically.</p>\n<p>Note: This option overrides <code>enableIPv6</code></p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"127.0.0.1\"\n  \"[::1]\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations",
                    "option_description": "<rendered-html><p>Declarative location config</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  \"/\" = {\n    proxyPass = \"http://localhost:3000\";\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.alias",
                    "option_description": "<rendered-html><p>Alias directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/alias/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the location verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.fastcgiParams",
                    "option_description": "<rendered-html><p>FastCGI parameters to override. Unlike in the Nginx configuration\nfile, overriding only some default parameters won\u2019t unset the default\nvalues for other parameters.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or path)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.index",
                    "option_description": "<rendered-html><p>Adds index directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"index.php index.html\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.priority",
                    "option_description": "<rendered-html><p>Order of this location block in relation to the others in the vhost.\nThe semantics are the same as with <code>lib.mkOrder</code>. Smaller\nvalues have a greater priority.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.proxyPass",
                    "option_description": "<rendered-html><p>Adds proxy_pass directive and sets recommended proxy headers if\nrecommendedProxySettings is enabled.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"http://www.example.org/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.proxyWebsockets",
                    "option_description": "<rendered-html><p>Whether to support proxying websocket connections with HTTP/1.1.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.recommendedProxySettings",
                    "option_description": "<rendered-html><p>Enable recommended proxy settings.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.nginx.recommendedProxySettings",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.return",
                    "option_description": "<rendered-html><p>Adds a return directive, for e.g. redirections.</p>\n</rendered-html>",
                    "option_type": "null or string or signed integer",
                    "option_default": "null",
                    "option_example": "\"301 http://example.com$request_uri\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.root",
                    "option_description": "<rendered-html><p>Root directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/root/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.locations.<name>.tryFiles",
                    "option_description": "<rendered-html><p>Adds try_files directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"$uri =404\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.onlySSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS and reject plain HTTP connections. This will\nset defaults for <code>listen</code> to listen on all interfaces on port\n443.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.quic",
                    "option_description": "<rendered-html><p>Whether to enable the QUIC transport protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code>. Note that QUIC\nsupport is experimental and <em>not</em> yet recommended for production.\nRead more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.redirectCode",
                    "option_description": "<rendered-html><p>HTTP status used by <code>globalRedirect</code> and\n<code>forceSSL</code>. Possible usecases include temporary (302, 307)\nredirects, keeping the request method and body (307, 308), or explicitly\nresetting the method to GET (303). See <a\nhref=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections</a>.</p>\n</rendered-html>",
                    "option_type": "integer between 300 and 399 (both inclusive)",
                    "option_default": "301",
                    "option_example": "308",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.rejectSSL",
                    "option_description": "<rendered-html><p>Whether to listen for and reject all HTTPS connections to this vhost.\nUseful in <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.virtualHosts.&lt;name&gt;.default&amp;query=services.nginx.virtualHosts.&lt;name&gt;.default\">default</a>\nserver blocks to avoid serving the certificate for another vhost. Uses\nthe <code>ssl_reject_handshake</code> directive available in nginx\nversions 1.19.4 and above.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.reuseport",
                    "option_description": "<rendered-html><p>Create an individual listening socket . It is required to specify\nonly once on one of the hosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.root",
                    "option_description": "<rendered-html><p>The path of the web root directory.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/data/webserver/docs\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.serverAliases",
                    "option_description": "<rendered-html><p>Additional names of virtual hosts served by this virtual host\nconfiguration.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"www.example.org\"\n  \"example.org\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.serverName",
                    "option_description": "<rendered-html><p>Name of this virtual host. Defaults to attribute name in\nvirtualHosts.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.sslCertificate",
                    "option_description": "<rendered-html><p>Path to server SSL certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.cert\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.sslCertificateKey",
                    "option_description": "<rendered-html><p>Path to server SSL certificate key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.sslTrustedCertificate",
                    "option_description": "<rendered-html><p>Path to root SSL certificate for stapling and client\ncertificates.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.nginx.useACMEHost",
                    "option_description": "<rendered-html><p>A host of an existing Let\u2019s Encrypt certificate to use. This is\nuseful if you have many subdomains and want to avoid hitting the <a\nhref=\"https://letsencrypt.org/docs/rate-limits\">rate limit</a>.\nAlternately, you can generate a certificate through <code\nclass=\"interpreted-text\" role=\"option\">enableACME</code>. <em>Note that\nthis option does not create any certificates, nor it does add subdomains\nto existing ones \u2013 you will need to create them manually using <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=security.acme.certs&amp;query=security.acme.certs\">security.acme.certs</a>.</em></p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/fluidd.nix",
                    "option_name": "services.fluidd.package",
                    "option_description": "<rendered-html><p>The fluidd package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.fluidd",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/foldingathome/client.nix",
                    "option_name": "services.foldingathome.daemonNiceLevel",
                    "option_description": "<rendered-html><p>Daemon process priority for FAHClient. 0 is the default Unix process\npriority, 19 is the lowest.</p>\n</rendered-html>",
                    "option_type": "integer between -20 and 19 (both inclusive)",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/foldingathome/client.nix",
                    "option_name": "services.foldingathome.enable",
                    "option_description": "<rendered-html><p>Whether to enable Folding@home client.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/foldingathome/client.nix",
                    "option_name": "services.foldingathome.extraArgs",
                    "option_description": "<rendered-html><p>Extra startup options for the FAHClient. Run\n<code>fah-client --help</code> to find all the available options.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/foldingathome/client.nix",
                    "option_name": "services.foldingathome.package",
                    "option_description": "<rendered-html><p>The fahclient package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.fahclient",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/foldingathome/client.nix",
                    "option_name": "services.foldingathome.team",
                    "option_description": "<rendered-html><p>The team ID associated with the reported computation results. This\nwill be used in the ranking statistics.</p>\n<p>By default, use the NixOS folding@home team ID is being used.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "236565",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/foldingathome/client.nix",
                    "option_name": "services.foldingathome.user",
                    "option_description": "<rendered-html><p>The user associated with the reported computation results. This will\nbe used in the ranking statistics.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.customDir",
                    "option_description": "<rendered-html><p>Base directory for custom templates and other options.</p>\n<p>If <code class=\"interpreted-text\"\nrole=\"option\">services.forgejo.useWizard</code> is disabled (default),\nthis directory will also hold secrets and the resulting <code\nclass=\"interpreted-text\" role=\"file\">app.ini</code> config at\nruntime.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.services.forgejo.stateDir}/custom\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.database.createDatabase",
                    "option_description": "<rendered-html><p>Whether to create a local database automatically.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.database.host",
                    "option_description": "<rendered-html><p>Database host address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.database.name",
                    "option_description": "<rendered-html><p>Database name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"forgejo\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.database.passwordFile",
                    "option_description": "<rendered-html><p>A file containing the password corresponding to <code\nclass=\"interpreted-text\"\nrole=\"option\">services.forgejo.database.user</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/forgejo-dbpassword\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.database.path",
                    "option_description": "<rendered-html><p>Path to the sqlite3 database file.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.services.forgejo.stateDir}/data/forgejo.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.database.port",
                    "option_description": "<rendered-html><p>Database host port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "if config.services.forgejo.database.type != \"postgresql\"\nthen 3306\nelse 5432\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.database.socket",
                    "option_description": "<rendered-html><p>Path to the unix socket file to use for authentication.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/mysqld/mysqld.sock\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.database.type",
                    "option_description": "<rendered-html><p>Database engine to use.</p>\n</rendered-html>",
                    "option_type": "one of \"sqlite3\", \"mysql\", \"postgres\"",
                    "option_default": "\"sqlite3\"",
                    "option_example": "\"mysql\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.database.user",
                    "option_description": "<rendered-html><p>Database user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"forgejo\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.dump.backupDir",
                    "option_description": "<rendered-html><p>Path to the directory where the dump archives will be stored.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.services.forgejo.stateDir}/dump\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.dump.enable",
                    "option_description": "<rendered-html><p>Whether to enable periodic dumps via the <a\nhref=\"https://forgejo.org/docs/latest/admin/command-line/#dump\">built-in\n<code class=\"interpreted-text\" role=\"command\">dump</code>\ncommand</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.dump.file",
                    "option_description": "<rendered-html><p>Filename to be used for the dump. If <code>null</code> a default name\nis chosen by forgejo.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"forgejo-dump\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.dump.interval",
                    "option_description": "<rendered-html><p>Run a Forgejo dump at this interval. Runs by default at 04:31 every\nday.</p>\n<p>The format is described in <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.time(7)</code></a>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"04:31\"",
                    "option_example": "\"hourly\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.dump.type",
                    "option_description": "<rendered-html><p>Archive format used to store the dump file.</p>\n</rendered-html>",
                    "option_type": "one of \"zip\", \"tar\", \"tar.sz\", \"tar.gz\", \"tar.xz\", \"tar.bz2\", \"tar.br\", \"tar.lz4\", \"tar.zst\"",
                    "option_default": "\"zip\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.enable",
                    "option_description": "<rendered-html><p>Whether to enable Forgejo, a software forge.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.group",
                    "option_description": "<rendered-html><p>Group under which Forgejo runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"forgejo\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.lfs.contentDir",
                    "option_description": "<rendered-html><p>Where to store LFS files.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.services.forgejo.stateDir}/data/lfs\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.lfs.enable",
                    "option_description": "<rendered-html><p>Enables git-lfs support.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.package",
                    "option_description": "<rendered-html><p>The forgejo package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.forgejo",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.repositoryRoot",
                    "option_description": "<rendered-html><p>Path to the git repositories.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.services.forgejo.stateDir}/repositories\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.secrets",
                    "option_description": "<rendered-html><p>This is a small wrapper over systemd\u2019s\n<code>LoadCredential</code>.</p>\n<p>It takes the same sections and keys as <code class=\"interpreted-text\"\nrole=\"option\">services.forgejo.settings</code>, but the value of each\nkey is a path instead of a string or bool.</p>\n<p>The path is then loaded as credential, exported as environment\nvariable and then feed through <a\nhref=\"https://codeberg.org/forgejo/forgejo/src/branch/forgejo/contrib/environment-to-ini/environment-to-ini.go\">https://codeberg.org/forgejo/forgejo/src/branch/forgejo/contrib/environment-to-ini/environment-to-ini.go</a>.</p>\n<p>It does the required environment variable escaping for you.</p>\n<div class=\"note\">\n<p>Keys specified here take priority over the ones in <code\nclass=\"interpreted-text\"\nrole=\"option\">services.forgejo.settings</code>!</p>\n</div>\n</rendered-html>",
                    "option_type": "attribute set of attribute set of path",
                    "option_default": "{ }",
                    "option_example": "{\n  metrics = {\n    TOKEN = \"/run/keys/forgejo-metrics-token\";\n  };\n  camo = {\n    HMAC_KEY = \"/run/keys/forgejo-camo-hmac\";\n  };\n  service = {\n    HCAPTCHA_SECRET = \"/run/keys/forgejo-hcaptcha-secret\";\n    HCAPTCHA_SITEKEY = \"/run/keys/forgejo-hcaptcha-sitekey\";\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings",
                    "option_description": "<rendered-html><p>Free-form settings written directly to the <code>app.ini</code>\nconfigfile file. Refer to <a\nhref=\"https://forgejo.org/docs/latest/admin/config-cheat-sheet/\">https://forgejo.org/docs/latest/admin/config-cheat-sheet/</a>\nfor supported values.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": "{ }",
                    "option_example": "{\n  DEFAULT = {\n    RUN_MODE = \"dev\";\n  };\n  \"cron.sync_external_users\" = {\n    RUN_AT_START = true;\n    SCHEDULE = \"@every 24h\";\n    UPDATE_EXISTING = true;\n  };\n  mailer = {\n    ENABLED = true;\n    MAILER_TYPE = \"sendmail\";\n    FROM = \"do-not-reply@example.org\";\n    SENDMAIL_PATH = \"${pkgs.system-sendmail}/bin/sendmail\";\n  };\n  other = {\n    SHOW_FOOTER_VERSION = false;\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.log.LEVEL",
                    "option_description": "<rendered-html><p>General log level.</p>\n</rendered-html>",
                    "option_type": "one of \"Trace\", \"Debug\", \"Info\", \"Warn\", \"Error\", \"Critical\"",
                    "option_default": "\"Info\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.log.ROOT_PATH",
                    "option_description": "<rendered-html><p>Root path for log files.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.services.forgejo.stateDir}/log\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.server.DISABLE_SSH",
                    "option_description": "<rendered-html><p>Disable external SSH feature.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.server.DOMAIN",
                    "option_description": "<rendered-html><p>Domain name of your server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.server.HTTP_ADDR",
                    "option_description": "<rendered-html><p>Listen address. Must be a path when using a unix socket.</p>\n</rendered-html>",
                    "option_type": "string or path",
                    "option_default": "if lib.hasSuffix \"+unix\" cfg.settings.server.PROTOCOL then \"/run/forgejo/forgejo.sock\" else \"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.server.HTTP_PORT",
                    "option_description": "<rendered-html><p>Listen port. Ignored when using a unix socket.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.server.PROTOCOL",
                    "option_description": "<rendered-html><p>Listen protocol. <code>+unix</code> means \u201cover unix\u201d, not \u201cin\naddition to.\u201d</p>\n</rendered-html>",
                    "option_type": "one of \"http\", \"https\", \"fcgi\", \"http+unix\", \"fcgi+unix\"",
                    "option_default": "\"http\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.server.ROOT_URL",
                    "option_description": "<rendered-html><p>Full public URL of Forgejo server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"http://${config.services.forgejo.settings.server.DOMAIN}:${toString config.services.forgejo.settings.server.HTTP_PORT}/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.server.SSH_PORT",
                    "option_description": "<rendered-html><p>SSH port displayed in clone URL. The option is required to configure\na service when the external visible port differs from the local\nlistening port i.e. if port forwarding is used.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "22",
                    "option_example": "2222",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.server.STATIC_ROOT_PATH",
                    "option_description": "<rendered-html><p>Upper level of template and static files path.</p>\n</rendered-html>",
                    "option_type": "string or path",
                    "option_default": "config.services.forgejo.package.data",
                    "option_example": "\"/var/lib/forgejo/data\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.settings.session.COOKIE_SECURE",
                    "option_description": "<rendered-html><p>Marks session cookies as \u201csecure\u201d as a hint for browsers to only send\nthem via HTTPS. This option is recommend, if Forgejo is being served\nover HTTPS.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.stateDir",
                    "option_description": "<rendered-html><p>Forgejo data directory.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/forgejo\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.useWizard",
                    "option_description": "<rendered-html><p>Whether to use the built-in installation wizard instead of\ndeclaratively managing the <code class=\"interpreted-text\"\nrole=\"file\">app.ini</code> config file in nix.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/forgejo.nix",
                    "option_name": "services.forgejo.user",
                    "option_description": "<rendered-html><p>User account under which Forgejo runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"forgejo\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.backupProcesses",
                    "option_description": "<rendered-html><p>Number of backup_agent processes to run for snapshots.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.class",
                    "option_description": "<rendered-html><p>Process class</p>\n</rendered-html>",
                    "option_type": "null or one of \"storage\", \"transaction\", \"stateless\"",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.dataDir",
                    "option_description": "<rendered-html><p>Data directory. All cluster data will be put under here.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/foundationdb\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.enable",
                    "option_description": "<rendered-html><p>Whether to enable FoundationDB Server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.extraReadWritePaths",
                    "option_description": "<rendered-html><p>An extra set of filesystem paths that FoundationDB can read to and\nwrite from. By default, FoundationDB runs under a heavily namespaced\nsystemd environment without write access to most of the filesystem\noutside of its data and log directories. By adding paths to this list,\nthe set of writeable paths will be expanded. This is useful for allowing\ne.g. backups to local files, which must be performed on behalf of the\nfoundationdb service.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.group",
                    "option_description": "<rendered-html><p>Group account under which FoundationDB runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"foundationdb\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.listenAddress",
                    "option_description": "<rendered-html><p>Publicly visible IP address of the process. Port is determined by\nprocess ID</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"public\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.listenPortStart",
                    "option_description": "<rendered-html><p>Starting port number for database listening sockets. Every FDB\nprocess binds to a subsequent port, to this number reflects the start of\nthe overall range. e.g. having 8 server processes will use all ports\nbetween 4500 and 4507.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "4500",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.locality",
                    "option_description": "<rendered-html><p>FoundationDB locality settings.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{\n  dataHall = null;\n  datacenterId = null;\n  machineId = null;\n  zoneId = null;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.locality.dataHall",
                    "option_description": "<rendered-html><p>Data hall identifier key. All processes physically located in a data\nhall should share the id. If you are depending on data hall based\nreplication this must be set on all processes.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.locality.datacenterId",
                    "option_description": "<rendered-html><p>Data center identifier key. All processes physically located in a\ndata center should share the id. If you are depending on data center\nbased replication this must be set on all processes.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.locality.machineId",
                    "option_description": "<rendered-html><p>Machine identifier key. All processes on a machine should share a\nunique id. By default, processes on a machine determine a unique id to\nshare. This does not generally need to be set.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.locality.zoneId",
                    "option_description": "<rendered-html><p>Zone identifier key. Processes that share a zone id are considered\nnon-unique for the purposes of data replication. If unset, defaults to\nmachine id.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.logDir",
                    "option_description": "<rendered-html><p>Log directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/log/foundationdb\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.logSize",
                    "option_description": "<rendered-html><p>Roll over to a new log file after the current log file reaches the\nspecified size.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"10MiB\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.maxLogSize",
                    "option_description": "<rendered-html><p>Delete the oldest log file when the total size of all log files\nexceeds the specified size. If set to 0, old log files will not be\ndeleted.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"100MiB\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.memory",
                    "option_description": "<rendered-html><p>Maximum memory used by the process. The default value is\n<code>8GiB</code>. When specified without a unit, <code>MiB</code> is\nassumed. This parameter does not change the memory allocation of the\nprogram. Rather, it sets a hard limit beyond which the process will kill\nitself and be restarted. The default value of <code>8GiB</code> is\ndouble the intended memory usage in the default configuration (providing\nan emergency buffer to deal with memory leaks or similar problems). It\nis not recommended to decrease the value of this parameter below its\ndefault value. It may be increased if you wish to allocate a very large\namount of storage engine memory or cache. In particular, when the\n<code>storageMemory</code> parameter is increased, the\n<code>memory</code> parameter should be increased by an equal\namount.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"8GiB\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.openFirewall",
                    "option_description": "<rendered-html><p>Open the firewall ports corresponding to FoundationDB processes and\ncoordinators using <code class=\"interpreted-text\"\nrole=\"option\">config.networking.firewall.*</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.package",
                    "option_description": "<rendered-html><p>The FoundationDB package to use for this server. This must be\nspecified by the user in order to ensure migrations and upgrades are\ncontrolled appropriately.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.pidfile",
                    "option_description": "<rendered-html><p>Path to pidfile for fdbmonitor.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/run/foundationdb.pid\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.publicAddress",
                    "option_description": "<rendered-html><p>Publicly visible IP address of the process. Port is determined by\nprocess ID</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"auto\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.restartDelay",
                    "option_description": "<rendered-html><p>Number of seconds to wait before restarting servers.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "10",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.serverProcesses",
                    "option_description": "<rendered-html><p>Number of fdbserver processes to run.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.storageMemory",
                    "option_description": "<rendered-html><p>Maximum memory used for data storage. The default value is\n<code>1GiB</code>. When specified without a unit, <code>MB</code> is\nassumed. Clusters using the memory storage engine will be restricted to\nusing this amount of memory per process for purposes of data storage.\nMemory overhead associated with storing the data is counted against this\ntotal. If you increase the <code>storageMemory</code>, you should also\nincrease the <code>memory</code> parameter by the same amount.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"1GiB\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.tls",
                    "option_description": "<rendered-html><p>FoundationDB Transport Security Layer (TLS) settings.</p>\n</rendered-html>",
                    "option_type": "null or (submodule)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.tls.allowedPeers",
                    "option_description": "<rendered-html><p>\u201cPeer verification string\u201d. This may be used to adjust which TLS\nclient certificates a server will accept, as a form of user\nauthorization; for example, it may only accept TLS clients who offer a\ncertificate abiding by some locality or organization name.</p>\n<p>For more information, please see the FoundationDB documentation.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"Check.Valid=1,Check.Unexpired=1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.tls.certificate",
                    "option_description": "<rendered-html><p>Path to the TLS certificate file. This certificate will be offered\nto, and may be verified by, clients.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.tls.key",
                    "option_description": "<rendered-html><p>Private key file for the certificate.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.traceFormat",
                    "option_description": "<rendered-html><p>Trace logging format.</p>\n</rendered-html>",
                    "option_type": "one of \"xml\", \"json\"",
                    "option_default": "\"xml\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/foundationdb.nix",
                    "option_name": "services.foundationdb.user",
                    "option_description": "<rendered-html><p>User account under which FoundationDB runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"foundationdb\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fprintd.nix",
                    "option_name": "services.fprintd.enable",
                    "option_description": "<rendered-html><p>Whether to enable fprintd daemon and PAM module for fingerprint\nreaders handling.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fprintd.nix",
                    "option_name": "services.fprintd.package",
                    "option_description": "<rendered-html><p>fprintd package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "if config.services.fprintd.tod.enable then pkgs.fprintd-tod else pkgs.fprintd",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fprintd.nix",
                    "option_name": "services.fprintd.tod.driver",
                    "option_description": "<rendered-html><p>Touch OEM Drivers (TOD) package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": null,
                    "option_example": "pkgs.libfprint-2-tod1-goodix",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/fprintd.nix",
                    "option_name": "services.fprintd.tod.enable",
                    "option_description": "<rendered-html><p>Whether to enable Touch OEM Drivers library support.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/x11/fractalart.nix",
                    "option_name": "services.fractalart.enable",
                    "option_description": "<rendered-html><p>Enable FractalArt for generating colorful wallpapers on login</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/x11/fractalart.nix",
                    "option_name": "services.fractalart.height",
                    "option_description": "<rendered-html><p>Screen height</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "1080",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/x11/fractalart.nix",
                    "option_name": "services.fractalart.width",
                    "option_description": "<rendered-html><p>Screen width</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": "1920",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.enable",
                    "option_description": "<rendered-html><p>Whether to enable freeciv.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.openFirewall",
                    "option_description": "<rendered-html><p>Whether to enable opening the firewall for the port listening for\nclients.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings",
                    "option_description": "<rendered-html><p>Parameters of freeciv-server.</p>\n</rendered-html>",
                    "option_type": "freeciv-server params",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.Announce",
                    "option_description": "<rendered-html><p>Announce game in LAN using given protocol.</p>\n</rendered-html>",
                    "option_type": "one of \"IPv4\", \"IPv6\", \"none\"",
                    "option_default": "\"none\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.Database",
                    "option_description": "<rendered-html><p>Enable database connection with given configuration.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "''\n  [fcdb]\n    backend=\"sqlite\"\n    database=\"/var/lib/freeciv/auth.sqlite\"\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.Guests",
                    "option_description": "<rendered-html><p>Whether to enable guests to login if auth is enabled.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.Newusers",
                    "option_description": "<rendered-html><p>Whether to enable new users to login if auth is enabled.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.auth",
                    "option_description": "<rendered-html><p>Whether to enable server authentication.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.debug",
                    "option_description": "<rendered-html><p>Set debug log level.</p>\n</rendered-html>",
                    "option_type": "integer between 0 and 3 (both inclusive)",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.exit-on-end",
                    "option_description": "<rendered-html><p>Whether to enable exit instead of restarting when a game ends.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.port",
                    "option_description": "<rendered-html><p>Listen for clients on given port</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5556",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.quitidle",
                    "option_description": "<rendered-html><p>Quit if no players for given time in seconds.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.read",
                    "option_description": "<rendered-html><p>Startup script.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "''\n  /fcdb lua sqlite_createdb()\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/games/freeciv.nix",
                    "option_name": "services.freeciv.settings.saves",
                    "option_description": "<rendered-html><p>Save games to given directory, a sub-directory named after the\nstarting date of the service will me inserted to preserve older\nsaves.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"/var/lib/freeciv/saves/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/freefall.nix",
                    "option_name": "services.freefall.devices",
                    "option_description": "<rendered-html><p>Device paths to all internal spinning hard drives.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"/dev/sda\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/freefall.nix",
                    "option_name": "services.freefall.enable",
                    "option_description": "<rendered-html><p>Whether to protect HP/Dell laptop hard drives (not SSDs) in free\nfall.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/freefall.nix",
                    "option_name": "services.freefall.package",
                    "option_description": "<rendered-html><p>The freefall package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.freefall",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/freenet.nix",
                    "option_name": "services.freenet.enable",
                    "option_description": "<rendered-html><p>Enable the Freenet daemon</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/freenet.nix",
                    "option_name": "services.freenet.nice",
                    "option_description": "<rendered-html><p>Set the nice level for the Freenet daemon</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "10",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/freeradius.nix",
                    "option_name": "services.freeradius.configDir",
                    "option_description": "<rendered-html><p>The path of the freeradius server configuration directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/etc/raddb\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/freeradius.nix",
                    "option_name": "services.freeradius.debug",
                    "option_description": "<rendered-html><p>Whether to enable debug logging for freeradius (-xx option). This\nshould not be left on, since it includes sensitive data such as\npasswords in the logs.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/freeradius.nix",
                    "option_name": "services.freeradius.enable",
                    "option_description": "<rendered-html><p>Whether to enable the freeradius server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/freeswitch.nix",
                    "option_name": "services.freeswitch.configDir",
                    "option_description": "<rendered-html><p>Override file in FreeSWITCH config template directory. Each top-level\nattribute denotes a file path in the configuration directory, its value\nis the file path. See <a\nhref=\"https://freeswitch.org/confluence/display/FREESWITCH/Default+Configuration\">FreeSWITCH\ndocumentation</a> for more info. Also check available templates in <a\nhref=\"https://github.com/signalwire/freeswitch/tree/master/conf\">FreeSWITCH\nrepository</a>.</p>\n</rendered-html>",
                    "option_type": "attribute set of path",
                    "option_default": "{ }",
                    "option_example": "{\n  \"freeswitch.xml\" = ./freeswitch.xml;\n  \"dialplan/default.xml\" = pkgs.writeText \"dialplan-default.xml\" ''\n    [xml lines]\n  '';\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/freeswitch.nix",
                    "option_name": "services.freeswitch.configTemplate",
                    "option_description": "<rendered-html><p>Configuration template to use. See available templates in <a\nhref=\"https://github.com/signalwire/freeswitch/tree/master/conf\">FreeSWITCH\nrepository</a>. You can also set your own configuration directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.freeswitch.package}/share/freeswitch/conf/vanilla\"",
                    "option_example": "\"${config.services.freeswitch.package}/share/freeswitch/conf/minimal\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/freeswitch.nix",
                    "option_name": "services.freeswitch.enable",
                    "option_description": "<rendered-html><p>Whether to enable FreeSWITCH.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/freeswitch.nix",
                    "option_name": "services.freeswitch.enableReload",
                    "option_description": "<rendered-html><p>Issue the <code>reloadxml</code> command to FreeSWITCH when\nconfiguration directory changes (instead of restart). See <a\nhref=\"https://freeswitch.org/confluence/display/FREESWITCH/Reloading\">FreeSWITCH\ndocumentation</a> for more info. The configuration directory is exposed\nat <code class=\"interpreted-text\" role=\"file\">/etc/freeswitch</code>.\nSee also <code>systemd.services.*.restartIfChanged</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/freeswitch.nix",
                    "option_name": "services.freeswitch.package",
                    "option_description": "<rendered-html><p>The freeswitch package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.freeswitch",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.authType",
                    "option_description": "<rendered-html><p>Authentication type for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "one of \"form\", \"http_auth\", \"none\"",
                    "option_default": "\"form\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.baseUrl",
                    "option_description": "<rendered-html><p>Default URL for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"https://freshrss.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.dataDir",
                    "option_description": "<rendered-html><p>Default data folder for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/freshrss\"",
                    "option_example": "\"/mnt/freshrss\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.database.host",
                    "option_description": "<rendered-html><p>Database host for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.database.name",
                    "option_description": "<rendered-html><p>Database name for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"freshrss\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.database.passFile",
                    "option_description": "<rendered-html><p>Database password file for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/secrets/freshrss\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.database.port",
                    "option_description": "<rendered-html><p>Database port for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": "3306",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.database.tableprefix",
                    "option_description": "<rendered-html><p>Database table prefix for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"freshrss\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.database.type",
                    "option_description": "<rendered-html><p>Database type.</p>\n</rendered-html>",
                    "option_type": "one of \"sqlite\", \"pgsql\", \"mysql\"",
                    "option_default": "\"sqlite\"",
                    "option_example": "\"pgsql\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.database.user",
                    "option_description": "<rendered-html><p>Database user for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"freshrss\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.defaultUser",
                    "option_description": "<rendered-html><p>Default username for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"admin\"",
                    "option_example": "\"eva\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.enable",
                    "option_description": "<rendered-html><p>Whether to enable FreshRSS RSS aggregator and reader with php-fpm\nbackend..</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.language",
                    "option_description": "<rendered-html><p>Default language for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"en\"",
                    "option_example": "\"de\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.package",
                    "option_description": "<rendered-html><p>The freshrss package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.freshrss",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.passwordFile",
                    "option_description": "<rendered-html><p>Password for the defaultUser for FreshRSS.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/secrets/freshrss\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.pool",
                    "option_description": "<rendered-html><p>Name of the php-fpm pool to use and setup. If not specified, a pool\nwill be created with default values.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"freshrss\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.user",
                    "option_description": "<rendered-html><p>User under which FreshRSS runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"freshrss\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/freshrss.nix",
                    "option_name": "services.freshrss.virtualHost",
                    "option_description": "<rendered-html><p>Name of the nginx virtualhost to use and setup. If null, do not setup\nany virtualhost.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"freshrss\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.enable",
                    "option_description": "<rendered-html><p>Whether to enable Frigate NVR.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.hostname",
                    "option_description": "<rendered-html><p>Hostname of the nginx vhost to configure.</p>\n<p>Only nginx is supported by upstream for direct reverse proxying.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"frigate.exampe.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.package",
                    "option_description": "<rendered-html><p>The frigate package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.frigate",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.settings",
                    "option_description": "<rendered-html><p>Frigate configuration as a nix attribute set.</p>\n<p>See the project documentation for how to configure frigate.</p>\n<ul>\n<li><a href=\"https://docs.frigate.video/guides/getting_started\">Creating\na config file</a></li>\n<li><a\nhref=\"https://docs.frigate.video/configuration/index\">Configuration\nreference</a></li>\n</ul>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.settings.cameras",
                    "option_description": "<rendered-html><p>Attribute set of cameras configurations.</p>\n<p><a\nhref=\"https://docs.frigate.video/configuration/cameras\">https://docs.frigate.video/configuration/cameras</a></p>\n</rendered-html>",
                    "option_type": "attribute set of (YAML value)",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.settings.cameras.<name>.ffmpeg.inputs",
                    "option_description": "<rendered-html><p>List of inputs for this camera.</p>\n</rendered-html>",
                    "option_type": "list of (YAML value)",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.settings.cameras.<name>.ffmpeg.inputs.*.path",
                    "option_description": "<rendered-html><p>Stream URL</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"rtsp://192.0.2.1:554/rtsp\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.settings.cameras.<name>.ffmpeg.inputs.*.roles",
                    "option_description": "<rendered-html><p>List of roles for this stream</p>\n</rendered-html>",
                    "option_type": "list of (one of \"detect\", \"record\", \"rtmp\")",
                    "option_default": null,
                    "option_example": "[ \"detect\" \"rtmp\" ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.settings.database.path",
                    "option_description": "<rendered-html><p>Path to the SQLite database used</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/frigate/frigate.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.settings.mqtt.enabled",
                    "option_description": "<rendered-html><p>Whether to enable MQTT support.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/frigate.nix",
                    "option_name": "services.frigate.settings.mqtt.host",
                    "option_description": "<rendered-html><p>MQTT server hostname</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"mqtt.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frp.nix",
                    "option_name": "services.frp.enable",
                    "option_description": "<rendered-html><p>Whether to enable frp.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frp.nix",
                    "option_name": "services.frp.package",
                    "option_description": "<rendered-html><p>The frp package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.frp",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frp.nix",
                    "option_name": "services.frp.role",
                    "option_description": "<rendered-html><p>The frp consists of <code>client</code> and <code>server</code>. The\nserver is usually deployed on the machine with a public IP address, and\nthe client is usually deployed on the machine where the Intranet service\nto be penetrated resides.</p>\n</rendered-html>",
                    "option_type": "one of \"server\", \"client\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frp.nix",
                    "option_name": "services.frp.settings",
                    "option_description": "<rendered-html><p>Frp configuration, for configuration options see the example of <a\nhref=\"https://github.com/fatedier/frp/blob/dev/conf/frpc_full_example.toml\">client</a>\nor <a\nhref=\"https://github.com/fatedier/frp/blob/dev/conf/frps_full_example.toml\">server</a>\non github.</p>\n</rendered-html>",
                    "option_type": "TOML value",
                    "option_default": "{ }",
                    "option_example": "{\n  serverAddr = \"x.x.x.x\";\n  serverPort = 7000;\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.babel.config",
                    "option_description": "<rendered-html><p>babeld configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.babel.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR babeld. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/babeld.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.babel.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR BABEL routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.babel.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.babel.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.babel.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bfd.config",
                    "option_description": "<rendered-html><p>bfdd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bfd.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR bfdd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/bfdd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bfd.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR BFD routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bfd.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bfd.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bfd.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bgp.config",
                    "option_description": "<rendered-html><p>bgpd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  router bgp 65001\n    neighbor 10.0.0.1 remote-as 65001\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bgp.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR bgpd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/bgpd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bgp.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR BGP routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bgp.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bgp.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.bgp.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.eigrp.config",
                    "option_description": "<rendered-html><p>eigrpd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.eigrp.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR eigrpd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/eigrpd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.eigrp.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR EIGRP routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.eigrp.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.eigrp.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.eigrp.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.fabric.config",
                    "option_description": "<rendered-html><p>fabricd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.fabric.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR fabricd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/fabricd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.fabric.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR FABRIC routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.fabric.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.fabric.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.fabric.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.isis.config",
                    "option_description": "<rendered-html><p>isisd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.isis.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR isisd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/isisd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.isis.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR ISIS routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.isis.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.isis.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.isis.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ldp.config",
                    "option_description": "<rendered-html><p>ldpd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ldp.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR ldpd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/ldpd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ldp.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR LDP routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ldp.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ldp.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ldp.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.mgmt.config",
                    "option_description": "<rendered-html><p>mgmtd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.mgmt.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR mgmtd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/mgmtd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.mgmt.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Configuration management daemon.</p>\n<p>The Configuration management daemon is automatically enabled if\nneeded, at the moment this is when staticd is enabled.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.frr.static.enable",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.mgmt.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.mgmt.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.mgmt.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.nhrp.config",
                    "option_description": "<rendered-html><p>nhrpd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.nhrp.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR nhrpd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/nhrpd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.nhrp.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR NHRP routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.nhrp.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.nhrp.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.nhrp.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf.config",
                    "option_description": "<rendered-html><p>ospfd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  router ospf\n    network 10.0.0.0/8 area 0\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR ospfd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/ospfd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR OSPF routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf6.config",
                    "option_description": "<rendered-html><p>ospf6d configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf6.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR ospf6d. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/ospf6d.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf6.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR OSPF6 routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf6.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf6.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ospf6.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pbr.config",
                    "option_description": "<rendered-html><p>pbrd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pbr.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR pbrd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/pbrd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pbr.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR PBR routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pbr.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pbr.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pbr.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pim.config",
                    "option_description": "<rendered-html><p>pimd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pim.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR pimd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/pimd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pim.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR PIM routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pim.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pim.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.pim.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.rip.config",
                    "option_description": "<rendered-html><p>ripd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  router rip\n    network 10.0.0.0/8\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.rip.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR ripd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/ripd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.rip.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR RIP routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.rip.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.rip.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.rip.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ripng.config",
                    "option_description": "<rendered-html><p>ripngd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHTif",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ripng.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR ripngd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/ripngd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ripng.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR RIPNG routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ripng.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ripng.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.ripng.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.sharp.config",
                    "option_description": "<rendered-html><p>sharpd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.sharp.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR sharpd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/sharpd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.sharp.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR SHARP routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.sharp.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.sharp.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.sharp.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.static.config",
                    "option_description": "<rendered-html><p>staticd configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.static.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR staticd. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/staticd.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.static.enable",
                    "option_description": "<rendered-html><p>Whether to enable the FRR STATIC routing protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.static.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.static.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.static.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.zebra.config",
                    "option_description": "<rendered-html><p>zebra configuration statements.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.zebra.configFile",
                    "option_description": "<rendered-html><p>Configuration file to use for FRR zebra. By default the NixOS\ngenerated files are used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/frr/zebra.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.zebra.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Zebra routing manager.</p>\n<p>The Zebra routing manager is automatically enabled if any routing\nprotocols are configured.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.zebra.extraOptions",
                    "option_description": "<rendered-html><p>Extra options for the daemon.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.zebra.vtyListenAddress",
                    "option_description": "<rendered-html><p>Address to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/frr.nix",
                    "option_name": "services.frr.zebra.vtyListenPort",
                    "option_description": "<rendered-html><p>TCP Port to bind to for the VTY interface.</p>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/fstrim.nix",
                    "option_name": "services.fstrim.enable",
                    "option_description": "<rendered-html><p>Whether to enable periodic SSD TRIM of mounted partitions in\nbackground.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/fstrim.nix",
                    "option_name": "services.fstrim.interval",
                    "option_description": "<rendered-html><p>How often we run fstrim. For most desktop and server systems a\nsufficient trimming frequency is once a week.</p>\n<p>The format is described in <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.time(7)</code></a>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"weekly\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/fusion-inventory.nix",
                    "option_name": "services.fusionInventory.enable",
                    "option_description": "<rendered-html><p>Whether to enable Fusion Inventory Agent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/fusion-inventory.nix",
                    "option_name": "services.fusionInventory.extraConfig",
                    "option_description": "<rendered-html><p>Configuration that is injected verbatim into the configuration\nfile.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/fusion-inventory.nix",
                    "option_name": "services.fusionInventory.servers",
                    "option_description": "<rendered-html><p>The urls of the OCS/GLPI servers to connect to.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/fwupd.nix",
                    "option_name": "services.fwupd.daemonSettings",
                    "option_description": "<rendered-html><p>Configurations for the fwupd daemon.</p>\n</rendered-html>",
                    "option_type": "section of an INI file (attrs of INI atom (null, bool, int, float or string) or a non-empty list of them)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/fwupd.nix",
                    "option_name": "services.fwupd.daemonSettings.DisabledDevices",
                    "option_description": "<rendered-html><p>List of device GUIDs to be disabled.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"2082b5e0-7a64-478a-b1b2-e3404fab6dad\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/fwupd.nix",
                    "option_name": "services.fwupd.daemonSettings.DisabledPlugins",
                    "option_description": "<rendered-html><p>List of plugins to be disabled.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"udev\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/fwupd.nix",
                    "option_name": "services.fwupd.daemonSettings.EspLocation",
                    "option_description": "<rendered-html><p>The EFI system partition (ESP) path used if UDisks is not available\nor if this partition is not mounted at /boot/efi, /boot, or /efi</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "config.boot.loader.efi.efiSysMountPoint",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/fwupd.nix",
                    "option_name": "services.fwupd.enable",
                    "option_description": "<rendered-html><p>Whether to enable fwupd, a DBus service that allows applications to\nupdate firmware.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/fwupd.nix",
                    "option_name": "services.fwupd.extraRemotes",
                    "option_description": "<rendered-html><p>Enables extra remotes in fwupd. See\n<code>/etc/fwupd/remotes.d</code>.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"lvfs-testing\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/fwupd.nix",
                    "option_name": "services.fwupd.extraTrustedKeys",
                    "option_description": "<rendered-html><p>Installing a public key allows firmware signed with a matching\nprivate key to be recognized as trusted, which may require less\nauthentication to install than for untrusted files. By default trusted\nfirmware can be upgraded (but not downgraded) without the user or\nadministrator password. Only very few keys are installed by default.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "[ /etc/nixos/fwupd/myfirmware.pem ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/fwupd.nix",
                    "option_name": "services.fwupd.package",
                    "option_description": "<rendered-html><p>The fwupd package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.fwupd",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHTmf",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/fwupd.nix",
                    "option_name": "services.fwupd.uefiCapsuleSettings",
                    "option_description": "<rendered-html><p>UEFI capsule configurations for the fwupd daemon.</p>\n</rendered-html>",
                    "option_type": "section of an INI file (attrs of INI atom (null, bool, int, float or string) or a non-empty list of them)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            }
        ]
    }
}