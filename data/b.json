{
    "took": 76,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 554,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5nPcbZABMU8RZ4DXQ90b",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/bcache.nix",
                    "option_name": "boot.initrd.services.bcache.enable",
                    "option_description": "<rendered-html><p><em>This will only be used when systemd is used in stage 1.</em></p>\n<p>Whether to enable bcache support in the initrd.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/babeld.nix",
                    "option_name": "services.babeld.enable",
                    "option_description": "<rendered-html><p>Whether to enable the babeld network routing daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/babeld.nix",
                    "option_name": "services.babeld.extraConfig",
                    "option_description": "<rendered-html><p>Options that will be copied to babeld.conf. See <code\nclass=\"interpreted-text\" role=\"manpage\">babeld(8)</code> for\ndetails.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/babeld.nix",
                    "option_name": "services.babeld.interfaceDefaults",
                    "option_description": "<rendered-html><p>A set describing default parameters for babeld interfaces. See <code\nclass=\"interpreted-text\" role=\"manpage\">babeld(8)</code> for\noptions.</p>\n</rendered-html>",
                    "option_type": "null or (attribute set of unspecified value)",
                    "option_default": "null",
                    "option_example": "{\n  split-horizon = true;\n  type = \"tunnel\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/babeld.nix",
                    "option_name": "services.babeld.interfaces",
                    "option_description": "<rendered-html><p>A set describing babeld interfaces. See <code\nclass=\"interpreted-text\" role=\"manpage\">babeld(8)</code> for\noptions.</p>\n</rendered-html>",
                    "option_type": "attribute set of attribute set of unspecified value",
                    "option_default": "{ }",
                    "option_example": "{\n  enp0s2 = {\n    hello-interval = 5;\n    split-horizon = \"auto\";\n    type = \"wired\";\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.enable",
                    "option_description": "<rendered-html><p>Whether to enable Bacula Director Daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration for Bacula Director Daemon.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  TODO\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.extraDirectorConfig",
                    "option_description": "<rendered-html><p>Extra configuration to be passed in Director directive.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  Maximum Concurrent Jobs = 20;\n  Heartbeat Interval = 30;\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.extraMessagesConfig",
                    "option_description": "<rendered-html><p>Extra configuration to be passed in Messages directive.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  console = all\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.name",
                    "option_description": "<rendered-html><p>The director name used by the system administrator. This directive is\nrequired.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.networking.hostName}-dir\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.password",
                    "option_description": "<rendered-html><p>Specifies the password that must be supplied for a Director.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.port",
                    "option_description": "<rendered-html><p>Specify the port (a positive integer) on which the Director daemon\nwill listen for Bacula Console connections. This same port number must\nbe specified in the Director resource of the Console configuration file.\nThe default is 9101, so normally this directive need not be specified.\nThis directive should not be used if you specify DirAddresses (N.B\nplural) directive.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "9101",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.tls",
                    "option_description": "<rendered-html><p>TLS Options for the Director. Important notice: The backup won\u2019t be\nencrypted.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.tls.allowedCN",
                    "option_description": "<rendered-html><p>Common name attribute of allowed peer certificates. This directive is\nvalid for a server and in a client context. If this directive is\nspecified, the peer certificate will be verified against this list. In\nthe case this directive is configured on a server side, the allowed CN\nlist will not be checked if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-dir.tls.verifyPeer&amp;query=services.bacula-dir.tls.verifyPeer\">services.bacula-dir.tls.verifyPeer</a>\nis false.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.tls.caCertificateFile",
                    "option_description": "<rendered-html><p>The path specifying a PEM encoded TLS CA certificate(s). Multiple\ncertificates are permitted in the file. One of TLS CA Certificate File\nor TLS CA Certificate Dir are required in a server context, unless <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-dir.tls.verifyPeer&amp;query=services.bacula-dir.tls.verifyPeer\">services.bacula-dir.tls.verifyPeer</a>\nis false, and are always required in a client context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.tls.certificate",
                    "option_description": "<rendered-html><p>The full path to the PEM encoded TLS certificate. It will be used as\neither a client or server certificate, depending on the connection\ndirection. This directive is required in a server context, but it may\nnot be specified in a client context if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-dir.tls.verifyPeer&amp;query=services.bacula-dir.tls.verifyPeer\">services.bacula-dir.tls.verifyPeer</a>\nis <code>false</code> in the corresponding server context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.tls.enable",
                    "option_description": "<rendered-html><p>Specifies if TLS should be enabled. If this set to <code>false</code>\nTLS will be completely disabled, even if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-dir.tls.require&amp;query=services.bacula-dir.tls.require\">services.bacula-dir.tls.require</a>\nis true.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.tls.key",
                    "option_description": "<rendered-html><p>The path of a PEM encoded TLS private key. It must correspond to the\nTLS certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.tls.require",
                    "option_description": "<rendered-html><p>Require TLS or TLS-PSK encryption. This directive is ignored unless\none of <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-dir.tls.enable&amp;query=services.bacula-dir.tls.enable\">services.bacula-dir.tls.enable</a>\nis true or TLS PSK Enable is set to <code>yes</code>. If TLS is not\nrequired while TLS or TLS-PSK are enabled, then the Bacula component\nwill connect with other components either with or without TLS or\nTLS-PSK</p>\n<p>If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-dir.tls.enable&amp;query=services.bacula-dir.tls.enable\">services.bacula-dir.tls.enable</a>\nor TLS-PSK is enabled and TLS is required, then the Bacula component\nwill refuse any connection request that does not use TLS.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-dir.tls.verifyPeer",
                    "option_description": "<rendered-html><p>Verify peer certificate. Instructs server to request and verify the\nclient\u2019s X.509 certificate. Any client certificate signed by a known-CA\nwill be accepted. Additionally, the client\u2019s X509 certificate Common\nName must meet the value of the Address directive. If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-dir.tls.allowedCN&amp;query=services.bacula-dir.tls.allowedCN\">services.bacula-dir.tls.allowedCN</a>\nis used, the client\u2019s x509 certificate Common Name must also correspond\nto one of the CN specified in the <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-dir.tls.allowedCN&amp;query=services.bacula-dir.tls.allowedCN\">services.bacula-dir.tls.allowedCN</a>\ndirective. This directive is valid only for a server and not in client\ncontext.</p>\n<p>Standard from Bacula is <code>true</code>.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director",
                    "option_description": "<rendered-html><p>This option defines director resources in Bacula File Daemon.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.monitor",
                    "option_description": "<rendered-html><p>If Monitor is set to <code>no</code>, this director will have full\naccess to this Storage daemon. If Monitor is set to <code>yes</code>,\nthis director will only be able to fetch the current status of this\nStorage daemon.</p>\n<p>Please note that if this director is being used by a Monitor, we\nhighly recommend to set this directive to yes to avoid serious security\nproblems.</p>\n</rendered-html>",
                    "option_type": "one of \"no\", \"yes\"",
                    "option_default": "\"no\"",
                    "option_example": "\"yes\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.password",
                    "option_description": "<rendered-html><p>Specifies the password that must be supplied for the default Bacula\nConsole to be authorized. The same password must appear in the Director\nresource of the Console configuration file. For added security, the\npassword is never passed across the network but instead a challenge\nresponse hash code created with the password. This directive is\nrequired. If you have either /dev/random or bc on your machine, Bacula\nwill generate a random password during the configuration process,\notherwise it will be left blank and you must manually supply it.</p>\n<p>The password is plain text. It is not generated through any special\nprocess but as noted above, it is better to use random text for security\nreasons.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.tls",
                    "option_description": "<rendered-html><p>TLS Options for the Director in this Configuration.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.tls.allowedCN",
                    "option_description": "<rendered-html><p>Common name attribute of allowed peer certificates. This directive is\nvalid for a server and in a client context. If this directive is\nspecified, the peer certificate will be verified against this list. In\nthe case this directive is configured on a server side, the allowed CN\nlist will not be checked if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.director.&lt;name&gt;.tls.verifyPeer&amp;query=services.bacula-fd.director.&lt;name&gt;.tls.verifyPeer\">services.bacula-fd.director.<name>.tls.verifyPeer</a>\nis false.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.tls.caCertificateFile",
                    "option_description": "<rendered-html><p>The path specifying a PEM encoded TLS CA certificate(s). Multiple\ncertificates are permitted in the file. One of TLS CA Certificate File\nor TLS CA Certificate Dir are required in a server context, unless <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.director.&lt;name&gt;.tls.verifyPeer&amp;query=services.bacula-fd.director.&lt;name&gt;.tls.verifyPeer\">services.bacula-fd.director.<name>.tls.verifyPeer</a>\nis false, and are always required in a client context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.tls.certificate",
                    "option_description": "<rendered-html><p>The full path to the PEM encoded TLS certificate. It will be used as\neither a client or server certificate, depending on the connection\ndirection. This directive is required in a server context, but it may\nnot be specified in a client context if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.director.&lt;name&gt;.tls.verifyPeer&amp;query=services.bacula-fd.director.&lt;name&gt;.tls.verifyPeer\">services.bacula-fd.director.<name>.tls.verifyPeer</a>\nis <code>false</code> in the corresponding server context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.tls.enable",
                    "option_description": "<rendered-html><p>Specifies if TLS should be enabled. If this set to <code>false</code>\nTLS will be completely disabled, even if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.director.&lt;name&gt;.tls.require&amp;query=services.bacula-fd.director.&lt;name&gt;.tls.require\">services.bacula-fd.director.<name>.tls.require</a>\nis true.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.tls.key",
                    "option_description": "<rendered-html><p>The path of a PEM encoded TLS private key. It must correspond to the\nTLS certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.tls.require",
                    "option_description": "<rendered-html><p>Require TLS or TLS-PSK encryption. This directive is ignored unless\none of <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.director.&lt;name&gt;.tls.enable&amp;query=services.bacula-fd.director.&lt;name&gt;.tls.enable\">services.bacula-fd.director.<name>.tls.enable</a>\nis true or TLS PSK Enable is set to <code>yes</code>. If TLS is not\nrequired while TLS or TLS-PSK are enabled, then the Bacula component\nwill connect with other components either with or without TLS or\nTLS-PSK</p>\n<p>If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.director.&lt;name&gt;.tls.enable&amp;query=services.bacula-fd.director.&lt;name&gt;.tls.enable\">services.bacula-fd.director.<name>.tls.enable</a>\nor TLS-PSK is enabled and TLS is required, then the Bacula component\nwill refuse any connection request that does not use TLS.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.director.<name>.tls.verifyPeer",
                    "option_description": "<rendered-html><p>Verify peer certificate. Instructs server to request and verify the\nclient\u2019s X.509 certificate. Any client certificate signed by a known-CA\nwill be accepted. Additionally, the client\u2019s X509 certificate Common\nName must meet the value of the Address directive. If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.director.&lt;name&gt;.tls.allowedCN&amp;query=services.bacula-fd.director.&lt;name&gt;.tls.allowedCN\">services.bacula-fd.director.<name>.tls.allowedCN</a>\nis used, the client\u2019s x509 certificate Common Name must also correspond\nto one of the CN specified in the <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.director.&lt;name&gt;.tls.allowedCN&amp;query=services.bacula-fd.director.&lt;name&gt;.tls.allowedCN\">services.bacula-fd.director.<name>.tls.allowedCN</a>\ndirective. This directive is valid only for a server and not in client\ncontext.</p>\n<p>Standard from Bacula is <code>true</code>.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Bacula File Daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.extraClientConfig",
                    "option_description": "<rendered-html><p>Extra configuration to be passed in Client directive.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  Maximum Concurrent Jobs = 20;\n  Heartbeat Interval = 30;\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.extraMessagesConfig",
                    "option_description": "<rendered-html><p>Extra configuration to be passed in Messages directive.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  console = all\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.name",
                    "option_description": "<rendered-html><p>The client name that must be used by the Director when connecting.\nGenerally, it is a good idea to use a name related to the machine so\nthat error messages can be easily identified if you have multiple\nClients. This directive is required.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.networking.hostName}-fd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.port",
                    "option_description": "<rendered-html><p>This specifies the port number on which the Client listens for\nDirector connections. It must agree with the FDPort specified in the\nClient resource of the Director\u2019s configuration file.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "9102",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.tls",
                    "option_description": "<rendered-html><p>TLS Options for the File Daemon. Important notice: The backup won\u2019t\nbe encrypted.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.tls.allowedCN",
                    "option_description": "<rendered-html><p>Common name attribute of allowed peer certificates. This directive is\nvalid for a server and in a client context. If this directive is\nspecified, the peer certificate will be verified against this list. In\nthe case this directive is configured on a server side, the allowed CN\nlist will not be checked if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.tls.verifyPeer&amp;query=services.bacula-fd.tls.verifyPeer\">services.bacula-fd.tls.verifyPeer</a>\nis false.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.tls.caCertificateFile",
                    "option_description": "<rendered-html><p>The path specifying a PEM encoded TLS CA certificate(s). Multiple\ncertificates are permitted in the file. One of TLS CA Certificate File\nor TLS CA Certificate Dir are required in a server context, unless <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.tls.verifyPeer&amp;query=services.bacula-fd.tls.verifyPeer\">services.bacula-fd.tls.verifyPeer</a>\nis false, and are always required in a client context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.tls.certificate",
                    "option_description": "<rendered-html><p>The full path to the PEM encoded TLS certificate. It will be used as\neither a client or server certificate, depending on the connection\ndirection. This directive is required in a server context, but it may\nnot be specified in a client context if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.tls.verifyPeer&amp;query=services.bacula-fd.tls.verifyPeer\">services.bacula-fd.tls.verifyPeer</a>\nis <code>false</code> in the corresponding server context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.tls.enable",
                    "option_description": "<rendered-html><p>Specifies if TLS should be enabled. If this set to <code>false</code>\nTLS will be completely disabled, even if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.tls.require&amp;query=services.bacula-fd.tls.require\">services.bacula-fd.tls.require</a>\nis true.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.tls.key",
                    "option_description": "<rendered-html><p>The path of a PEM encoded TLS private key. It must correspond to the\nTLS certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.tls.require",
                    "option_description": "<rendered-html><p>Require TLS or TLS-PSK encryption. This directive is ignored unless\none of <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.tls.enable&amp;query=services.bacula-fd.tls.enable\">services.bacula-fd.tls.enable</a>\nis true or TLS PSK Enable is set to <code>yes</code>. If TLS is not\nrequired while TLS or TLS-PSK are enabled, then the Bacula component\nwill connect with other components either with or without TLS or\nTLS-PSK</p>\n<p>If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.tls.enable&amp;query=services.bacula-fd.tls.enable\">services.bacula-fd.tls.enable</a>\nor TLS-PSK is enabled and TLS is required, then the Bacula component\nwill refuse any connection request that does not use TLS.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-fd.tls.verifyPeer",
                    "option_description": "<rendered-html><p>Verify peer certificate. Instructs server to request and verify the\nclient\u2019s X.509 certificate. Any client certificate signed by a known-CA\nwill be accepted. Additionally, the client\u2019s X509 certificate Common\nName must meet the value of the Address directive. If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.tls.allowedCN&amp;query=services.bacula-fd.tls.allowedCN\">services.bacula-fd.tls.allowedCN</a>\nis used, the client\u2019s x509 certificate Common Name must also correspond\nto one of the CN specified in the <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-fd.tls.allowedCN&amp;query=services.bacula-fd.tls.allowedCN\">services.bacula-fd.tls.allowedCN</a>\ndirective. This directive is valid only for a server and not in client\ncontext.</p>\n<p>Standard from Bacula is <code>true</code>.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.autochanger",
                    "option_description": "<rendered-html><p>This option defines Autochanger resources in Bacula Storage\nDaemon.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.autochanger.<name>.changerCommand",
                    "option_description": "<rendered-html><p>The name-string specifies an external program to be called that will\nautomatically change volumes as required by Bacula. Normally, this\ndirective will be specified only in the AutoChanger resource, which is\nthen used for all devices. However, you may also specify the different\nChanger Command in each Device resource. Most frequently, you will\nspecify the Bacula supplied mtx-changer script as follows:</p>\n<p><code>\"/path/mtx-changer %c %o %S %a %d\"</code></p>\n<p>and you will install the mtx on your system (found in the depkgs\nrelease). An example of this command is in the default bacula-sd.conf\nfile. For more details on the substitution characters that may be\nspecified to configure your autochanger please see the\nAutochangersAutochangersChapter chapter of this manual. For FreeBSD\nusers, you might want to see one of the several chio scripts in\nexamples/autochangers.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/etc/bacula/mtx-changer %c %o %S %a %d\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.autochanger.<name>.changerDevice",
                    "option_description": "<rendered-html><p>The specified name-string must be the generic SCSI device name of the\nautochanger that corresponds to the normal read/write Archive Device\nspecified in the Device resource. This generic SCSI device name should\nbe specified if you have an autochanger or if you have a standard tape\ndrive and want to use the Alert Command (see below). For example, on\nLinux systems, for an Archive Device name of <code>/dev/nst0</code>, you\nwould specify <code>/dev/sg0</code> for the Changer Device name.\nDepending on your exact configuration, and the number of autochangers or\nthe type of autochanger, what you specify here can vary. This directive\nis optional. See the Using AutochangersAutochangersChapter chapter of\nthis manual for more details of using this and the following autochanger\ndirectives.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.autochanger.<name>.devices",
                    "option_description": "<rendered-html>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.autochanger.<name>.extraAutochangerConfig",
                    "option_description": "<rendered-html><p>Extra configuration to be passed in Autochanger directive.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  \n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.device",
                    "option_description": "<rendered-html><p>This option defines Device resources in Bacula Storage Daemon.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.device.<name>.archiveDevice",
                    "option_description": "<rendered-html><p>The specified name-string gives the system file name of the storage\ndevice managed by this storage daemon. This will usually be the device\nfile name of a removable storage device (tape drive), for example\n<code>/dev/nst0</code> or <code>/dev/rmt/0mbn</code>. For a DVD-writer,\nit will be for example <code>/dev/hdc</code>. It may also be a directory\nname if you are archiving to disk storage. In this case, you must supply\nthe full absolute path to the directory. When specifying a tape device,\nit is preferable that the \u201cnon-rewind\u201d variant of the device file name\nbe given.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.device.<name>.extraDeviceConfig",
                    "option_description": "<rendered-html><p>Extra configuration to be passed in Device directive.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  LabelMedia = yes\n  Random Access = no\n  AutomaticMount = no\n  RemovableMedia = no\n  MaximumOpenWait = 60\n  AlwaysOpen = no\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.device.<name>.mediaType",
                    "option_description": "<rendered-html><p>The specified name-string names the type of media supported by this\ndevice, for example, <code>DLT7000</code>. Media type names are\narbitrary in that you set them to anything you want, but they must be\nknown to the volume database to keep track of which storage daemons can\nread which volumes. In general, each different storage type should have\na unique Media Type associated with it. The same name-string must appear\nin the appropriate Storage resource definition in the Director\u2019s\nconfiguration file.</p>\n<p>Even though the names you assign are arbitrary (i.e. you choose the\nname you want), you should take care in specifying them because the\nMedia Type is used to determine which storage device Bacula will select\nduring restore. Thus you should probably use the same Media Type\nspecification for all drives where the Media can be freely interchanged.\nThis is not generally an issue if you have a single Storage daemon, but\nit is with multiple Storage daemons, especially if they have\nincompatible media.</p>\n<p>For example, if you specify a Media Type of <code>DDS-4</code> then\nduring the restore, Bacula will be able to choose any Storage Daemon\nthat handles <code>DDS-4</code>. If you have an autochanger, you might\nwant to name the Media Type in a way that is unique to the autochanger,\nunless you wish to possibly use the Volumes in other drives. You should\nalso ensure to have unique Media Type names if the Media is not\ncompatible between drives. This specification is required for all\ndevices.</p>\n<p>In addition, if you are using disk storage, each Device resource will\ngenerally have a different mount point or directory. In order for Bacula\nto select the correct Device resource, each one must have a unique Media\nType.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director",
                    "option_description": "<rendered-html><p>This option defines Director resources in Bacula Storage Daemon.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.monitor",
                    "option_description": "<rendered-html><p>If Monitor is set to <code>no</code>, this director will have full\naccess to this Storage daemon. If Monitor is set to <code>yes</code>,\nthis director will only be able to fetch the current status of this\nStorage daemon.</p>\n<p>Please note that if this director is being used by a Monitor, we\nhighly recommend to set this directive to yes to avoid serious security\nproblems.</p>\n</rendered-html>",
                    "option_type": "one of \"no\", \"yes\"",
                    "option_default": "\"no\"",
                    "option_example": "\"yes\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.password",
                    "option_description": "<rendered-html><p>Specifies the password that must be supplied for the default Bacula\nConsole to be authorized. The same password must appear in the Director\nresource of the Console configuration file. For added security, the\npassword is never passed across the network but instead a challenge\nresponse hash code created with the password. This directive is\nrequired. If you have either /dev/random or bc on your machine, Bacula\nwill generate a random password during the configuration process,\notherwise it will be left blank and you must manually supply it.</p>\n<p>The password is plain text. It is not generated through any special\nprocess but as noted above, it is better to use random text for security\nreasons.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.tls",
                    "option_description": "<rendered-html><p>TLS Options for the Director in this Configuration.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.tls.allowedCN",
                    "option_description": "<rendered-html><p>Common name attribute of allowed peer certificates. This directive is\nvalid for a server and in a client context. If this directive is\nspecified, the peer certificate will be verified against this list. In\nthe case this directive is configured on a server side, the allowed CN\nlist will not be checked if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.director.&lt;name&gt;.tls.verifyPeer&amp;query=services.bacula-sd.director.&lt;name&gt;.tls.verifyPeer\">services.bacula-sd.director.<name>.tls.verifyPeer</a>\nis false.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.tls.caCertificateFile",
                    "option_description": "<rendered-html><p>The path specifying a PEM encoded TLS CA certificate(s). Multiple\ncertificates are permitted in the file. One of TLS CA Certificate File\nor TLS CA Certificate Dir are required in a server context, unless <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.director.&lt;name&gt;.tls.verifyPeer&amp;query=services.bacula-sd.director.&lt;name&gt;.tls.verifyPeer\">services.bacula-sd.director.<name>.tls.verifyPeer</a>\nis false, and are always required in a client context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.tls.certificate",
                    "option_description": "<rendered-html><p>The full path to the PEM encoded TLS certificate. It will be used as\neither a client or server certificate, depending on the connection\ndirection. This directive is required in a server context, but it may\nnot be specified in a client context if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.director.&lt;name&gt;.tls.verifyPeer&amp;query=services.bacula-sd.director.&lt;name&gt;.tls.verifyPeer\">services.bacula-sd.director.<name>.tls.verifyPeer</a>\nis <code>false</code> in the corresponding server context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.tls.enable",
                    "option_description": "<rendered-html><p>Specifies if TLS should be enabled. If this set to <code>false</code>\nTLS will be completely disabled, even if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.director.&lt;name&gt;.tls.require&amp;query=services.bacula-sd.director.&lt;name&gt;.tls.require\">services.bacula-sd.director.<name>.tls.require</a>\nis true.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.tls.key",
                    "option_description": "<rendered-html><p>The path of a PEM encoded TLS private key. It must correspond to the\nTLS certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.tls.require",
                    "option_description": "<rendered-html><p>Require TLS or TLS-PSK encryption. This directive is ignored unless\none of <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.director.&lt;name&gt;.tls.enable&amp;query=services.bacula-sd.director.&lt;name&gt;.tls.enable\">services.bacula-sd.director.<name>.tls.enable</a>\nis true or TLS PSK Enable is set to <code>yes</code>. If TLS is not\nrequired while TLS or TLS-PSK are enabled, then the Bacula component\nwill connect with other components either with or without TLS or\nTLS-PSK</p>\n<p>If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.director.&lt;name&gt;.tls.enable&amp;query=services.bacula-sd.director.&lt;name&gt;.tls.enable\">services.bacula-sd.director.<name>.tls.enable</a>\nor TLS-PSK is enabled and TLS is required, then the Bacula component\nwill refuse any connection request that does not use TLS.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.director.<name>.tls.verifyPeer",
                    "option_description": "<rendered-html><p>Verify peer certificate. Instructs server to request and verify the\nclient\u2019s X.509 certificate. Any client certificate signed by a known-CA\nwill be accepted. Additionally, the client\u2019s X509 certificate Common\nName must meet the value of the Address directive. If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.director.&lt;name&gt;.tls.allowedCN&amp;query=services.bacula-sd.director.&lt;name&gt;.tls.allowedCN\">services.bacula-sd.director.<name>.tls.allowedCN</a>\nis used, the client\u2019s x509 certificate Common Name must also correspond\nto one of the CN specified in the <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.director.&lt;name&gt;.tls.allowedCN&amp;query=services.bacula-sd.director.&lt;name&gt;.tls.allowedCN\">services.bacula-sd.director.<name>.tls.allowedCN</a>\ndirective. This directive is valid only for a server and not in client\ncontext.</p>\n<p>Standard from Bacula is <code>true</code>.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.enable",
                    "option_description": "<rendered-html><p>Whether to enable Bacula Storage Daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.extraMessagesConfig",
                    "option_description": "<rendered-html><p>Extra configuration to be passed in Messages directive.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  console = all\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.extraStorageConfig",
                    "option_description": "<rendered-html><p>Extra configuration to be passed in Storage directive.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  Maximum Concurrent Jobs = 20;\n  Heartbeat Interval = 30;\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.name",
                    "option_description": "<rendered-html><p>Specifies the Name of the Storage daemon.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${config.networking.hostName}-sd\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.port",
                    "option_description": "<rendered-html><p>Specifies port number on which the Storage daemon listens for\nDirector connections.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "9103",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.tls",
                    "option_description": "<rendered-html><p>TLS Options for the Storage Daemon. Important notice: The backup\nwon\u2019t be encrypted.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.tls.allowedCN",
                    "option_description": "<rendered-html><p>Common name attribute of allowed peer certificates. This directive is\nvalid for a server and in a client context. If this directive is\nspecified, the peer certificate will be verified against this list. In\nthe case this directive is configured on a server side, the allowed CN\nlist will not be checked if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.tls.verifyPeer&amp;query=services.bacula-sd.tls.verifyPeer\">services.bacula-sd.tls.verifyPeer</a>\nis false.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.tls.caCertificateFile",
                    "option_description": "<rendered-html><p>The path specifying a PEM encoded TLS CA certificate(s). Multiple\ncertificates are permitted in the file. One of TLS CA Certificate File\nor TLS CA Certificate Dir are required in a server context, unless <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.tls.verifyPeer&amp;query=services.bacula-sd.tls.verifyPeer\">services.bacula-sd.tls.verifyPeer</a>\nis false, and are always required in a client context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.tls.certificate",
                    "option_description": "<rendered-html><p>The full path to the PEM encoded TLS certificate. It will be used as\neither a client or server certificate, depending on the connection\ndirection. This directive is required in a server context, but it may\nnot be specified in a client context if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.tls.verifyPeer&amp;query=services.bacula-sd.tls.verifyPeer\">services.bacula-sd.tls.verifyPeer</a>\nis <code>false</code> in the corresponding server context.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.tls.enable",
                    "option_description": "<rendered-html><p>Specifies if TLS should be enabled. If this set to <code>false</code>\nTLS will be completely disabled, even if <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.tls.require&amp;query=services.bacula-sd.tls.require\">services.bacula-sd.tls.require</a>\nis true.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.tls.key",
                    "option_description": "<rendered-html><p>The path of a PEM encoded TLS private key. It must correspond to the\nTLS certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.tls.require",
                    "option_description": "<rendered-html><p>Require TLS or TLS-PSK encryption. This directive is ignored unless\none of <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.tls.enable&amp;query=services.bacula-sd.tls.enable\">services.bacula-sd.tls.enable</a>\nis true or TLS PSK Enable is set to <code>yes</code>. If TLS is not\nrequired while TLS or TLS-PSK are enabled, then the Bacula component\nwill connect with other components either with or without TLS or\nTLS-PSK</p>\n<p>If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.tls.enable&amp;query=services.bacula-sd.tls.enable\">services.bacula-sd.tls.enable</a>\nor TLS-PSK is enabled and TLS is required, then the Bacula component\nwill refuse any connection request that does not use TLS.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/bacula.nix",
                    "option_name": "services.bacula-sd.tls.verifyPeer",
                    "option_description": "<rendered-html><p>Verify peer certificate. Instructs server to request and verify the\nclient\u2019s X.509 certificate. Any client certificate signed by a known-CA\nwill be accepted. Additionally, the client\u2019s X509 certificate Common\nName must meet the value of the Address directive. If <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.tls.allowedCN&amp;query=services.bacula-sd.tls.allowedCN\">services.bacula-sd.tls.allowedCN</a>\nis used, the client\u2019s x509 certificate Common Name must also correspond\nto one of the CN specified in the <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.bacula-sd.tls.allowedCN&amp;query=services.bacula-sd.tls.allowedCN\">services.bacula-sd.tls.allowedCN</a>\ndirective. This directive is valid only for a server and not in client\ncontext.</p>\n<p>Standard from Bacula is <code>true</code>.</p>\n</rendered-html>",
                    "option_type": "null or boolean",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/bamf.nix",
                    "option_name": "services.bamf.enable",
                    "option_description": "<rendered-html><p>Whether to enable bamf.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bazarr.nix",
                    "option_name": "services.bazarr.enable",
                    "option_description": "<rendered-html><p>Whether to enable bazarr, a subtitle manager for Sonarr and\nRadarr.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bazarr.nix",
                    "option_name": "services.bazarr.group",
                    "option_description": "<rendered-html><p>Group under which bazarr runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bazarr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bazarr.nix",
                    "option_name": "services.bazarr.listenPort",
                    "option_description": "<rendered-html><p>Port on which the bazarr web interface should listen</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "6767",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bazarr.nix",
                    "option_name": "services.bazarr.openFirewall",
                    "option_description": "<rendered-html><p>Open ports in the firewall for the bazarr web interface.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bazarr.nix",
                    "option_name": "services.bazarr.user",
                    "option_description": "<rendered-html><p>User account under which bazarr runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bazarr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.automaticRemoveKitFromNames",
                    "option_description": "<rendered-html><p>Automatically remove kits.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.automaticRenameGenericNodes",
                    "option_description": "<rendered-html><p>Automatically rename generic nodes.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.automaticRenameKitNodes",
                    "option_description": "<rendered-html><p>Automatically rename kit\u2019s nodes.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.automaticRenameNodes",
                    "option_description": "<rendered-html><p>Automatically rename all nodes.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.baseTopicPrefix",
                    "option_description": "<rendered-html><p>Topic prefix added to all MQTT messages.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.device",
                    "option_description": "<rendered-html><p>Device name to configure gateway to use.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.enable",
                    "option_description": "<rendered-html><p>Whether to enable BigClown gateway.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.environmentFiles",
                    "option_description": "<rendered-html><p>File to load as environment file. Environment variables from this\nfile will be interpolated into the config file using envsubst with this\nsyntax: <code>$ENVIRONMENT</code> or <code>${VARIABLE}</code>. This is\nuseful to avoid putting secrets into the nix store.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"/run/keys/bcg.env\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.mqtt.cafile",
                    "option_description": "<rendered-html><p>Certificate Authority file for MQTT server access.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.mqtt.certfile",
                    "option_description": "<rendered-html><p>Certificate file for MQTT server access.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.mqtt.host",
                    "option_description": "<rendered-html><p>Host where MQTT server is running.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.mqtt.keyfile",
                    "option_description": "<rendered-html><p>Key file for MQTT server access.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.mqtt.password",
                    "option_description": "<rendered-html><p>MQTT server access password.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.mqtt.port",
                    "option_description": "<rendered-html><p>Port of MQTT server.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "1883",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.mqtt.username",
                    "option_description": "<rendered-html><p>MQTT server access username.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.name",
                    "option_description": "<rendered-html><p>Name for the device.</p>\n<p>Supported variables:</p>\n<ul>\n<li><code>{ip}</code> IP address</li>\n<li><code>{id}</code> The ID of the connected usb-dongle or\ncore-module</li>\n</ul>\n<p><code>null</code> can be used for automatic detection from gateway\nfirmware.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.package",
                    "option_description": "<rendered-html><p>The bcg package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.python3Packages.bcg",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.qosNodeMessages",
                    "option_description": "<rendered-html><p>Set the guarantee of MQTT message delivery.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.rename",
                    "option_description": "<rendered-html><p>Rename nodes to different name.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.retainNodeMessages",
                    "option_description": "<rendered-html><p>Specify that node messages should be retaied in MQTT broker.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bcg.nix",
                    "option_name": "services.bcg.verbose",
                    "option_description": "<rendered-html><p>Verbosity level.</p>\n</rendered-html>",
                    "option_type": "one of \"CRITICAL\", \"ERROR\", \"WARNING\", \"INFO\", \"DEBUG\"",
                    "option_default": "\"WARNING\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/beanstalkd.nix",
                    "option_name": "services.beanstalkd.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Beanstalk work queue.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/beanstalkd.nix",
                    "option_name": "services.beanstalkd.listen.address",
                    "option_description": "<rendered-html><p>IP address to listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": "\"0.0.0.0\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/beanstalkd.nix",
                    "option_name": "services.beanstalkd.listen.port",
                    "option_description": "<rendered-html><p>TCP port that will be used to accept client connections.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "11300",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/beanstalkd.nix",
                    "option_name": "services.beanstalkd.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open ports in the firewall for the server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bee.nix",
                    "option_name": "services.bee.daemonNiceLevel",
                    "option_description": "<rendered-html><p>Daemon process priority for bee. 0 is the default Unix process\npriority, 19 is the lowest.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "0",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bee.nix",
                    "option_name": "services.bee.enable",
                    "option_description": "<rendered-html><p>Whether to enable Ethereum Swarm Bee.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bee.nix",
                    "option_name": "services.bee.group",
                    "option_description": "<rendered-html><p>Group the bee binary should execute under.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bee\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bee.nix",
                    "option_name": "services.bee.package",
                    "option_description": "<rendered-html><p>The bee package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.bee",
                    "option_example": "bee-unstable",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bee.nix",
                    "option_name": "services.bee.settings",
                    "option_description": "<rendered-html><p>Ethereum Swarm Bee configuration. Refer to <a\nhref=\"https://gateway.ethswarm.org/bzz/docs.swarm.eth/docs/installation/configuration/\">https://gateway.ethswarm.org/bzz/docs.swarm.eth/docs/installation/configuration/</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bee.nix",
                    "option_name": "services.bee.user",
                    "option_description": "<rendered-html><p>User the bee binary should execute under.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bee\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bees.nix",
                    "option_name": "services.beesd.filesystems",
                    "option_description": "<rendered-html><p>BTRFS filesystems to run block-level deduplication on.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  root = {\n    spec = \"LABEL=root\";\n    hashTableSizeMB = 2048;\n    verbosity = \"crit\";\n    extraOptions = [ \"--loadavg-target\" \"5.0\" ];\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bees.nix",
                    "option_name": "services.beesd.filesystems.<name>.extraOptions",
                    "option_description": "<rendered-html><p>Extra command-line options passed to the daemon. See upstream bees\ndocumentation.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[ \"--thread-count\" \"4\" ]\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bees.nix",
                    "option_name": "services.beesd.filesystems.<name>.hashTableSizeMB",
                    "option_description": "<rendered-html><p>Hash table size in MB; must be a multiple of 16.</p>\n<p>A larger ratio of index size to storage size means smaller blocks of\nduplicate content are recognized.</p>\n<p>If you have 1TB of data, a 4GB hash table (which is to say, a value\nof 4096) will permit 4KB extents (the smallest possible size) to be\nrecognized, whereas a value of 1024 \u2013 creating a 1GB hash table \u2013 will\nrecognize only aligned duplicate blocks of 16KB.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1024",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bees.nix",
                    "option_name": "services.beesd.filesystems.<name>.spec",
                    "option_description": "<rendered-html><p>Description of how to identify the filesystem to be duplicated by\nthis instance of bees. Note that deduplication crosses subvolumes; one\nmust not configure multiple instances for subvolumes of the same\nfilesystem (or block devices which are part of the same filesystem), but\nonly for completely independent btrfs filesystems.</p>\n<p>This must be in a format usable by findmnt; that could be a key=value\npair, or a bare path to a mount point. Using bare paths will allow\nsystemd to start the beesd service only after mounting the associated\npath.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"LABEL=MyBulkDataDrive\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bees.nix",
                    "option_name": "services.beesd.filesystems.<name>.verbosity",
                    "option_description": "<rendered-html><p>Log verbosity (syslog keyword/level).</p>\n</rendered-html>",
                    "option_type": "one of \"alert\", \"crit\", \"debug\", \"emerg\", \"err\", \"info\", \"notice\", \"warning\", 1, 2, 7, 0, 3, 6, 5, 4",
                    "option_default": "\"info\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bees.nix",
                    "option_name": "services.beesd.filesystems.<name>.workDir",
                    "option_description": "<rendered-html><p>Name (relative to the root of the filesystem) of the subvolume where\nthe hash table will be stored.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\".beeshome\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.cgroupFilterOut",
                    "option_description": "<rendered-html><p>A regexp matching the full paths of cgroups whose data shouldn\u2019t be\ncollected</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"user.slice.*\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.collect.diskStats",
                    "option_description": "<rendered-html><p>Whether to enable dist_stat collection.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.collect.exitStats",
                    "option_description": "<rendered-html><p>Whether to enable eBPF-based exitstats.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.collect.ioStats",
                    "option_description": "<rendered-html><p>Whether to enable io.stat collection for cgroups.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.compression.enable",
                    "option_description": "<rendered-html><p>Whether to enable data compression.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.dirs.log",
                    "option_description": "<rendered-html><p>Where to store below\u2019s logs</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.dirs.store",
                    "option_description": "<rendered-html><p>Where to store below\u2019s data</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/lib/below\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.enable",
                    "option_description": "<rendered-html><p>Whether to enable \u2018below\u2019 resource monitor.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.retention.size",
                    "option_description": "<rendered-html><p>Size limit for below\u2019s data, in bytes. Data is deleted oldest-first,\nin 24h \u2018shards\u2019.</p>\n<div class=\"note\">\n<p>The size limit may be exceeded by at most the size of the active\nshard, as:</p>\n<ul>\n<li>the active shard cannot be deleted;</li>\n<li>the size limit is only enforced when a new shard is created.</li>\n</ul>\n</div>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/below.nix",
                    "option_name": "services.below.retention.time",
                    "option_description": "<rendered-html><p>Retention time, in seconds.</p>\n<div class=\"note\">\n<p>As data is stored in 24 hour shards which are discarded as a whole,\nonly data expired by 24h (or more) is guaranteed to be discarded.</p>\n</div>\n<div class=\"note\">\n<p>If <code>retention.size</code> is set, data may be discarded earlier\nthan the specified time.</p>\n</div>\n</rendered-html>",
                    "option_type": "null or signed integer",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bepasty.nix",
                    "option_name": "services.bepasty.enable",
                    "option_description": "<rendered-html><p>Whether to enable bepasty, a binary pastebin server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bepasty.nix",
                    "option_name": "services.bepasty.servers",
                    "option_description": "<rendered-html><p>configure a number of bepasty servers which will be started with\ngunicorn.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bepasty.nix",
                    "option_name": "services.bepasty.servers.<name>.bind",
                    "option_description": "<rendered-html><p>Bind address to be used for this server.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1:8000\"",
                    "option_example": "\"0.0.0.0:8000\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bepasty.nix",
                    "option_name": "services.bepasty.servers.<name>.dataDir",
                    "option_description": "<rendered-html><p>Path to the directory where the pastes will be saved to</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/bepasty/data\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bepasty.nix",
                    "option_name": "services.bepasty.servers.<name>.defaultPermissions",
                    "option_description": "<rendered-html><p>default permissions for all unauthenticated accesses.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"read\"",
                    "option_example": "\"read,create,delete\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bepasty.nix",
                    "option_name": "services.bepasty.servers.<name>.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration for bepasty server to be appended on the\nconfiguration. see <a\nhref=\"https://bepasty-server.readthedocs.org/en/latest/quickstart.html#configuring-bepasty\">https://bepasty-server.readthedocs.org/en/latest/quickstart.html#configuring-bepasty</a>\nfor all options.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  PERMISSIONS = {\n    'myadminsecret': 'admin,list,create,read,delete',\n  }\n  MAX_ALLOWED_FILE_SIZE = 5 * 1000 * 1000\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bepasty.nix",
                    "option_name": "services.bepasty.servers.<name>.secretKey",
                    "option_description": "<rendered-html><p>server secret for safe session cookies, must be set.</p>\n<p>Warning: this secret is stored in the WORLD-READABLE Nix store!</p>\n<p>It\u2019s recommended to use <code class=\"interpreted-text\"\nrole=\"option\">secretKeyFile</code> which takes precedence over <code\nclass=\"interpreted-text\" role=\"option\">secretKey</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bepasty.nix",
                    "option_name": "services.bepasty.servers.<name>.secretKeyFile",
                    "option_description": "<rendered-html><p>A file that contains the server secret for safe session cookies, must\nbe set.</p>\n<p><code class=\"interpreted-text\" role=\"option\">secretKeyFile</code>\ntakes precedence over <code class=\"interpreted-text\"\nrole=\"option\">secretKey</code>.</p>\n<p>Warning: when <code class=\"interpreted-text\"\nrole=\"option\">secretKey</code> is non-empty <code\nclass=\"interpreted-text\" role=\"option\">secretKeyFile</code> defaults to\na file in the WORLD-READABLE Nix store containing that secret.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/misc/bepasty.nix",
                    "option_name": "services.bepasty.servers.<name>.workDir",
                    "option_description": "<rendered-html><p>Path to the working directory (used for config and pidfile). Defaults\nto the users home directory.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/bepasty\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.credentialsFile",
                    "option_description": "<rendered-html><p>Path to a configuration file to be merged with the settings. Beware\nnot to surround \u201c=\u201d with spaces when setting biboumi\u2019s options in this\nfile. Useful to merge a file which is better kept out of the Nix store\nbecause it contains sensible data like <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.biboumi.settings.password&amp;query=services.biboumi.settings.password\">password</a>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/dev/null\"",
                    "option_example": "\"/run/keys/biboumi.cfg\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Biboumi XMPP gateway to IRC.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.openFirewall",
                    "option_description": "<rendered-html><p>Whether to enable opening of the identd port in the firewall.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings",
                    "option_description": "<rendered-html><p>See <a\nhref=\"https://lab.louiz.org/louiz/biboumi/blob/8.5/doc/biboumi.1.rst\">biboumi\n8.5</a> for documentation.</p>\n</rendered-html>",
                    "option_type": "settings option",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.admin",
                    "option_description": "<rendered-html><p>The bare JID of the gateway administrator. This JID will have more\nprivileges than other standard users, for example some administration\nad-hoc commands will only be available to that JID.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"admin@example.org\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.ca_file",
                    "option_description": "<rendered-html><p>Specifies which file should be used as the list of trusted CA when\nnegotiating a TLS session.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/etc/ssl/certs/ca-certificates.crt\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.db_name",
                    "option_description": "<rendered-html><p>The name of the database to use.</p>\n</rendered-html>",
                    "option_type": "path or string",
                    "option_default": "\"/var/lib/biboumi/biboumi.sqlite\"",
                    "option_example": "\"postgresql://user:secret@localhost\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.hostname",
                    "option_description": "<rendered-html><p>The hostname served by the XMPP\u202fgateway. This domain must be\nconfigured in the XMPP server as an external component.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"biboumi.example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.identd_port",
                    "option_description": "<rendered-html><p>The TCP port on which to listen for identd queries.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "113",
                    "option_example": "0",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.log_level",
                    "option_description": "<rendered-html><p>Indicate what type of log messages to write in the logs. 0 is debug,\n1 is info, 2 is warning, 3 is error.</p>\n</rendered-html>",
                    "option_type": "integer between 0 and 3 (both inclusive)",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.password",
                    "option_description": "<rendered-html><p>The password used to authenticate the XMPP component to your XMPP\nserver. This password must be configured in the XMPP server, associated\nwith the external component on <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.biboumi.settings.hostname&amp;query=services.biboumi.settings.hostname\">hostname</a>.</p>\n<p>Set it to null and use <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.biboumi.credentialsFile&amp;query=services.biboumi.credentialsFile\">credentialsFile</a>\nif you do not want this password to go into the Nix store.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.persistent_by_default",
                    "option_description": "<rendered-html><p>Whether all rooms will be persistent by default: the value of the\n\u201cpersistent\u201d option in the global configuration of each user will be\n\u201ctrue\u201d, but the value of each individual room will still default to\nfalse. This means that a user just needs to change the global\n\u201cpersistent\u201d configuration option to false in order to override\nthis.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.policy_directory",
                    "option_description": "<rendered-html><p>A directory that should contain the policy files, used to customize\nBotan\u2019s behaviour when negotiating the TLS connections with the IRC\nservers.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${pkgs.biboumi}/etc/biboumi\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.port",
                    "option_description": "<rendered-html><p>The TCP port to use to connect to the local XMPP component.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "5347",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.realname_customization",
                    "option_description": "<rendered-html><p>Whether the users will be able to use the ad-hoc commands that lets\nthem configure their realname and username.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.realname_from_jid",
                    "option_description": "<rendered-html><p>Whether the realname and username of each biboumi user will be\nextracted from their JID. Otherwise they will be set to the nick they\nused to connect to the IRC server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/biboumi.nix",
                    "option_name": "services.biboumi.settings.xmpp_server_ip",
                    "option_description": "<rendered-html><p>The IP address to connect to the XMPP server on. The connection to\nthe XMPP server is unencrypted, so the biboumi instance and the server\nshould normally be on the same host.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.blockedNetworks",
                    "option_description": "<rendered-html><p>What networks are just blocked.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.cacheNetworks",
                    "option_description": "<rendered-html><p>What networks are allowed to use us as a resolver. Note that this is\nfor recursive queries \u2013 all networks are allowed to query zones\nconfigured with the <code>zones</code> option by default (although this\nmay be overridden within each zone\u2019s configuration, via the\n<code>allowQuery</code> option). It is recommended that you limit\ncacheNetworks to avoid your server being used for DNS amplification\nattacks.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"127.0.0.0/24\"\n  \"::1/128\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.configFile",
                    "option_description": "<rendered-html><p>Overridable config file to use for named. By default, that generated\nby nixos.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "confFile",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.directory",
                    "option_description": "<rendered-html><p>Working directory of BIND.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/run/named\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.enable",
                    "option_description": "<rendered-html><p>Whether to enable BIND domain name server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.extraConfig",
                    "option_description": "<rendered-html><p>Extra lines to be added verbatim to the generated named configuration\nfile.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.extraOptions",
                    "option_description": "<rendered-html><p>Extra lines to be added verbatim to the options section of the\ngenerated named configuration file.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.forward",
                    "option_description": "<rendered-html><p>Whether to forward \u2018first\u2019 (try forwarding but lookup directly if\nforwarding fails) or \u2018only\u2019.</p>\n</rendered-html>",
                    "option_type": "one of \"first\", \"only\"",
                    "option_default": "\"first\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.forwarders",
                    "option_description": "<rendered-html><p>List of servers we should forward requests to.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "config.networking.nameservers",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.ipv4Only",
                    "option_description": "<rendered-html><p>Only use ipv4, even if the host supports ipv6.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.listenOn",
                    "option_description": "<rendered-html><p>Interfaces to listen on.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"any\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.listenOnIpv6",
                    "option_description": "<rendered-html><p>Ipv6 interfaces to listen on.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"any\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.package",
                    "option_description": "<rendered-html><p>The bind package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.bind",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.zones",
                    "option_description": "<rendered-html><p>List of zones we claim authority over.</p>\n</rendered-html>",
                    "option_type": "(attribute set of (submodule)) or (list of (attribute set)) convertible to it",
                    "option_default": "[ ]",
                    "option_example": "{\n  \"example.com\" = {\n    extraConfig = \"\";\n    file = \"/var/dns/example.com\";\n    master = false;\n    masters = [\n      \"192.168.0.1\"\n    ];\n    slaves = [ ];\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.zones.<name>.allowQuery",
                    "option_description": "<rendered-html><p>List of address ranges allowed to query this zone. Instead of the\naddress(es), this may instead contain the single string \u201cany\u201d.</p>\n<p>NOTE: This overrides the global-level <code>allow-query</code>\nsetting, which is set to the contents of <code>cachenetworks</code>.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"any\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.zones.<name>.extraConfig",
                    "option_description": "<rendered-html><p>Extra zone config to be appended at the end of the zone section.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.zones.<name>.file",
                    "option_description": "<rendered-html><p>Zone file resource records contain columns of data, separated by\nwhitespace, that define the record.</p>\n</rendered-html>",
                    "option_type": "string or path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.zones.<name>.master",
                    "option_description": "<rendered-html><p>Master=false means slave server</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.zones.<name>.masters",
                    "option_description": "<rendered-html><p>List of servers for inclusion in stub and secondary zones.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.zones.<name>.name",
                    "option_description": "<rendered-html><p>Name of the zone.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bind.nix",
                    "option_name": "services.bind.zones.<name>.slaves",
                    "option_description": "<rendered-html><p>Addresses who may request zone transfers.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.bgpMapInfo",
                    "option_description": "<rendered-html><p>Information displayed in bgpmap.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"asn\"\n  \"as-name\"\n  \"ASName\"\n  \"descr\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.dnsInterface",
                    "option_description": "<rendered-html><p>DNS zone to query ASN information.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"asn.cymru.com\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.domain",
                    "option_description": "<rendered-html><p>Server name domain suffixes.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"dn42.lantian.pub\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.enable",
                    "option_description": "<rendered-html><p>Whether to enable Bird Looking Glass Frontend Webserver.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.extraArgs",
                    "option_description": "<rendered-html><p>Extra parameters documented <a\nhref=\"https://github.com/xddxdd/bird-lg-go#frontend\">here</a>.</p>\n<div class=\"note\">\n<p>Passing lines (plain strings) is deprecated in favour of passing\nlists of strings.</p>\n</div>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\" or list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.listenAddress",
                    "option_description": "<rendered-html><p>Address to listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1:5000\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.nameFilter",
                    "option_description": "<rendered-html><p>Protocol names to hide in summary tables (RE2 syntax),</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"^ospf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.navbar.allServers",
                    "option_description": "<rendered-html><p>Text of \u2018All server\u2019 button in the navigation bar.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ALL Servers\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.navbar.allServersURL",
                    "option_description": "<rendered-html><p>URL of \u2018All servers\u2019 button.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"all\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.navbar.brand",
                    "option_description": "<rendered-html><p>Brand to show in the navigation bar .</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"Bird-lg Go\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.navbar.brandURL",
                    "option_description": "<rendered-html><p>URL of the brand to show in the navigation bar.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.netSpecificMode",
                    "option_description": "<rendered-html><p>Apply network-specific changes for some networks.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"dn42\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.protocolFilter",
                    "option_description": "<rendered-html><p>Information displayed in bgpmap.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"ospf\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.proxyPort",
                    "option_description": "<rendered-html><p>Port bird-lg-proxy is running on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.servers",
                    "option_description": "<rendered-html><p>Server name prefixes.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": null,
                    "option_example": "[\n  \"gigsgigscloud\"\n  \"hostdare\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.timeout",
                    "option_description": "<rendered-html><p>Time before request timed out, in seconds.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "120",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.titleBrand",
                    "option_description": "<rendered-html><p>Prefix of page titles in browser tabs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"Bird-lg Go\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.frontend.whois",
                    "option_description": "<rendered-html><p>Whois server for queries.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"whois.verisign-grs.com\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHS-a",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.group",
                    "option_description": "<rendered-html><p>Group to run the service.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bird-lg\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.package",
                    "option_description": "<rendered-html><p>The bird-lg package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.bird-lg",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.proxy.allowedIPs",
                    "option_description": "<rendered-html><p>List of IPs or networks to allow (default all allowed).</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"192.168.25.52\"\n  \"192.168.25.53\"\n  \"192.168.0.0/24\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.proxy.birdSocket",
                    "option_description": "<rendered-html><p>Bird control socket path.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/run/bird/bird.ctl\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.proxy.enable",
                    "option_description": "<rendered-html><p>Whether to enable Bird Looking Glass Proxy.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.proxy.extraArgs",
                    "option_description": "<rendered-html><p>Extra parameters documented <a\nhref=\"https://github.com/xddxdd/bird-lg-go#proxy\">here</a>.</p>\n<div class=\"note\">\n<p>Passing lines (plain strings) is deprecated in favour of passing\nlists of strings.</p>\n</div>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\" or list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.proxy.listenAddress",
                    "option_description": "<rendered-html><p>Address to listen on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1:8000\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.proxy.traceroute.binary",
                    "option_description": "<rendered-html><p>Traceroute\u2019s binary path.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${pkgs.traceroute}/bin/traceroute\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.proxy.traceroute.flags",
                    "option_description": "<rendered-html><p>Flags for traceroute process</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.proxy.traceroute.rawOutput",
                    "option_description": "<rendered-html><p>Display traceroute output in raw format.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird-lg.nix",
                    "option_name": "services.bird-lg.user",
                    "option_description": "<rendered-html><p>User to run the service.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bird-lg\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird.nix",
                    "option_name": "services.bird2.autoReload",
                    "option_description": "<rendered-html><p>Whether bird2 should be automatically reloaded when the configuration\nchanges.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird.nix",
                    "option_name": "services.bird2.checkConfig",
                    "option_description": "<rendered-html><p>Whether the config should be checked at build time. When the config\ncan\u2019t be checked during build time, for example when it includes other\nfiles, either disable this option or use <code>preCheckConfig</code> to\ncreate the included files before checking.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird.nix",
                    "option_name": "services.bird2.config",
                    "option_description": "<rendered-html><p>BIRD Internet Routing Daemon configuration file. <a\nhref=\"http://bird.network.cz/\">http://bird.network.cz/</a></p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird.nix",
                    "option_name": "services.bird2.enable",
                    "option_description": "<rendered-html><p>Whether to enable BIRD Internet Routing Daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bird.nix",
                    "option_name": "services.bird2.preCheckConfig",
                    "option_description": "<rendered-html><p>Commands to execute before the config file check. The file to be\nchecked will be available as <code>bird2.conf</code> in the current\ndirectory.</p>\n<p>Files created with this option will not be available at service\nruntime, only during build time checking.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  echo \"cost 100;\" > include.conf\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/birdwatcher.nix",
                    "option_name": "services.birdwatcher.enable",
                    "option_description": "<rendered-html><p>Whether to enable Birdwatcher.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/birdwatcher.nix",
                    "option_name": "services.birdwatcher.flags",
                    "option_description": "<rendered-html><p>Flags to append to the program call</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-worker-pool-size 16\"\n  \"-6\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/birdwatcher.nix",
                    "option_name": "services.birdwatcher.package",
                    "option_description": "<rendered-html><p>The birdwatcher package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.birdwatcher",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/birdwatcher.nix",
                    "option_name": "services.birdwatcher.settings",
                    "option_description": "<rendered-html><p>birdwatcher configuration, for configuration options see the example\non <a\nhref=\"https://github.com/alice-lg/birdwatcher/blob/master/etc/birdwatcher/birdwatcher.conf\">github</a></p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "{ }",
                    "option_example": "[server]\nallow_from = []\nallow_uncached = false\nmodules_enabled = [\"status\",\n                   \"protocols\",\n                   \"protocols_bgp\",\n                   \"protocols_short\",\n                   \"routes_protocol\",\n                   \"routes_peer\",\n                   \"routes_table\",\n                   \"routes_table_filtered\",\n                   \"routes_table_peer\",\n                   \"routes_filtered\",\n                   \"routes_prefixed\",\n                   \"routes_noexport\",\n                   \"routes_pipe_filtered_count\",\n                   \"routes_pipe_filtered\"\n                  ]\n\n[status]\nreconfig_timestamp_source = \"bird\"\nreconfig_timestamp_match = \"# created: (.*)\"\n\nfilter_fields = []\n\n[bird]\nlisten = \"0.0.0.0:29184\"\nconfig = \"/etc/bird/bird2.conf\"\nbirdc  = \"${pkgs.bird}/bin/birdc\"\nttl = 5 # time to live (in minutes) for caching of cli output\n\n[parser]\nfilter_fields = []\n\n[cache]\nuse_redis = false # if not using redis cache, activate housekeeping to save memory!\n\n[housekeeping]\ninterval = 5\nforce_release_memory = true\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind",
                    "option_description": "<rendered-html><p>Specification of one or more bitcoind instances.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.configFile",
                    "option_description": "<rendered-html><p>The configuration file path to supply bitcoind.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/lib/\u2039name\u203a/bitcoin.conf\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.dataDir",
                    "option_description": "<rendered-html><p>The data directory for bitcoind.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/bitcoind-\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.dbCache",
                    "option_description": "<rendered-html><p>Override the default database cache size in MiB.</p>\n</rendered-html>",
                    "option_type": "null or integer between 4 and 16384 (both inclusive)",
                    "option_default": "null",
                    "option_example": "4000",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable Bitcoin daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.extraCmdlineOptions",
                    "option_description": "<rendered-html><p>Extra command line options to pass to bitcoind. Run bitcoind \u2013help to\nlist all available options.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.extraConfig",
                    "option_description": "<rendered-html><p>Additional configurations to be appended to <code\nclass=\"interpreted-text\" role=\"file\">bitcoin.conf</code>.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  par=16\n  rpcthreads=16\n  logips=1\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.group",
                    "option_description": "<rendered-html><p>The group as which to run bitcoind.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bitcoind-\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.package",
                    "option_description": "<rendered-html><p>The bitcoind package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.bitcoind",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.pidFile",
                    "option_description": "<rendered-html><p>Location of bitcoind pid file.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/bitcoind-\u2039name\u203a/bitcoind.pid\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.port",
                    "option_description": "<rendered-html><p>Override the default port on which to listen for connections.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.prune",
                    "option_description": "<rendered-html><p>Reduce storage requirements by enabling pruning (deleting) of old\nblocks. This allows the pruneblockchain RPC to be called to delete\nspecific blocks, and enables automatic pruning of old blocks if a target\nsize in MiB is provided. This mode is incompatible with -txindex and\n-rescan. Warning: Reverting this setting requires re-downloading the\nentire blockchain. (\u201cdisable\u201d = disable pruning blocks, \u201cmanual\u201d = allow\nmanual pruning via RPC, &gt;=550 = automatically prune block files to\nstay under the specified target size in MiB).</p>\n</rendered-html>",
                    "option_type": "null or ((unsigned integer, meaning >=0) or (one of \"disable\", \"manual\") convertible to it)",
                    "option_default": "null",
                    "option_example": "10000",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.rpc.port",
                    "option_description": "<rendered-html><p>Override the default port on which to listen for JSON-RPC\nconnections.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.rpc.users",
                    "option_description": "<rendered-html><p>RPC user information for JSON-RPC connections.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  alice.passwordHMAC = \"f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\";\n  bob.passwordHMAC = \"b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.rpc.users.<name>.name",
                    "option_description": "<rendered-html><p>Username for JSON-RPC connections.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"alice\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.rpc.users.<name>.passwordHMAC",
                    "option_description": "<rendered-html><p>Password HMAC-SHA-256 for JSON-RPC connections. Must be a string of\nthe format &lt;SALT-HEX&gt;$&lt;HMAC-HEX&gt;.</p>\n<p>Tool (Python script) for HMAC generation is available here: <a\nhref=\"https://github.com/bitcoin/bitcoin/blob/master/share/rpcauth/rpcauth.py\">https://github.com/bitcoin/bitcoin/blob/master/share/rpcauth/rpcauth.py</a></p>\n</rendered-html>",
                    "option_type": "string matching the pattern [0-9a-f]+\\$[0-9a-f]{64}",
                    "option_default": null,
                    "option_example": "\"f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.testnet",
                    "option_description": "<rendered-html><p>Whether to use the testnet instead of mainnet.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitcoind.nix",
                    "option_name": "services.bitcoind.<name>.user",
                    "option_description": "<rendered-html><p>The user as which to run bitcoind.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bitcoind-\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.authBackend",
                    "option_description": "<rendered-html><p>How users are authenticated storage \u2013 save passwords internally pam \u2013\nLinux PAM authentication</p>\n</rendered-html>",
                    "option_type": "one of \"storage\", \"pam\"",
                    "option_default": "\"storage\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.authMode",
                    "option_description": "<rendered-html><p>The following authentication modes are available: Open \u2013 Accept\nconnections from anyone, use NickServ for user authentication. Closed \u2013\nRequire authorization (using the PASS command during login) before\nallowing the user to connect at all. Registered \u2013 Only allow registered\nusers to use this server; this disables the register- and the account\ncommand until the user identifies himself.</p>\n</rendered-html>",
                    "option_type": "one of \"Open\", \"Closed\", \"Registered\"",
                    "option_default": "\"Open\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.configDir",
                    "option_description": "<rendered-html><p>Specify an alternative directory to store all the per-user\nconfiguration files.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/bitlbee\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.enable",
                    "option_description": "<rendered-html><p>Whether to run the BitlBee IRC to other chat network gateway. Running\nit allows you to access the MSN, Jabber, Yahoo! and ICQ chat networks\nvia an IRC client.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.extraDefaults",
                    "option_description": "<rendered-html><p>Will be inserted in the Default section of the config file.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.extraSettings",
                    "option_description": "<rendered-html><p>Will be inserted in the Settings section of the config file.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.hostName",
                    "option_description": "<rendered-html><p>Normally, BitlBee gets a hostname using getsockname(). If you have a\nnicer alias for your BitlBee daemon, you can set it here and BitlBee\nwill identify itself with that name instead.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.interface",
                    "option_description": "<rendered-html><p>The interface the BitlBee daemon will be listening to. If\n<code>127.0.0.1</code>, only clients on the local host can connect to\nit; if <code>0.0.0.0</code>, clients can access it from any network\ninterface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.libpurple_plugins",
                    "option_description": "<rendered-html><p>The list of libpurple plugins to install.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.purple-matrix ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.plugins",
                    "option_description": "<rendered-html><p>The list of bitlbee plugins to install.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.bitlbee-facebook ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.portNumber",
                    "option_description": "<rendered-html><p>Number of the port BitlBee will be listening to.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "6667",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/bitlbee.nix",
                    "option_name": "services.bitlbee.protocols",
                    "option_description": "<rendered-html><p>This option allows to remove the support of protocol, even if\ncompiled in. If nothing is given, there are no restrictions.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.domain",
                    "option_description": "<rendered-html><p>The domain the Bitwarden/Vaultwarden is accessible on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"https://vaultwarden.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.enable",
                    "option_description": "<rendered-html><p>Whether to enable Bitwarden Directory Connector.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.interval",
                    "option_description": "<rendered-html><p>The interval when to run the connector. This uses systemd\u2019s\nOnCalendar syntax.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"*:0,15,30,45\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.ldap",
                    "option_description": "<rendered-html><p>Options to configure the LDAP connection. If you used the desktop\napplication to test the configuration you can find the settings by\nsearching for <code>ldap</code> in\n<code>~/.config/Bitwarden\\ Directory\\ Connector/data.json</code>.</p>\n</rendered-html>",
                    "option_type": "attribute set of (JSON value)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.ldap.ad",
                    "option_description": "<rendered-html><p>Whether the LDAP Server is an Active Directory.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.ldap.hostname",
                    "option_description": "<rendered-html><p>The host the LDAP is accessible on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"ldap.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.ldap.pagedSearch",
                    "option_description": "<rendered-html><p>Whether the LDAP server paginates search results.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.ldap.port",
                    "option_description": "<rendered-html><p>Port LDAP is accessible on.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "389",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.ldap.rootPath",
                    "option_description": "<rendered-html><p>Root path for LDAP.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"dc=example,dc=com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.ldap.ssl",
                    "option_description": "<rendered-html><p>Whether to use TLS.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.ldap.startTls",
                    "option_description": "<rendered-html><p>Whether to use STARTTLS.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.ldap.username",
                    "option_description": "<rendered-html><p>The user to authenticate as.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"cn=admin,dc=example,dc=com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.package",
                    "option_description": "<rendered-html><p>The bitwarden-directory-connector-cli package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.bitwarden-directory-connector-cli",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.secrets.bitwarden.client_path_id",
                    "option_description": "<rendered-html><p>Path to file that contains Client ID.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.secrets.bitwarden.client_path_secret",
                    "option_description": "<rendered-html><p>Path to file that contains Client Secret.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.secrets.ldap",
                    "option_description": "<rendered-html><p>Path to file that contains LDAP password for user in\n{option}`ldap.username</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync",
                    "option_description": "<rendered-html><p>Options to configure what gets synced. If you used the desktop\napplication to test the configuration you can find the settings by\nsearching for <code>sync</code> in\n<code>~/.config/Bitwarden\\ Directory\\ Connector/data.json</code>.</p>\n</rendered-html>",
                    "option_type": "attribute set of (JSON value)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.creationDateAttribute",
                    "option_description": "<rendered-html><p>Attribute that lists a user\u2019s creation date.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"whenCreated\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.emailPrefixAttribute",
                    "option_description": "<rendered-html><p>The attribute that contains the users username.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"accountName\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.emailSuffix",
                    "option_description": "<rendered-html><p>Suffix for the email, normally @example.com.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"@example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.groupFilter",
                    "option_description": "<rendered-html><p>LDAP filter for groups.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"(cn=sales)\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.groupNameAttribute",
                    "option_description": "<rendered-html><p>Attribute for a name of group.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"cn\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.groupObjectClass",
                    "option_description": "<rendered-html><p>A class that groups will have.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"groupOfNames\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.groupPath",
                    "option_description": "<rendered-html><p>Group directory, relative to root.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ou=groups\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.groups",
                    "option_description": "<rendered-html><p>Whether to sync ldap groups into BitWarden.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.largeImport",
                    "option_description": "<rendered-html><p>Enable if you are syncing more than 2000 users/groups.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.memberAttribute",
                    "option_description": "<rendered-html><p>Attribute that lists members in a LDAP group.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"uniqueMember\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.overwriteExisting",
                    "option_description": "<rendered-html><p>Remove and re-add users/groups, See <a\nhref=\"https://bitwarden.com/help/user-group-filters/#overwriting-syncs\">https://bitwarden.com/help/user-group-filters/#overwriting-syncs</a>\nfor more details.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.removeDisabled",
                    "option_description": "<rendered-html><p>Remove users from bitwarden groups if no longer in the ldap\ngroup.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.useEmailPrefixSuffix",
                    "option_description": "<rendered-html><p>If a user has no email address, combine a username prefix with a\nsuffix value to form an email.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.userEmailAttribute",
                    "option_description": "<rendered-html><p>Attribute for a users email.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"mail\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.userFilter",
                    "option_description": "<rendered-html><p>LDAP filter for users.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"(memberOf=cn=sales,ou=groups,dc=example,dc=com)\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.userObjectClass",
                    "option_description": "<rendered-html><p>Class that users must have.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"inetOrgPerson\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.userPath",
                    "option_description": "<rendered-html><p>User directory, relative to root.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"ou=users\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.sync.users",
                    "option_description": "<rendered-html><p>Sync users.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/bitwarden-directory-connector-cli.nix",
                    "option_name": "services.bitwarden-directory-connector-cli.user",
                    "option_description": "<rendered-html><p>User to run the program.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bwdc\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/blackfire.nix",
                    "option_name": "services.blackfire-agent.enable",
                    "option_description": "<rendered-html><p>Whether to enable Blackfire profiler agent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/blackfire.nix",
                    "option_name": "services.blackfire-agent.settings",
                    "option_description": "<rendered-html><p>See <a\nhref=\"https://blackfire.io/docs/up-and-running/configuration/agent\">https://blackfire.io/docs/up-and-running/configuration/agent</a></p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/blackfire.nix",
                    "option_name": "services.blackfire-agent.settings.server-id",
                    "option_description": "<rendered-html><p>Sets the server id used to authenticate with Blackfire</p>\n<p>You can find your personal server-id at <a\nhref=\"https://blackfire.io/my/settings/credentials\">https://blackfire.io/my/settings/credentials</a></p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/blackfire.nix",
                    "option_name": "services.blackfire-agent.settings.server-token",
                    "option_description": "<rendered-html><p>Sets the server token used to authenticate with Blackfire</p>\n<p>You can find your personal server-token at <a\nhref=\"https://blackfire.io/my/settings/credentials\">https://blackfire.io/my/settings/credentials</a></p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend",
                    "option_description": "<rendered-html><p>Specification of one or more blockbook-frontend instances.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.certFile",
                    "option_description": "<rendered-html><p>To enable SSL, specify path to the name of certificate files without\nextension. Expecting <code class=\"interpreted-text\"\nrole=\"file\">certFile.crt</code> and <code class=\"interpreted-text\"\nrole=\"file\">certFile.key</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/etc/secrets/blockbook-frontend-\u2039name\u203a/certFile\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.coinName",
                    "option_description": "<rendered-html><p>See <a\nhref=\"https://github.com/trezor/blockbook/blob/master/bchain/coins/blockchain.go#L61\">https://github.com/trezor/blockbook/blob/master/bchain/coins/blockchain.go#L61</a>\nfor current of coins supported in master (Note: may differ from\nrelease).</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"Bitcoin\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.configFile",
                    "option_description": "<rendered-html><p>Location of the blockbook configuration file.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/lib/blockbook-frontend-\u2039name\u203a/config.json\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.cssDir",
                    "option_description": "<rendered-html><p>Location of the dir with <code class=\"interpreted-text\"\nrole=\"file\">main.css</code> CSS file. By default, the one shipped with\nthe package is used.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${package}/share/css/\"",
                    "option_example": "\"${dataDir}/static/css/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.dataDir",
                    "option_description": "<rendered-html><p>Location of blockbook-frontend-\u2039name\u203a data directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/blockbook-frontend-\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.debug",
                    "option_description": "<rendered-html><p>Debug mode, return more verbose errors, reload templates on each\nrequest.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable blockbook-frontend application.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.extraCmdLineOptions",
                    "option_description": "<rendered-html><p>Extra command line options to pass to Blockbook. Run blockbook \u2013help\nto list all available options.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-workers=1\"\n  \"-dbcache=0\"\n  \"-logtosderr\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.extraConfig",
                    "option_description": "<rendered-html><p>Additional configurations to be appended to <code\nclass=\"interpreted-text\" role=\"file\">coin.conf</code>. Overrides any\nalready defined configuration options. See <a\nhref=\"https://github.com/trezor/blockbook/tree/master/configs/coins\">https://github.com/trezor/blockbook/tree/master/configs/coins</a>\nfor current configuration options supported in master (Note: may differ\nfrom release).</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": "{\n         \"alternative_estimate_fee\" = \"whatthefee-disabled\";\n         \"alternative_estimate_fee_params\" = \"{\\\"url\\\": \\\"https://whatthefee.io/data.json\\\", \\\"periodSeconds\\\": 60}\";\n         \"fiat_rates\" = \"coingecko\";\n         \"fiat_rates_params\" = \"{\\\"url\\\": \\\"https://api.coingecko.com/api/v3\\\", \\\"coin\\\": \\\"bitcoin\\\", \\\"periodSeconds\\\": 60}\";\n         \"coin_shortcut\" = \"BTC\";\n         \"coin_label\" = \"Bitcoin\";\n         \"parse\" = true;\n         \"subversion\" = \"\";\n         \"address_format\" = \"\";\n         \"xpub_magic\" = 76067358;\n         \"xpub_magic_segwit_p2sh\" = 77429938;\n         \"xpub_magic_segwit_native\" = 78792518;\n         \"mempool_workers\" = 8;\n         \"mempool_sub_workers\" = 2;\n         \"block_addresses_to_keep\" = 300;\n       }",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.group",
                    "option_description": "<rendered-html><p>The group as which to run blockbook-frontend-\u2039name\u203a.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"blockbook-frontend-\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.internal",
                    "option_description": "<rendered-html><p>Internal http server binding <code>[address]:port</code>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\":9030\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.messageQueueBinding",
                    "option_description": "<rendered-html><p>Message Queue Binding <code>address:port</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"tcp://127.0.0.1:38330\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.package",
                    "option_description": "<rendered-html><p>The blockbook package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.blockbook",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.public",
                    "option_description": "<rendered-html><p>Public http server binding <code>[address]:port</code>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\":9130\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.rpc.password",
                    "option_description": "<rendered-html><p>RPC password for JSON-RPC connections. Warning: this is stored in\ncleartext in the Nix store!!! Use <code>configFile</code> or\n<code>passwordFile</code> if needed.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"rpc\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "aTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.rpc.passwordFile",
                    "option_description": "<rendered-html><p>File containing password of the RPC user. Note: This options is\nignored when <code>configFile</code> is used.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ajvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.rpc.port",
                    "option_description": "<rendered-html><p>Port for JSON-RPC connections.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8030",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "azvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.rpc.url",
                    "option_description": "<rendered-html><p>URL for JSON-RPC connections.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"http://127.0.0.1\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.rpc.user",
                    "option_description": "<rendered-html><p>Username for JSON-RPC connections.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"rpc\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.sync",
                    "option_description": "<rendered-html><p>Synchronizes until tip, if together with zeromq, keeps index\nsynchronized.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.templateDir",
                    "option_description": "<rendered-html><p>Location of the HTML templates. By default, ones shipped with the\npackage are used.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${package}/share/templates/\"",
                    "option_example": "\"${dataDir}/templates/static/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "bzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blockbook-frontend.nix",
                    "option_name": "services.blockbook-frontend.<name>.user",
                    "option_description": "<rendered-html><p>The user as which to run blockbook-frontend-\u2039name\u203a.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"blockbook-frontend-\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blocky.nix",
                    "option_name": "services.blocky.enable",
                    "option_description": "<rendered-html><p>Whether to enable blocky, a fast and lightweight DNS proxy as\nad-blocker for local network with many features.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/blocky.nix",
                    "option_name": "services.blocky.settings",
                    "option_description": "<rendered-html><p>Blocky configuration. Refer to <a\nhref=\"https://0xerr0r.github.io/blocky/configuration/\">https://0xerr0r.github.io/blocky/configuration/</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "cjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/bloop.nix",
                    "option_name": "services.bloop.extraOptions",
                    "option_description": "<rendered-html><p>Specifies additional command line argument to pass to bloop java\nprocess.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"-J-Xmx2G\"\n  \"-J-XX:MaxInlineLevel=20\"\n  \"-J-XX:+UseParallelGC\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "czvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/development/bloop.nix",
                    "option_name": "services.bloop.install",
                    "option_description": "<rendered-html><p>Whether to install a user service for the Bloop server.</p>\n<p>The service must be manually started for each user with \u201csystemctl\n\u2013user start bloop\u201d.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/desktops/blueman.nix",
                    "option_name": "services.blueman.enable",
                    "option_description": "<rendered-html><p>Whether to enable blueman, a bluetooth manager.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.coreSettings",
                    "option_description": "<rendered-html><p>Settings for the core.conf file, <a\nhref=\"https://github.com/BlueMap-Minecraft/BlueMap/blob/master/BlueMapCommon/src/main/resources/de/bluecolored/bluemap/config/core.conf\">see\nupstream docs</a>.</p>\n</rendered-html>",
                    "option_type": "HOCON value",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "djvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.coreSettings.data",
                    "option_description": "<rendered-html><p>Folder for where bluemap stores its data</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/bluemap\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "dzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.coreSettings.metrics",
                    "option_description": "<rendered-html><p>Whether to enable Sending usage metrics containing the version of\nbluemap in use.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.defaultWorld",
                    "option_description": "<rendered-html><p>The world used by the default map ruleset. If you configure your own\nmaps you do not need to set this.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "${config.services.minecraft.dataDir}/world",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "eTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.enable",
                    "option_description": "<rendered-html><p>Whether to enable bluemap.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ejvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.enableNginx",
                    "option_description": "<rendered-html><p>Enable configuring a virtualHost for serving the bluemap webapp</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ezvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.enableRender",
                    "option_description": "<rendered-html><p>Enable rendering</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.eula",
                    "option_description": "<rendered-html><p>By changing this option to true you confirm that you own a copy of\nminecraft Java Edition, and that you agree to minecrafts EULA.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.host",
                    "option_description": "<rendered-html><p>Domain on which nginx will serve the bluemap webapp</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.maps",
                    "option_description": "<rendered-html><p>Settings for files in <code>maps/</code>. If you define anything here\nyou must define everything yourself. See the default for an example with\ngood options for the different world types. For valid values <a\nhref=\"https://github.com/BlueMap-Minecraft/BlueMap/blob/master/BlueMapCommon/src/main/resources/de/bluecolored/bluemap/config/maps/map.conf\">consult\nupstream docs</a>.</p>\n</rendered-html>",
                    "option_type": "attribute set of (HOCON value)",
                    "option_default": "{\n  \"overworld\" = {\n    world = \"${cfg.defaultWorld}\";\n    ambient-light = 0.1;\n    cave-detection-ocean-floor = -5;\n  };\n\n  \"nether\" = {\n    world = \"${cfg.defaultWorld}/DIM-1\";\n    sorting = 100;\n    sky-color = \"#290000\";\n    void-color = \"#150000\";\n    ambient-light = 0.6;\n    world-sky-light = 0;\n    remove-caves-below-y = -10000;\n    cave-detection-ocean-floor = -5;\n    cave-detection-uses-block-light = true;\n    max-y = 90;\n  };\n\n  \"end\" = {\n    world = \"${cfg.defaultWorld}/DIM1\";\n    sorting = 200;\n    sky-color = \"#080010\";\n    void-color = \"#080010\";\n    ambient-light = 0.6;\n    world-sky-light = 0;\n    remove-caves-below-y = -10000;\n    cave-detection-ocean-floor = -5;\n  };\n};\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "fzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.maps.<name>.world",
                    "option_description": "<rendered-html><p>Path to world folder containing the dimension to render</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.onCalendar",
                    "option_description": "<rendered-html><p>How often to trigger rendering the map, in the format of a systemd\ntimer onCalendar configuration. See <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.timer.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.timer(5)</code></a>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"*-*-* 03:10:00\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gTvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.resourcepacks",
                    "option_description": "<rendered-html><p>A set of resourcepacks to use, loaded in alphabetical order</p>\n</rendered-html>",
                    "option_type": "attribute set of path in the Nix store",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gjvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.storage",
                    "option_description": "<rendered-html><p>Where the rendered map will be stored. Unless you are doing something\nadvanced you should probably leave this alone and configure webRoot\ninstead. <a\nhref=\"https://github.com/BlueMap-Minecraft/BlueMap/tree/master/BlueMapCommon/src/main/resources/de/bluecolored/bluemap/config/storages\">See\nupstream docs</a></p>\n</rendered-html>",
                    "option_type": "attribute set of (HOCON value)",
                    "option_default": "{\n  \"file\" = {\n    root = \"${config.services.bluemap.webRoot}/maps\";\n  };\n}\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "gzvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.storage.<name>.storage-type",
                    "option_description": "<rendered-html><p>Type of storage config</p>\n</rendered-html>",
                    "option_type": "one of \"FILE\", \"SQL\"",
                    "option_default": "\"FILE\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hDvobZABZu4t0s2IHTCa",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.webRoot",
                    "option_description": "<rendered-html><p>The directory for saving and serving the webapp and the maps</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/bluemap/web\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.webappSettings",
                    "option_description": "<rendered-html><p>Settings for the webapp.conf file, see <a\nhref=\"https://github.com/BlueMap-Minecraft/BlueMap/blob/master/BlueMapCommon/src/main/resources/de/bluecolored/bluemap/config/webapp.conf\">upstream\ndocs</a>.</p>\n</rendered-html>",
                    "option_type": "HOCON value",
                    "option_default": "{\n  enabled = true;\n  webroot = config.services.bluemap.webRoot;\n}\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.webserverSettings",
                    "option_description": "<rendered-html><p>Settings for the webserver.conf file, usually not required. <a\nhref=\"https://github.com/BlueMap-Minecraft/BlueMap/blob/master/BlueMapCommon/src/main/resources/de/bluecolored/bluemap/config/webserver.conf\">See\nupstream docs</a>.</p>\n</rendered-html>",
                    "option_type": "HOCON value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "hzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/bluemap.nix",
                    "option_name": "services.bluemap.webserverSettings.enabled",
                    "option_description": "<rendered-html><p>Enable bluemap\u2019s built-in webserver. Disabled by default in nixos for\nuse of nginx directly.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/boinc/client.nix",
                    "option_name": "services.boinc.allowRemoteGuiRpc",
                    "option_description": "<rendered-html><p>If set to true, any remote host can connect to and control this BOINC\nclient (subject to password authentication). If instead set to false,\nonly the hosts listed in <code class=\"interpreted-text\"\nrole=\"var\">dataDir</code>/remote_hosts.cfg will be allowed to\nconnect.</p>\n<p>See also: <a\nhref=\"https://boinc.berkeley.edu/wiki/Controlling_BOINC_remotely#Remote_access\">https://boinc.berkeley.edu/wiki/Controlling_BOINC_remotely#Remote_access</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "iTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/boinc/client.nix",
                    "option_name": "services.boinc.dataDir",
                    "option_description": "<rendered-html><p>The directory in which to store BOINC\u2019s configuration and data\nfiles.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/boinc\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ijvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/boinc/client.nix",
                    "option_name": "services.boinc.enable",
                    "option_description": "<rendered-html><p>Whether to enable the BOINC distributed computing client. If this\noption is set to true, the boinc_client daemon will be run as a\nbackground service. The boinccmd command can be used to control the\ndaemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "izvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/boinc/client.nix",
                    "option_name": "services.boinc.extraEnvPackages",
                    "option_description": "<rendered-html><p>Additional packages to make available in the environment in which\nBOINC will run. Common choices are:</p>\n<ul>\n<li><p><code class=\"interpreted-text\" role=\"var\">pkgs.virtualbox</code>:\nThe VirtualBox virtual machine framework. Required by some BOINC\nprojects, such as ATLAS@home.</p></li>\n<li><p><code class=\"interpreted-text\" role=\"var\">pkgs.ocl-icd</code>:\nOpenCL infrastructure library. Required by BOINC projects that use\nOpenCL, in addition to a device-specific OpenCL driver.</p></li>\n<li><p><code class=\"interpreted-text\"\nrole=\"var\">pkgs.linuxPackages.nvidia_x11</code>: Provides CUDA\nlibraries. Required by BOINC projects that use CUDA. Note that this\nrequires an NVIDIA graphics device to be present on the system.</p>\n<p>Also provides OpenCL drivers for NVIDIA GPUs; <code\nclass=\"interpreted-text\" role=\"var\">pkgs.ocl-icd</code> is also needed\nin this case.</p></li>\n</ul>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.virtualbox ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/computing/boinc/client.nix",
                    "option_name": "services.boinc.package",
                    "option_description": "<rendered-html><p>The boinc package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.boinc",
                    "option_example": "boinc-headless",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.appKeyFile",
                    "option_description": "<rendered-html><p>A file containing the Laravel APP_KEY - a 32 character long, base64\nencoded key used for encryption where needed. Can be generated with\n<code>head -c 32 /dev/urandom | base64</code>.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/run/keys/bookstack-appkey\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.appURL",
                    "option_description": "<rendered-html><p>The root URL that you want to host BookStack on. All URLs in\nBookStack will be generated using this value. If you change this in the\nfuture you may need to run a command to update stored URLs in the\ndatabase. Command example:\n<code>php artisan bookstack:update-url https://old.example.com https://new.example.com</code></p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"http\\${lib.optionalString tlsEnabled \\\"s\\\"}://\\${cfg.hostname}\"",
                    "option_example": "\"https://example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "jzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.config",
                    "option_description": "<rendered-html><p>BookStack configuration options to set in the <code\nclass=\"interpreted-text\" role=\"file\">.env</code> file.</p>\n<p>Refer to <a\nhref=\"https://www.bookstackapp.com/docs/\">https://www.bookstackapp.com/docs/</a>\nfor details on supported values.</p>\n<p>Settings containing secret data should be set to an attribute set\ncontaining the attribute <code>_secret</code> - a string pointing to a\nfile containing the value the option should be set to. See the example\nto get a better picture of this: in the resulting <code\nclass=\"interpreted-text\" role=\"file\">.env</code> file, the\n<code>OIDC_CLIENT_SECRET</code> key will be set to the contents of the\n<code class=\"interpreted-text\" role=\"file\">/run/keys/oidc_secret</code>\nfile.</p>\n</rendered-html>",
                    "option_type": "attribute set of (null or boolean or signed integer or 16 bit unsigned integer; between 0 and 65535 (both inclusive) or path or string or (submodule))",
                    "option_default": "{ }",
                    "option_example": "{\n  ALLOWED_IFRAME_HOSTS = \"https://example.com\";\n  WKHTMLTOPDF = \"/home/user/bins/wkhtmltopdf\";\n  AUTH_METHOD = \"oidc\";\n  OIDC_NAME = \"MyLogin\";\n  OIDC_DISPLAY_NAME_CLAIMS = \"name\";\n  OIDC_CLIENT_ID = \"bookstack\";\n  OIDC_CLIENT_SECRET = {_secret = \"/run/keys/oidc_secret\"};\n  OIDC_ISSUER = \"https://keycloak.example.com/auth/realms/My%20Realm\";\n  OIDC_ISSUER_DISCOVER = true;\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.dataDir",
                    "option_description": "<rendered-html><p>BookStack data directory</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/bookstack\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.database.createLocally",
                    "option_description": "<rendered-html><p>Create the database and database user locally.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.database.host",
                    "option_description": "<rendered-html><p>Database host address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "kzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.database.name",
                    "option_description": "<rendered-html><p>Database name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bookstack\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.database.passwordFile",
                    "option_description": "<rendered-html><p>A file containing the password corresponding to <code\nclass=\"interpreted-text\" role=\"option\">database.user</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/bookstack-dbpassword\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.database.port",
                    "option_description": "<rendered-html><p>Database host port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3306",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ljvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.database.user",
                    "option_description": "<rendered-html><p>Database username.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "user",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "lzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.enable",
                    "option_description": "<rendered-html><p>Whether to enable BookStack.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.group",
                    "option_description": "<rendered-html><p>Group bookstack runs as.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bookstack\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.hostname",
                    "option_description": "<rendered-html><p>The hostname to serve BookStack on.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "config.networking.fqdnOrHostName",
                    "option_example": "\"bookstack.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.mail.driver",
                    "option_description": "<rendered-html><p>Mail driver to use.</p>\n</rendered-html>",
                    "option_type": "one of \"smtp\", \"sendmail\"",
                    "option_default": "\"smtp\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "mzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.mail.encryption",
                    "option_description": "<rendered-html><p>SMTP encryption mechanism to use.</p>\n</rendered-html>",
                    "option_type": "null or value \"tls\" (singular enum)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.mail.from",
                    "option_description": "<rendered-html><p>Mail \u201cfrom\u201d email.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"mail@bookstackapp.com\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.mail.fromName",
                    "option_description": "<rendered-html><p>Mail \u201cfrom\u201d name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"BookStack\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "njvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.mail.host",
                    "option_description": "<rendered-html><p>Mail host address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "nzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.mail.passwordFile",
                    "option_description": "<rendered-html><p>A file containing the password corresponding to <code\nclass=\"interpreted-text\" role=\"option\">mail.user</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/run/keys/bookstack-mailpassword\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.mail.port",
                    "option_description": "<rendered-html><p>Mail host port.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "1025",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "oTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.mail.user",
                    "option_description": "<rendered-html><p>Mail username.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"bookstack\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ojvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.maxUploadSize",
                    "option_description": "<rendered-html><p>The maximum size for uploads (e.g. images).</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"18M\"",
                    "option_example": "\"1G\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ozvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx",
                    "option_description": "<rendered-html><p>With this option, you can customize the nginx virtualHost\nsettings.</p>\n</rendered-html>",
                    "option_type": "submodule",
                    "option_default": "{ }",
                    "option_example": "{\n  serverAliases = [\n    \"bookstack.${config.networking.domain}\"\n  ];\n  # To enable encryption and let let's encrypt take care of certificate\n  forceSSL = true;\n  enableACME = true;\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.acmeFallbackHost",
                    "option_description": "<rendered-html><p>Host which to proxy requests to if ACME challenge is not found.\nUseful if you want multiple hosts to be able to verify the same domain\nname.</p>\n<p>With this option, you could request certificates for the present\ndomain with an ACME client that is running on another host, which you\nwould specify here.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.acmeRoot",
                    "option_description": "<rendered-html><p>Directory for the ACME challenge, which is <strong>public</strong>.\nDon\u2019t put certs or keys in here. Set to null to inherit from\nconfig.security.acme.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"/var/lib/acme/acme-challenge\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.addSSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS in addition to plain HTTP. This will set\ndefaults for <code>listen</code> to listen on all interfaces on the\nrespective default ports (80, 443).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "pzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.default",
                    "option_description": "<rendered-html><p>Makes this vhost the default.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.enableACME",
                    "option_description": "<rendered-html><p>Whether to ask Let\u2019s Encrypt to sign a certificate for this vhost.\nAlternately, you can use an existing certificate through <code\nclass=\"interpreted-text\" role=\"option\">useACMEHost</code>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "qzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the vhost verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.forceSSL",
                    "option_description": "<rendered-html><p>Whether to add a separate nginx server block that redirects (defaults\nto 301, configurable with <code>redirectCode</code>) all plain HTTP\ntraffic to HTTPS. This will set defaults for <code>listen</code> to\nlisten on all interfaces on the respective default ports (80, 443),\nwhere the non-SSL listens are used for the redirect vhosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.globalRedirect",
                    "option_description": "<rendered-html><p>If set, all requests for this host are redirected (defaults to 301,\nconfigurable with <code>redirectCode</code>) to the given hostname.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"newserver.example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.http2",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/2 protocol. Note that (as of writing) due\nto nginx\u2019s implementation, to disable HTTP/2 you have to disable it on\nall vhosts that use a given IP address / port. If there is one server\nblock configured to enable http2, then it is enabled for all server\nblocks on this IP. See <a\nhref=\"https://stackoverflow.com/a/39466948/263061\">https://stackoverflow.com/a/39466948/263061</a>.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "rzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.http3",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/3 protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat HTTP/3 support is experimental and <em>not</em> yet recommended for\nproduction. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a> HTTP/3\navailability must be manually advertised, preferably in each location\nblock.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.http3_hq",
                    "option_description": "<rendered-html><p>Whether to enable the HTTP/0.9 protocol negotiation used in QUIC\ninteroperability tests. This requires using <code>pkgs.nginxQuic</code>\npackage which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code> and activate the\nQUIC transport protocol\n<code>services.nginx.virtualHosts.&lt;name&gt;.quic = true;</code>. Note\nthat special application protocol support is experimental and\n<em>not</em> yet recommended for production. Read more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.kTLS",
                    "option_description": "<rendered-html><p>Whether to enable kTLS support. Implementing TLS in the kernel (kTLS)\nimproves performance by significantly reducing the need for copying\noperations between user space and the kernel. Required Nginx version\n1.21.4 or later.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "sjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.listen",
                    "option_description": "<rendered-html><p>Listen addresses and ports for this virtual host. IPv6 addresses must\nbe enclosed in square brackets. Note: this option overrides\n<code>addSSL</code> and <code>onlySSL</code>.</p>\n<p>If you only want to set the addresses manually and not the ports,\ntake a look at <code>listenAddresses</code>.</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": "[ ]",
                    "option_example": "[\n  {\n    addr = \"195.154.1.1\";\n    port = 443;\n    ssl = true;\n  }\n  {\n    addr = \"192.154.1.1\";\n    port = 80;\n  }\n  {\n    addr = \"unix:/var/run/nginx.sock\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "szvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.listen.*.addr",
                    "option_description": "<rendered-html><p>Listen address.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.listen.*.extraParameters",
                    "option_description": "<rendered-html><p>Extra parameters of this listen directive.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"backlog=1024\"\n  \"deferred\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.listen.*.port",
                    "option_description": "<rendered-html><p>Port number to listen on. If unset and the listen address is not a\nsocket then nginx defaults to 80.</p>\n</rendered-html>",
                    "option_type": "null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.listen.*.proxyProtocol",
                    "option_description": "<rendered-html><p>Enable PROXY protocol.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "tzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.listen.*.ssl",
                    "option_description": "<rendered-html><p>Enable SSL.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.listenAddresses",
                    "option_description": "<rendered-html><p>Listen addresses for this virtual host. Compared to\n<code>listen</code> this only sets the addresses and the ports are\nchosen automatically.</p>\n<p>Note: This option overrides <code>enableIPv6</code></p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"127.0.0.1\"\n  \"[::1]\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations",
                    "option_description": "<rendered-html><p>Declarative location config</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  \"/\" = {\n    proxyPass = \"http://localhost:3000\";\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ujvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.alias",
                    "option_description": "<rendered-html><p>Alias directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/alias/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "uzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.basicAuth",
                    "option_description": "<rendered-html><p>Basic Auth protection for a vhost.</p>\n<p>WARNING: This is implemented to store the password in plain text in\nthe Nix store.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  user = \"password\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.basicAuthFile",
                    "option_description": "<rendered-html><p>Basic Auth password file for a vhost. Can be created via: <code\nclass=\"interpreted-text\"\nrole=\"command\">htpasswd -c &lt;filename&gt; &lt;username&gt;</code>.</p>\n<p>WARNING: The generate file contains the users\u2019 passwords in a\nnon-cryptographically-securely hashed way.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.extraConfig",
                    "option_description": "<rendered-html><p>These lines go to the end of the location verbatim.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.fastcgiParams",
                    "option_description": "<rendered-html><p>FastCGI parameters to override. Unlike in the Nginx configuration\nfile, overriding only some default parameters won\u2019t unset the default\nvalues for other parameters.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or path)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "vzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.index",
                    "option_description": "<rendered-html><p>Adds index directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"index.php index.html\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.priority",
                    "option_description": "<rendered-html><p>Order of this location block in relation to the others in the vhost.\nThe semantics are the same as with <code>lib.mkOrder</code>. Smaller\nvalues have a greater priority.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1000",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.proxyPass",
                    "option_description": "<rendered-html><p>Adds proxy_pass directive and sets recommended proxy headers if\nrecommendedProxySettings is enabled.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"http://www.example.org/\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.proxyWebsockets",
                    "option_description": "<rendered-html><p>Whether to support proxying websocket connections with HTTP/1.1.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "wzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.recommendedProxySettings",
                    "option_description": "<rendered-html><p>Enable recommended proxy settings.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "config.services.nginx.recommendedProxySettings",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.return",
                    "option_description": "<rendered-html><p>Adds a return directive, for e.g. redirections.</p>\n</rendered-html>",
                    "option_type": "null or string or signed integer",
                    "option_default": "null",
                    "option_example": "\"301 http://example.com$request_uri\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.root",
                    "option_description": "<rendered-html><p>Root directory for requests.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/your/root/directory\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.locations.<name>.tryFiles",
                    "option_description": "<rendered-html><p>Adds try_files directive.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"$uri =404\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "xzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.onlySSL",
                    "option_description": "<rendered-html><p>Whether to enable HTTPS and reject plain HTTP connections. This will\nset defaults for <code>listen</code> to listen on all interfaces on port\n443.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.quic",
                    "option_description": "<rendered-html><p>Whether to enable the QUIC transport protocol. This requires using\n<code>pkgs.nginxQuic</code> package which can be achieved by setting\n<code>services.nginx.package = pkgs.nginxQuic;</code>. Note that QUIC\nsupport is experimental and <em>not</em> yet recommended for production.\nRead more at <a\nhref=\"https://quic.nginx.org/\">https://quic.nginx.org/</a></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.redirectCode",
                    "option_description": "<rendered-html><p>HTTP status used by <code>globalRedirect</code> and\n<code>forceSSL</code>. Possible usecases include temporary (302, 307)\nredirects, keeping the request method and body (307, 308), or explicitly\nresetting the method to GET (303). See <a\nhref=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections</a>.</p>\n</rendered-html>",
                    "option_type": "integer between 300 and 399 (both inclusive)",
                    "option_default": "301",
                    "option_example": "308",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.rejectSSL",
                    "option_description": "<rendered-html><p>Whether to listen for and reject all HTTPS connections to this vhost.\nUseful in <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.nginx.virtualHosts.&lt;name&gt;.default&amp;query=services.nginx.virtualHosts.&lt;name&gt;.default\">default</a>\nserver blocks to avoid serving the certificate for another vhost. Uses\nthe <code>ssl_reject_handshake</code> directive available in nginx\nversions 1.19.4 and above.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "yzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.reuseport",
                    "option_description": "<rendered-html><p>Create an individual listening socket . It is required to specify\nonly once on one of the hosts.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zDvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.root",
                    "option_description": "<rendered-html><p>The path of the web root directory.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/data/webserver/docs\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zTvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.serverAliases",
                    "option_description": "<rendered-html><p>Additional names of virtual hosts served by this virtual host\nconfiguration.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"www.example.org\"\n  \"example.org\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zjvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.serverName",
                    "option_description": "<rendered-html><p>Name of this virtual host. Defaults to attribute name in\nvirtualHosts.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"example.org\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "zzvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.sslCertificate",
                    "option_description": "<rendered-html><p>Path to server SSL certificate.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.cert\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.sslCertificateKey",
                    "option_description": "<rendered-html><p>Path to server SSL certificate key.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": "\"/var/host.key\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.sslTrustedCertificate",
                    "option_description": "<rendered-html><p>Path to root SSL certificate for stapling and client\ncertificates.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.nginx.useACMEHost",
                    "option_description": "<rendered-html><p>A host of an existing Let\u2019s Encrypt certificate to use. This is\nuseful if you have many subdomains and want to avoid hitting the <a\nhref=\"https://letsencrypt.org/docs/rate-limits\">rate limit</a>.\nAlternately, you can generate a certificate through <code\nclass=\"interpreted-text\" role=\"option\">enableACME</code>. <em>Note that\nthis option does not create any certificates, nor it does add subdomains\nto existing ones \u2013 you will need to create them manually using <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=security.acme.certs&amp;query=security.acme.certs\">security.acme.certs</a>.</em></p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "0zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.poolConfig",
                    "option_description": "<rendered-html><p>Options for the bookstack PHP pool. See the documentation on\n<code>php-fpm.conf</code> for details on configuration directives.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or signed integer or boolean)",
                    "option_default": "{\n  pm = \"dynamic\";\n  \"pm.max_children\" = 32;\n  \"pm.max_requests\" = 500;\n  \"pm.max_spare_servers\" = 4;\n  \"pm.min_spare_servers\" = 2;\n  \"pm.start_servers\" = 2;\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/bookstack.nix",
                    "option_name": "services.bookstack.user",
                    "option_description": "<rendered-html><p>User bookstack runs as.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bookstack\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs",
                    "option_description": "<rendered-html><p>Deduplicating backups using BorgBackup. Adding a job will cause a\nborg-job-NAME wrapper to be added to your system path, so that you can\nperform maintenance easily. See also the chapter about BorgBackup in the\nNixOS manual.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "  { # for a local backup\n    rootBackup = {\n      paths = \"/\";\n      exclude = [ \"/nix\" ];\n      repo = \"/path/to/local/repo\";\n      encryption = {\n        mode = \"repokey\";\n        passphrase = \"secret\";\n      };\n      compression = \"auto,lzma\";\n      startAt = \"weekly\";\n    };\n  }\n  { # Root backing each day up to a remote backup server. We assume that you have\n    #   * created a password less key: ssh-keygen -N \"\" -t ed25519 -f /path/to/ssh_key\n    #     best practices are: use -t ed25519, /path/to = /run/keys\n    #   * the passphrase is in the file /run/keys/borgbackup_passphrase\n    #   * you have initialized the repository manually\n    paths = [ \"/etc\" \"/home\" ];\n    exclude = [ \"/nix\" \"'**/.cache'\" ];\n    doInit = false;\n    repo =  \"user3@arep.repo.borgbase.com:repo\";\n    encryption = {\n      mode = \"repokey-blake2\";\n      passCommand = \"cat /path/to/passphrase\";\n    };\n    environment = { BORG_RSH = \"ssh -i /path/to/ssh_key\"; };\n    compression = \"auto,lzma\";\n    startAt = \"daily\";\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.appendFailedSuffix",
                    "option_description": "<rendered-html><p>Append a <code>.failed</code> suffix to the archive name, which is\nonly removed if <code class=\"interpreted-text\"\nrole=\"command\">borg create</code> has a zero exit status.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "1zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.archiveBaseName",
                    "option_description": "<rendered-html><p>How to name the created archives. A timestamp, whose format is\ndetermined by <code class=\"interpreted-text\"\nrole=\"option\">dateFormat</code>, will be appended. The full name can be\nmodified at runtime (<code>$archiveName</code>). Placeholders like\n<code>{hostname}</code> must not be used. Use <code>null</code> for no\nbase name.</p>\n</rendered-html>",
                    "option_type": "null or string matching the pattern [^/{}]+",
                    "option_default": "\"${config.networking.hostName}-<name>\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.compression",
                    "option_description": "<rendered-html><p>Compression method to use. Refer to <code class=\"interpreted-text\"\nrole=\"command\">borg help compression</code> for all available\noptions.</p>\n</rendered-html>",
                    "option_type": "string matching the pattern none|(auto,)?(lz4|zstd|zlib|lzma)(,[[:digit:]]{1,2})?",
                    "option_default": "\"lz4\"",
                    "option_example": "\"auto,lzma\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.dateFormat",
                    "option_description": "<rendered-html><p>Arguments passed to <code class=\"interpreted-text\"\nrole=\"command\">date</code> to create a timestamp suffix for the archive\nname.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"+%Y-%m-%dT%H:%M:%S\"",
                    "option_example": "\"-u +%s\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.doInit",
                    "option_description": "<rendered-html><p>Run <code class=\"interpreted-text\" role=\"command\">borg init</code> if\nthe specified <code class=\"interpreted-text\" role=\"option\">repo</code>\ndoes not exist. You should set this to <code>false</code> if the\nrepository is located on an external drive that might not always be\nmounted.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "2zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.dumpCommand",
                    "option_description": "<rendered-html><p>Backup the stdout of this program instead of filesystem paths.\nMutually exclusive with <code class=\"interpreted-text\"\nrole=\"option\">paths</code>.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/path/to/createZFSsend.sh\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.encryption.mode",
                    "option_description": "<rendered-html><p>Encryption mode to use. Setting a mode other than <code>\"none\"</code>\nrequires you to specify a <code class=\"interpreted-text\"\nrole=\"option\">passCommand</code> or a <code class=\"interpreted-text\"\nrole=\"option\">passphrase</code>.</p>\n</rendered-html>",
                    "option_type": "one of \"repokey\", \"keyfile\", \"repokey-blake2\", \"keyfile-blake2\", \"authenticated\", \"authenticated-blake2\", \"none\"",
                    "option_default": null,
                    "option_example": "\"repokey-blake2\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.encryption.passCommand",
                    "option_description": "<rendered-html><p>A command which prints the passphrase to stdout. Mutually exclusive\nwith <code class=\"interpreted-text\" role=\"option\">passphrase</code>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"cat /path/to/passphrase_file\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.encryption.passphrase",
                    "option_description": "<rendered-html><p>The passphrase the backups are encrypted with. Mutually exclusive\nwith <code class=\"interpreted-text\" role=\"option\">passCommand</code>. If\nyou do not want the passphrase to be stored in the world-readable Nix\nstore, use <code class=\"interpreted-text\"\nrole=\"option\">passCommand</code>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "3zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.environment",
                    "option_description": "<rendered-html><p>Environment variables passed to the backup script. You can for\nexample specify which SSH key to use.</p>\n</rendered-html>",
                    "option_type": "attribute set of string",
                    "option_default": "{ }",
                    "option_example": "{\n  BORG_RSH = \"ssh -i /path/to/key\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.exclude",
                    "option_description": "<rendered-html><p>Exclude paths matching any of the given patterns. See <code\nclass=\"interpreted-text\" role=\"command\">borg help patterns</code> for\npattern syntax.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"/home/*/.cache\"\n  \"/nix\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.extraArgs",
                    "option_description": "<rendered-html><p>Additional arguments for all <code class=\"interpreted-text\"\nrole=\"command\">borg</code> calls the service has. Handle with care.</p>\n</rendered-html>",
                    "option_type": "string or (list of string) convertible to it",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--remote-path=/path/to/borg\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.extraCompactArgs",
                    "option_description": "<rendered-html><p>Additional arguments for <code class=\"interpreted-text\"\nrole=\"command\">borg compact</code>. Can also be set at runtime using\n<code>$extraCompactArgs</code>.</p>\n</rendered-html>",
                    "option_type": "string or (list of string) convertible to it",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--cleanup-commits\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "4zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.extraCreateArgs",
                    "option_description": "<rendered-html><p>Additional arguments for <code class=\"interpreted-text\"\nrole=\"command\">borg create</code>. Can also be set at runtime using\n<code>$extraCreateArgs</code>.</p>\n</rendered-html>",
                    "option_type": "string or (list of string) convertible to it",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--stats\"\n  \"--checkpoint-interval 600\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.extraInitArgs",
                    "option_description": "<rendered-html><p>Additional arguments for <code class=\"interpreted-text\"\nrole=\"command\">borg init</code>. Can also be set at runtime using\n<code>$extraInitArgs</code>.</p>\n</rendered-html>",
                    "option_type": "string or (list of string) convertible to it",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--append-only\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.extraPruneArgs",
                    "option_description": "<rendered-html><p>Additional arguments for <code class=\"interpreted-text\"\nrole=\"command\">borg prune</code>. Can also be set at runtime using\n<code>$extraPruneArgs</code>.</p>\n</rendered-html>",
                    "option_type": "string or (list of string) convertible to it",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"--save-space\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.failOnWarnings",
                    "option_description": "<rendered-html><p>Fail the whole backup job if any borg command returns a warning (exit\ncode 1), for example because a file changed during backup.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "5zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.group",
                    "option_description": "<rendered-html><p>The group borg is run as. User or group needs read permission for the\nspecified <code class=\"interpreted-text\" role=\"option\">paths</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"root\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.inhibitsSleep",
                    "option_description": "<rendered-html><p>Prevents the system from sleeping while backing up.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.paths",
                    "option_description": "<rendered-html><p>Path(s) to back up. Mutually exclusive with <code\nclass=\"interpreted-text\" role=\"option\">dumpCommand</code>.</p>\n</rendered-html>",
                    "option_type": "null or ((list of string) or string convertible to it)",
                    "option_default": "null",
                    "option_example": "\"/home/user\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.patterns",
                    "option_description": "<rendered-html><p>Include/exclude paths matching the given patterns. The first matching\npatterns is used, so if an include pattern (prefix <code>+</code>)\nmatches before an exclude pattern (prefix <code>-</code>), the file is\nbacked up. See <a\nhref=\"https://borgbackup.readthedocs.io/en/stable/usage/help.html#borg-patterns\"><code\nclass=\"interpreted-text\" role=\"command\">borg help patterns</code></a>\nfor pattern syntax.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"+ /home/susan\"\n  \"- /home/*\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "6zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.persistentTimer",
                    "option_description": "<rendered-html><p>Set the <code>Persistent</code> option for the <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.timer.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.timer(5)</code></a>\nwhich triggers the backup immediately if the last trigger was missed\n(e.g. if the system was powered down).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.postCreate",
                    "option_description": "<rendered-html><p>Shell commands to run after <code class=\"interpreted-text\"\nrole=\"command\">borg create</code>. The name of the created archive is\nstored in <code>$archiveName</code>.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.postHook",
                    "option_description": "<rendered-html><p>Shell commands to run just before exit. They are executed even if a\nprevious command exits with a non-zero exit code. The latter is\navailable as <code>$exitStatus</code>.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.postInit",
                    "option_description": "<rendered-html><p>Shell commands to run after <code class=\"interpreted-text\"\nrole=\"command\">borg init</code>.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "7zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.postPrune",
                    "option_description": "<rendered-html><p>Shell commands to run after <code class=\"interpreted-text\"\nrole=\"command\">borg prune</code>.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.preHook",
                    "option_description": "<rendered-html><p>Shell commands to run before the backup. This can for example be used\nto mount file systems.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "''\n  # To add excluded paths at runtime\n  extraCreateArgs=\"$extraCreateArgs --exclude /some/path\"\n''",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.privateTmp",
                    "option_description": "<rendered-html><p>Set the <code>PrivateTmp</code> option for the systemd-service. Set\nto false if you need sockets or other files from global /tmp.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.prune.keep",
                    "option_description": "<rendered-html><p>Prune a repository by deleting all archives not matching any of the\nspecified retention options. See <code class=\"interpreted-text\"\nrole=\"command\">borg help prune</code> for the available options.</p>\n</rendered-html>",
                    "option_type": "attribute set of (signed integer or string matching the pattern [[:digit:]]+[Hdwmy])",
                    "option_default": "{ }",
                    "option_example": "{\n  within = \"1d\"; # Keep all archives from the last day\n  daily = 7;\n  weekly = 4;\n  monthly = -1;  # Keep at least one archive for each month\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "8zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.prune.prefix",
                    "option_description": "<rendered-html><p>Only consider archive names starting with this prefix for pruning. By\ndefault, only archives created by this job are considered. Use\n<code>\"\"</code> or <code>null</code> to consider all archives.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "archiveBaseName",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.readWritePaths",
                    "option_description": "<rendered-html><p>By default, borg cannot write anywhere on the system but\n<code>$HOME/.config/borg</code> and <code>$HOME/.cache/borg</code>. If,\nfor example, your preHook script needs to dump files somewhere, put\nthose directories here.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"/var/backup/mysqldump\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.removableDevice",
                    "option_description": "<rendered-html><p>Whether the repo (which must be local) is a removable device.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.repo",
                    "option_description": "<rendered-html><p>Remote or local repository to back up to.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": "\"user@machine:/path/to/repo\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "9zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.startAt",
                    "option_description": "<rendered-html><p>When or how often the backup should run. Must be in the format\ndescribed in <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.time(7)</code></a>. If\nyou do not want the backup to start automatically, use <code>[ ]</code>.\nIt will generate a systemd service borgbackup-job-NAME. You may trigger\nit manually via systemctl restart borgbackup-job-NAME.</p>\n</rendered-html>",
                    "option_type": "string or list of string",
                    "option_default": "\"daily\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.jobs.<name>.user",
                    "option_description": "<rendered-html><p>The user <code class=\"interpreted-text\" role=\"command\">borg</code> is\nrun as. User or group need read permission for the specified <code\nclass=\"interpreted-text\" role=\"option\">paths</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"root\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.package",
                    "option_description": "<rendered-html><p>The borgbackup package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.borgbackup",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.repos",
                    "option_description": "<rendered-html><p>Serve BorgBackup repositories to given public SSH keys, restricting\ntheir access to the repository only. See also the chapter about\nBorgBackup in the NixOS manual. Also, clients do not need to specify the\nabsolute path when accessing the repository, i.e.\n<code>user@machine:.</code> is enough. (Note colon and dot.)</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "-zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.repos.<name>.allowSubRepos",
                    "option_description": "<rendered-html><p>Allow clients to create repositories in subdirectories of the\nspecified <code class=\"interpreted-text\" role=\"option\">path</code>.\nThese can be accessed using <code>user@machine:path/to/subrepo</code>.\nNote that a <code class=\"interpreted-text\" role=\"option\">quota</code>\napplies to repositories independently. Therefore, if this is enabled,\nclients can create multiple repositories and upload an arbitrary amount\nof data.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_DvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.repos.<name>.authorizedKeys",
                    "option_description": "<rendered-html><p>Public SSH keys that are given full write access to this repository.\nYou should use a different SSH key for each repository you write to,\nbecause the specified keys are restricted to running <code\nclass=\"interpreted-text\" role=\"command\">borg serve</code> and can only\naccess this single repository.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_TvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.repos.<name>.authorizedKeysAppendOnly",
                    "option_description": "<rendered-html><p>Public SSH keys that can only be used to append new data (archives)\nto the repository. Note that archives can still be marked as deleted and\nare subsequently removed from disk upon accessing the repo with full\nwrite access, e.g. when pruning.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_jvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.repos.<name>.group",
                    "option_description": "<rendered-html><p>The group <code class=\"interpreted-text\"\nrole=\"command\">borg serve</code> is run as. User or group needs write\npermission for the specified <code class=\"interpreted-text\"\nrole=\"option\">path</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"borg\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "_zvobZABZu4t0s2IHTCb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.repos.<name>.path",
                    "option_description": "<rendered-html><p>Where to store the backups. Note that the directory is created\nautomatically, with correct permissions.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/borgbackup\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ADvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.repos.<name>.quota",
                    "option_description": "<rendered-html><p>Storage quota for the repository. This quota is ensured for all\nsub-repositories if <code class=\"interpreted-text\"\nrole=\"option\">allowSubRepos</code> is enabled but not for the overall\nstorage space used.</p>\n</rendered-html>",
                    "option_type": "null or string matching the pattern [[:digit:].]+[KMGTP]?",
                    "option_default": "null",
                    "option_example": "\"100G\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ATvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgbackup.nix",
                    "option_name": "services.borgbackup.repos.<name>.user",
                    "option_description": "<rendered-html><p>The user <code class=\"interpreted-text\"\nrole=\"command\">borg serve</code> is run as. User or group needs write\npermission for the specified <code class=\"interpreted-text\"\nrole=\"option\">path</code>.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"borg\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.configurations",
                    "option_description": "<rendered-html><p>Set of borgmatic configurations, see <a\nhref=\"https://torsion.org/borgmatic/docs/reference/configuration/\">https://torsion.org/borgmatic/docs/reference/configuration/</a></p>\n</rendered-html>",
                    "option_type": "attribute set of (YAML value)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "AzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.configurations.<name>.repositories",
                    "option_description": "<rendered-html><p>A required list of local or remote repositories with paths and\noptional labels (which can be used with the \u2013repository flag to select a\nrepository). Tildes are expanded. Multiple repositories are backed up to\nin sequence. Borg placeholders can be used. See the output of \u201cborg help\nplaceholders\u201d for details. See ssh_command for SSH options like identity\nfile or port. If systemd service is used, then add local repository\npaths in the systemd service file to the ReadWritePaths list.</p>\n</rendered-html>",
                    "option_type": "null or (list of (submodule))",
                    "option_default": "null",
                    "option_example": "[\n  {\n    label = \"backupserver\";\n    path = \"ssh://user@backupserver/./sourcehostname.borg\";\n  }\n  {\n    label = \"local\";\n    path = \"/mnt/backup\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.configurations.<name>.repositories.*.label",
                    "option_description": "<rendered-html><p>Label to the repository</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.configurations.<name>.repositories.*.path",
                    "option_description": "<rendered-html><p>Path to the repository</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.configurations.<name>.source_directories",
                    "option_description": "<rendered-html><p>List of source directories and files to backup. Globs and tildes are\nexpanded. Do not backslash spaces in path names.</p>\n</rendered-html>",
                    "option_type": "null or (list of string)",
                    "option_default": "null",
                    "option_example": "[\n  \"/home\"\n  \"/etc\"\n  \"/var/log/syslog*\"\n  \"/home/user/path with spaces\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "BzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.enable",
                    "option_description": "<rendered-html><p>Whether to enable borgmatic.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.settings",
                    "option_description": "<rendered-html><p>See <a\nhref=\"https://torsion.org/borgmatic/docs/reference/configuration/\">https://torsion.org/borgmatic/docs/reference/configuration/</a></p>\n</rendered-html>",
                    "option_type": "null or (YAML value)",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.settings.repositories",
                    "option_description": "<rendered-html><p>A required list of local or remote repositories with paths and\noptional labels (which can be used with the \u2013repository flag to select a\nrepository). Tildes are expanded. Multiple repositories are backed up to\nin sequence. Borg placeholders can be used. See the output of \u201cborg help\nplaceholders\u201d for details. See ssh_command for SSH options like identity\nfile or port. If systemd service is used, then add local repository\npaths in the systemd service file to the ReadWritePaths list.</p>\n</rendered-html>",
                    "option_type": "null or (list of (submodule))",
                    "option_default": "null",
                    "option_example": "[\n  {\n    label = \"backupserver\";\n    path = \"ssh://user@backupserver/./sourcehostname.borg\";\n  }\n  {\n    label = \"local\";\n    path = \"/mnt/backup\";\n  }\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.settings.repositories.*.label",
                    "option_description": "<rendered-html><p>Label to the repository</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "CzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.settings.repositories.*.path",
                    "option_description": "<rendered-html><p>Path to the repository</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/borgmatic.nix",
                    "option_name": "services.borgmatic.settings.source_directories",
                    "option_description": "<rendered-html><p>List of source directories and files to backup. Globs and tildes are\nexpanded. Do not backslash spaces in path names.</p>\n</rendered-html>",
                    "option_type": "null or (list of string)",
                    "option_default": "null",
                    "option_example": "[\n  \"/home\"\n  \"/etc\"\n  \"/var/log/syslog*\"\n  \"/home/user/path with spaces\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.checkFrequency",
                    "option_description": "<rendered-html><p>Bosun\u2019s check frequency</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"5m\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.enable",
                    "option_description": "<rendered-html><p>Whether to enable bosun.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "DzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration options for Bosun. You should describe your\ndesired templates, alerts, macros, etc through this configuration\noption.</p>\n<p>A detailed description of the supported syntax can be found\nat-spi2-atk <a\nhref=\"https://bosun.org/configuration.html\">https://bosun.org/configuration.html</a></p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.group",
                    "option_description": "<rendered-html><p>Group account under which bosun runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bosun\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ETvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.influxHost",
                    "option_description": "<rendered-html><p>Host and port of the influxdb database.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"localhost:8086\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.ledisDir",
                    "option_description": "<rendered-html><p>Path to bosun\u2019s ledis data dir</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/bosun/ledis_data\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "EzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.listenAddress",
                    "option_description": "<rendered-html><p>The host address and port that bosun\u2019s web interface will listen\non.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\":8070\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.opentsdbHost",
                    "option_description": "<rendered-html><p>Host and port of the OpenTSDB database that stores bosun data. To\ndisable opentsdb you can pass null as parameter.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"localhost:4242\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.package",
                    "option_description": "<rendered-html><p>The bosun package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.bosun",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.stateFile",
                    "option_description": "<rendered-html><p>Path to bosun\u2019s state file.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/lib/bosun/bosun.state\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "FzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/bosun.nix",
                    "option_name": "services.bosun.user",
                    "option_description": "<rendered-html><p>User account under which bosun runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bosun\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/botamusique.nix",
                    "option_name": "services.botamusique.enable",
                    "option_description": "<rendered-html><p>Whether to enable botamusique, a bot to play audio streams on\nmumble.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/botamusique.nix",
                    "option_name": "services.botamusique.package",
                    "option_description": "<rendered-html><p>The botamusique package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.botamusique",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/botamusique.nix",
                    "option_name": "services.botamusique.settings",
                    "option_description": "<rendered-html><p>Your <code class=\"interpreted-text\"\nrole=\"file\">configuration.ini</code> as a Nix attribute set. Look up\npossible options in the <a\nhref=\"https://github.com/azlux/botamusique/blob/master/configuration.example.ini\">configuration.example.ini</a>.</p>\n</rendered-html>",
                    "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "GzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/botamusique.nix",
                    "option_name": "services.botamusique.settings.bot.comment",
                    "option_description": "<rendered-html><p>Comment displayed for the bot.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"Hi, I'm here to play radio, local music or youtube/soundcloud music. Have fun!\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/botamusique.nix",
                    "option_name": "services.botamusique.settings.bot.username",
                    "option_description": "<rendered-html><p>Name the bot should appear with.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"botamusique\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/botamusique.nix",
                    "option_name": "services.botamusique.settings.server.host",
                    "option_description": "<rendered-html><p>Hostname of the mumble server to connect to.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": "\"mumble.example.com\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/audio/botamusique.nix",
                    "option_name": "services.botamusique.settings.server.port",
                    "option_description": "<rendered-html><p>Port of the mumble server to connect to.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "64738",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "HzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/bpftune.nix",
                    "option_name": "services.bpftune.enable",
                    "option_description": "<rendered-html><p>Whether to enable bpftune BPF driven auto-tuning.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/system/bpftune.nix",
                    "option_name": "services.bpftune.package",
                    "option_description": "<rendered-html><p>The bpftune package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.bpftune",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ITvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/brltty.nix",
                    "option_name": "services.brltty.enable",
                    "option_description": "<rendered-html><p>Whether to enable the BRLTTY daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.extraPackages",
                    "option_description": "<rendered-html><p>Extra packages for btrbk, like compression utilities for\n<code>stream_compress</code>.</p>\n<p><strong>Note</strong>: This option will get deprecated in future\nreleases. Required compression programs will get automatically provided\nto btrbk depending on configured compression method in\n<code>services.btrbk.instances.&lt;name&gt;.settings</code> option.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.xz ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "IzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.instances",
                    "option_description": "<rendered-html><p>Set of btrbk instances. The instance named <code>btrbk</code> is the\ndefault one.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.instances.<name>.onCalendar",
                    "option_description": "<rendered-html><p>How often this btrbk instance is started. See systemd.time(7) for\nmore information about the format. Setting it to null disables the\ntimer, thus this instance can only be started manually.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "\"daily\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.instances.<name>.settings",
                    "option_description": "<rendered-html><p>configuration options for btrbk. Nested attrsets translate to\nsubsections.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or instances of this type recursively)",
                    "option_default": "{ }",
                    "option_example": "{\n  snapshot_preserve = \"14d\";\n  snapshot_preserve_min = \"2d\";\n  volume = {\n    \"/mnt/btr_pool\" = {\n      subvolume = {\n        home = {\n          snapshot_create = \"always\";\n        };\n        rootfs = { };\n      };\n      target = \"/mnt/btr_backup/mylaptop\";\n    };\n  };\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.instances.<name>.settings.stream_compress",
                    "option_description": "<rendered-html><p>Compress the btrfs send stream before transferring it from/to remote\nlocations using a compression command.</p>\n</rendered-html>",
                    "option_type": "one of \"gzip\", \"pigz\", \"bzip2\", \"pbzip2\", \"bzip3\", \"xz\", \"lzo\", \"lz4\", \"zstd\", \"no\"",
                    "option_default": "\"no\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "JzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.ioSchedulingClass",
                    "option_description": "<rendered-html><p>IO scheduling class for btrbk (see ionice(1) for a quick\ndescription). Applies to local instances, and remote ones connecting by\nssh if set to idle.</p>\n</rendered-html>",
                    "option_type": "one of \"idle\", \"best-effort\", \"realtime\"",
                    "option_default": "\"best-effort\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.niceness",
                    "option_description": "<rendered-html><p>Niceness for local instances of btrbk. Also applies to remote ones\nconnecting via ssh when positive.</p>\n</rendered-html>",
                    "option_type": "integer between -20 and 19 (both inclusive)",
                    "option_default": "10",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.sshAccess",
                    "option_description": "<rendered-html><p>SSH keys that should be able to make or push snapshots on this system\nremotely with btrbk</p>\n</rendered-html>",
                    "option_type": "list of (submodule)",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.sshAccess.*.key",
                    "option_description": "<rendered-html><p>SSH public key allowed to login as user <code>btrbk</code> to run\nremote backups.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "KzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/backup/btrbk.nix",
                    "option_name": "services.btrbk.sshAccess.*.roles",
                    "option_description": "<rendered-html><p>What actions can be performed with this SSH key. See\nssh_filter_btrbk(1) for details</p>\n</rendered-html>",
                    "option_type": "list of (one of \"info\", \"source\", \"target\", \"delete\", \"snapshot\", \"send\", \"receive\")",
                    "option_default": null,
                    "option_example": "[\n  \"source\"\n  \"info\"\n  \"send\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/filesystems/btrfs.nix",
                    "option_name": "services.btrfs.autoScrub.enable",
                    "option_description": "<rendered-html><p>Whether to enable regular btrfs scrub.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/filesystems/btrfs.nix",
                    "option_name": "services.btrfs.autoScrub.fileSystems",
                    "option_description": "<rendered-html><p>List of paths to btrfs filesystems to regularly call <code\nclass=\"interpreted-text\" role=\"command\">btrfs scrub</code> on. Defaults\nto all mount points with btrfs filesystems. If you mount a filesystem\nmultiple times or additionally mount subvolumes, you need to manually\nspecify this list to avoid scrubbing multiple times.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": null,
                    "option_example": "[\n  \"/\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/tasks/filesystems/btrfs.nix",
                    "option_name": "services.btrfs.autoScrub.interval",
                    "option_description": "<rendered-html><p>Systemd calendar expression for when to scrub btrfs filesystems. The\nrecommended period is a month but could be less (<code\nclass=\"interpreted-text\" role=\"manpage\">btrfs-scrub(8)</code>). See <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.time.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.time(7)</code></a> for\nmore information on the syntax.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"monthly\"",
                    "option_example": "\"weekly\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "LzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.buildbotDir",
                    "option_description": "<rendered-html><p>Specifies the Buildbot directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.buildbot-master.home}/master\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.buildbotUrl",
                    "option_description": "<rendered-html><p>Specifies the Buildbot URL.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"http://localhost:8010/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.builders",
                    "option_description": "<rendered-html><p>List of Builders.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"util.BuilderConfig(name='runtests',workernames=['example-worker'],factory=factory)\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.changeSource",
                    "option_description": "<rendered-html><p>List of Change Sources.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"changes.GitPoller('https://github.com/buildbot/pyflakes.git', workdir='gitpoller-workdir', branch='master', pollinterval=300)\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "MzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.configurators",
                    "option_description": "<rendered-html><p>Configurator Steps, see <a\nhref=\"https://docs.buildbot.net/latest/manual/configuration/configurators.html\">https://docs.buildbot.net/latest/manual/configuration/configurators.html</a></p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"util.JanitorConfigurator(logHorizon=timedelta(weeks=4), hour=12, dayOfWeek=6)\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.dbUrl",
                    "option_description": "<rendered-html><p>Specifies the database connection string.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"sqlite:///state.sqlite\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Buildbot continuous integration server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration to append to master.cfg</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"c['buildbotNetUsageData'] = None\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "NzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.extraGroups",
                    "option_description": "<rendered-html><p>List of extra groups that the buildbot user should be a part of.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ODvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.extraImports",
                    "option_description": "<rendered-html><p>Extra python imports to prepend to master.cfg</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"from buildbot.process.project import Project\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.factorySteps",
                    "option_description": "<rendered-html><p>Factory Steps</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"steps.Git(repourl='https://github.com/buildbot/pyflakes.git', mode='incremental')\"\n  \"steps.ShellCommand(command=['trial', 'pyflakes'])\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.group",
                    "option_description": "<rendered-html><p>Primary group of buildbot user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"buildbot\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "OzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.home",
                    "option_description": "<rendered-html><p>Buildbot home directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/home/buildbot\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.listenAddress",
                    "option_description": "<rendered-html><p>Specifies the bind address on which the buildbot HTTP interface\nlistens.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"0.0.0.0\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.masterCfg",
                    "option_description": "<rendered-html><p>Optionally pass master.cfg path. Other options in this configuration\nwill be ignored.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "<rendered-html><p>generated configuration file</p>\n</rendered-html>",
                    "option_example": "\"/etc/nixos/buildbot/master.cfg\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.package",
                    "option_description": "<rendered-html><p>The buildbot-full package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.buildbot-full",
                    "option_example": "buildbot",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "PzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.packages",
                    "option_description": "<rendered-html><p>Packages to add to PATH for the buildbot process.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ pkgs.git ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.pbPort",
                    "option_description": "<rendered-html><p>The buildmaster will listen on a TCP port of your choosing for\nconnections from workers. It can also use this port for connections from\nremote Change Sources, status clients, and debug tools. This port should\nbe visible to the outside world, and you\u2019ll need to tell your worker\nadmins about your choice. If put in (single) quotes, this can also be\nused as a connection string, as defined in the <a\nhref=\"https://twistedmatrix.com/documents/current/core/howto/endpoints.html\">ConnectionStrings\nguide</a>.</p>\n</rendered-html>",
                    "option_type": "string or signed integer",
                    "option_default": "9989",
                    "option_example": "\"'tcp:9990:interface=127.0.0.1'\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.port",
                    "option_description": "<rendered-html><p>Specifies port number on which the buildbot HTTP interface\nlistens.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "8010",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.pythonPackages",
                    "option_description": "<rendered-html><p>Packages to add the to the PYTHONPATH of the buildbot process.</p>\n</rendered-html>",
                    "option_type": "function that evaluates to a(n) list of package",
                    "option_default": "pythonPackages: with pythonPackages; [ ]",
                    "option_example": "pythonPackages: with pythonPackages; [ requests ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "QzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.reporters",
                    "option_description": "<rendered-html><p>List of reporter objects used to present build status to various\nusers.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.schedulers",
                    "option_description": "<rendered-html><p>List of Schedulers.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"schedulers.SingleBranchScheduler(name='all', change_filter=util.ChangeFilter(branch='master'), treeStableTimer=None, builderNames=['runtests'])\"\n  \"schedulers.ForceScheduler(name='force',builderNames=['runtests'])\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.title",
                    "option_description": "<rendered-html><p>Specifies the Buildbot Title.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"Buildbot\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.titleUrl",
                    "option_description": "<rendered-html><p>Specifies the Buildbot TitleURL.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"Buildbot\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "RzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.user",
                    "option_description": "<rendered-html><p>User the buildbot server should execute under.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"buildbot\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/master.nix",
                    "option_name": "services.buildbot-master.workers",
                    "option_description": "<rendered-html><p>List of Workers.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"worker.Worker('example-worker', 'pass')\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "STvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.adminMessage",
                    "option_description": "<rendered-html><p>Name of the administrator of this worker</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.buildbotDir",
                    "option_description": "<rendered-html><p>Specifies the Buildbot directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"${config.services.buildbot-worker.home}/worker\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "SzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.enable",
                    "option_description": "<rendered-html><p>Whether to enable the Buildbot Worker.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.extraGroups",
                    "option_description": "<rendered-html><p>List of extra groups that the Buildbot Worker user should be a part\nof.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.group",
                    "option_description": "<rendered-html><p>Primary group of buildbot Worker user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bbworker\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.home",
                    "option_description": "<rendered-html><p>Buildbot home directory.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/home/bbworker\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "TzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.hostMessage",
                    "option_description": "<rendered-html><p>Description of this worker</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.keepalive",
                    "option_description": "<rendered-html><p>This is a number that indicates how frequently keepalive messages\nshould be sent from the worker to the buildmaster, expressed in\nseconds.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "600",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.masterUrl",
                    "option_description": "<rendered-html><p>Specifies the Buildbot Worker connection string.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost:9989\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.package",
                    "option_description": "<rendered-html><p>The buildbot-worker package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.buildbot-worker",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "UzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.packages",
                    "option_description": "<rendered-html><p>Packages to add to PATH for the buildbot process.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ pkgs.git ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.user",
                    "option_description": "<rendered-html><p>User the buildbot Worker should execute under.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"bbworker\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.workerPass",
                    "option_description": "<rendered-html><p>Specifies the Buildbot Worker password.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"pass\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.workerPassFile",
                    "option_description": "<rendered-html><p>File used to store the Buildbot Worker password</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "VzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildbot/worker.nix",
                    "option_name": "services.buildbot-worker.workerUser",
                    "option_description": "<rendered-html><p>Specifies the Buildbot Worker user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"example-worker\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents",
                    "option_description": "<rendered-html><p>Attribute set of buildkite agents. The attribute key is combined with\nthe hostname and a unique integer to create the final agent name. This\ncan be overridden by setting the <code>name</code> attribute.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.dataDir",
                    "option_description": "<rendered-html><p>The workdir for the agent</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/buildkite-agent-\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable this buildkite agent</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "WzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.extraConfig",
                    "option_description": "<rendered-html><p>Extra lines to be added verbatim to the configuration file.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"debug=true\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.extraGroups",
                    "option_description": "<rendered-html><p>Groups the user for this buildkite agent should belong to</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[\n  \"keys\"\n]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.hooks",
                    "option_description": "<rendered-html><p>\u201cAgent\u201d hooks to install. See <a\nhref=\"https://buildkite.com/docs/agent/v3/hooks\">https://buildkite.com/docs/agent/v3/hooks</a>\nfor possible options.</p>\n</rendered-html>",
                    "option_type": "attribute set of strings concatenated with \"\\n\"",
                    "option_default": "{ }",
                    "option_example": "{\n  environment = ''\n    export SECRET_VAR=`head -1 /run/keys/secret`\n  '';\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.hooksPath",
                    "option_description": "<rendered-html><p>Path to the directory storing the hooks. Consider using <code\nclass=\"interpreted-text\"\nrole=\"option\">services.buildkite-agents.&lt;name&gt;.hooks.&lt;name&gt;</code>\ninstead.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "<rendered-html><p>generated from <code class=\"interpreted-text\"\nrole=\"option\">services.buildkite-agents.&lt;name&gt;.hooks</code></p>\n</rendered-html>",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "XzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.name",
                    "option_description": "<rendered-html><p>The name of the agent as seen in the buildkite dashboard.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"%hostname-\u2039name\u203a-%n\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.package",
                    "option_description": "<rendered-html><p>Which buildkite-agent derivation to use</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.buildkite-agent",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.privateSshKeyPath",
                    "option_description": "<rendered-html><p>OpenSSH private key</p>\n<p>A run-time path to the key file, which is supposed to be provisioned\noutside of Nix store.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YjvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.runtimePackages",
                    "option_description": "<rendered-html><p>Add programs to the buildkite-agent environment</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ pkgs.bash pkgs.gnutar pkgs.gzip pkgs.git pkgs.nix ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "YzvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.shell",
                    "option_description": "<rendered-html><p>Command that buildkite-agent 3 will execute when it spawns a\nshell.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"${pkgs.bash}/bin/bash -e -c\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZDvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.tags",
                    "option_description": "<rendered-html><p>Tags for the agent.</p>\n</rendered-html>",
                    "option_type": "attribute set of (string or list of string)",
                    "option_default": "{ }",
                    "option_example": "{\n  docker = \"true\";\n  queue = \"default\";\n  ruby2 = \"true\";\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-2741b4b489b55df32afac57bc4bfd220e8bf617e",
                "_type": "_doc",
                "_id": "ZTvobZABZu4t0s2IHTGb",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/continuous-integration/buildkite-agents.nix",
                    "option_name": "services.buildkite-agents.<name>.tokenPath",
                    "option_description": "<rendered-html><p>The token from your Buildkite \u201cAgents\u201d page.</p>\n<p>A run-time path to the token file, which is supposed to be\nprovisioned outside of Nix store.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            }
        ]
    }
}